{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Square.vue?5725","webpack:///./src/Square.vue?dfa2","webpack:///src/Square.vue","webpack:///./src/Square.vue?c5c7","webpack:///./src/Square.vue?a282","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Square_vue_vue_type_style_index_0_id_69f9237b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Square_vue_vue_type_style_index_0_id_69f9237b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Squarevue_type_template_id_69f9237b_scoped_true_render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","alives","generation","victories","ref","attrs","tabindex","on","keyup","$event","type","indexOf","_k","keyCode","handleJumpTop","button","handleJumpRight","handleJumpBottom","handleJumpLeft","_l","cellValue","index","class","available","_e","investigatedMaximumCellValue","maximumCellValue","actor","id","style","gridRow","y","gridColumn","x","refInFor","staticRenderFns","isAutomaticControl","isDisplayingActors","actorsCount","researchActors","everyNWillResearcher","everyNWillResearcherCounter","Squarevue_type_script_lang_js_","model","tf_esm","training","inputs","labels","learning","actors","field","fieldSize","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setupModel","fieldSetting","actorsSetting","modelPredict","stop","arguments","methods","add","dense","inputShape","activation","units","dropout","rate","compile","optimizer","adam","loss","metrics","Math","sqrt","max","toConsumableArray","$refs","container","setProperty","_actorsSetting","_callee2","_this","_context2","undefined","$nextTick","forEach","_this$$refs$","slicedToArray","concat","actorsReset","_modelPredict","_callee4","_this2","_context4","Promise","all","map","_ref","_callee3","prediction","directionStep","_context3","getRandomPredict","predict","sent","getDirectionStep","availabilityCheck","_x","random","_ref2","_ref3","jumpTop","jumpRight","jumpBottom","jumpLeft","maximum","action","_availabilityCheck","_callee5","normalY","normalX","_context5","abrupt","saveTraining","label","getAntennaCellValues","modelFit","_x2","_ref4","topCellValue","rightCellValue","bottomCellValue","leftCellValue","_ref5","_modelFit","_callee6","_this$getBestMoves","firstInput","firstLabel","secondInput","secondLabel","thirdInput","thirdLabel","fourInput","fourLabel","fiveInput","fiveLabel","_context6","getBestMoves","fit","_this$training","fiveCellValue","fourCellValue","thirdCellValue","secondCellValue","firstCellValue","fiveIndex","fourIndex","thirdIndex","secondIndex","firstIndex","_ref6","_ref7","_handleJumpTop","_callee7","_this$actors","_context7","_handleJumpRight","_callee8","_this$actors2","_context8","_handleJumpBottom","_callee9","_this$actors3","_context9","_handleJumpLeft","_callee10","_this$actors4","_context10","src_Squarevue_type_script_lang_js_","component","componentNormalizer","Square","Vue","config","productionTip","silent","process","render","h","App","$mount"],"mappings":"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","file":"js/app.b7735c12.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Square.vue?vue&type=style&index=0&id=69f9237b&scoped=true&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Square.vue?vue&type=style&index=0&id=69f9237b&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"stat\"},[_vm._v(\"\\n    Живых: \"+_vm._s(_vm.alives)+\" | Поколений: \"+_vm._s(_vm.generation)+\" | Победы: \"+_vm._s(_vm.victories)+\"\\n  \")]),_c('div',{ref:\"container\",staticClass:\"container\",attrs:{\"tabindex\":\"0\"},on:{\"keyup\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }return _vm.handleJumpTop($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }return _vm.handleJumpRight($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }return _vm.handleJumpBottom($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.handleJumpLeft($event)}]}},[_c('div',{staticClass:\"field cells\"},_vm._l((_vm.field),function(cellValue,index){return _c('div',{key:index,class:['cell', { 'available': cellValue !== 0 }]},[(cellValue === 1)?_c('div',{staticClass:\"starting-checkpoint\"},[_vm._v(\"\\n          🥾\\n        \")]):_vm._e(),(cellValue === _vm.investigatedMaximumCellValue\n            || _vm.investigatedMaximumCellValue === _vm.maximumCellValue)?_c('div',{staticClass:\"maximum-cell-value-checkpoint\"},[_vm._v(\"\\n          🤘\\n        \")]):_vm._e(),(cellValue === _vm.maximumCellValue)?_c('div',{staticClass:\"finishing-checkpoint\"},[_vm._v(\"\\n          🧠\\n        \")]):_vm._e()])}),0),(_vm.isDisplayingActors)?_c('div',{staticClass:\"field actors\"},_vm._l((_vm.actors),function(actor){return _c('div',{key:actor.id,style:({\n          gridRow: actor.y,\n          gridColumn: actor.x,\n        })},[_c('div',{ref:(\"actors_\" + (actor.id)),refInFor:true,staticClass:\"actor\"},[_c('div',[_vm._v(\"👣️\")])])])}),0):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"stat\">\n      Живых: {{ alives }} | Поколений: {{ generation }} | Победы: {{ victories }}\n    </div>\n\n    <div\n      ref=\"container\"\n      class=\"container\"\n      tabindex=\"0\"\n      @keyup.up=\"handleJumpTop\"\n      @keyup.right=\"handleJumpRight\"\n      @keyup.down=\"handleJumpBottom\"\n      @keyup.left=\"handleJumpLeft\"\n    >\n      <div class=\"field cells\">\n        <div\n          v-for=\"(cellValue, index) in field\"\n          :key=\"index\"\n          :class=\"['cell', { 'available': cellValue !== 0 }]\"\n        >\n          <div\n            v-if=\"cellValue === 1\"\n            class=\"starting-checkpoint\"\n          >\n            🥾\n          </div>\n\n          <div\n            v-if=\"cellValue === investigatedMaximumCellValue\n              || investigatedMaximumCellValue === maximumCellValue\"\n            class=\"maximum-cell-value-checkpoint\"\n          >\n            🤘\n          </div>\n\n          <div\n            v-if=\"cellValue === maximumCellValue\"\n            class=\"finishing-checkpoint\"\n          >\n            🧠\n          </div>\n        </div>\n      </div>\n\n      <div\n        v-if=\"isDisplayingActors\"\n        class=\"field actors\"\n      >\n        <div\n          v-for=\"actor in actors\"\n          :key=\"actor.id\"\n          :style=\"{\n            gridRow: actor.y,\n            gridColumn: actor.x,\n          }\"\n        >\n          <div\n            :ref=\"`actors_${actor.id}`\"\n            class=\"actor\"\n          >\n            <div>👣️</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as tf from '@tensorflow/tfjs';\n\nconst isAutomaticControl = true;\nconst isDisplayingActors = true;\n\nconst actorsCount = 500;\nconst researchActors = 5;\nconst everyNWillResearcher = actorsCount / researchActors;\nlet everyNWillResearcherCounter = 0;\n\n/* eslint-disable no-plusplus */\nexport default {\n  name: 'Square',\n\n  data() {\n    return {\n      model: tf.sequential(),\n      // Очищаемые перед следующим поколением накопленные данные агентов для обучения.\n      training: {\n        inputs: [],\n        labels: [],\n      },\n      // Лучшие агенты в поколении из training набора на которых будет обучаться модель.\n      learning: {\n        // x, y - Координаты актёра.\n        // cellValue - Значение ячейки, до которой агент дошёл.\n        inputs: [],\n        // [1, 0, 0, 0] - Пойти на север (north).\n        // [0, 1, 0, 0] - Пойти на восток (east).\n        // [0, 0, 1, 0] - Пойти на юг (south).\n        // [0, 0, 0, 1] - Пойти на запад (west).\n        labels: [],\n      },\n      generation: 0,\n      victories: 0,\n\n      isDisplayingActors,\n      // Набор генерируемых актёров.\n      actors: [],\n      // Количество актёров оставшихся в живых.\n      alives: actorsCount,\n      // Максимальное значение пройденной ячейки.\n      investigatedMaximumCellValue: 1,\n\n      // Игровая область обязательно квадратной формы под Math.sqrt.\n      // Обязательно между доступным путём, должно быть 2 запретных ячейки\n      // из за исследовательских \"усиков\".\n      // 0 - Запретная территория.\n      // [1..N) - Проходная территория.\n      // N - Финишная точка.\n      // @formatter:off\n      /* eslint-disable no-multi-spaces */\n      field: [\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  1,  0,  0,  0,  0,  0,  0,  0, 45, 44, 43,  0,\n        0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0, 42,  0,\n        0,  3,  0,  0,  8,  9, 10, 11,  0,  0,  0, 41,  0,\n        0,  4,  5,  6,  7,  0,  0, 12,  0,  0,  0, 40,  0,\n        0,  0,  0,  0,  0,  0,  0, 13,  0,  0,  0, 39,  0,\n        0,  0,  0,  0,  0,  0, 15, 14,  0,  0,  0, 38,  0,\n        0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0, 37,  0,\n        0,  0, 21, 20, 19, 18, 17,  0,  0,  0,  0, 36,  0,\n        0,  0, 22,  0,  0,  0,  0,  0,  0, 33, 34, 35,  0,\n        0,  0, 23,  0,  0,  0,  0,  0,  0, 32,  0,  0,  0,\n        0,  0, 24, 25, 26, 27, 28, 29, 30, 31,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n      ],\n      // @formatter:on\n      /* eslint-enable no-multi-spaces */\n      fieldSize: -1,\n      maximumCellValue: -1,\n    };\n  },\n\n  async mounted() {\n    this.setupModel();\n\n    this.fieldSetting();\n    await this.actorsSetting();\n\n    if (isAutomaticControl) {\n      await this.modelPredict();\n    }\n  },\n\n  methods: {\n    setupModel() {\n      this.model.add(tf.layers.dense({\n        // Описание в learning.inputs.\n        inputShape: [3],\n        activation: 'sigmoid',\n        units: 256,\n      }));\n\n      this.model.add(tf.layers.dropout({\n        rate: 0.1,\n      }));\n\n      this.model.add(tf.layers.dense({\n        activation: 'sigmoid',\n        units: 128,\n      }));\n\n      // this.model.add(tf.layers.dropout({\n      //   rate: 0.1,\n      // }));\n      //\n      // this.model.add(tf.layers.dense({\n      //   activation: 'sigmoid',\n      //   units: 32,\n      // }));\n\n      this.model.add(tf.layers.dense({\n        activation: 'sigmoid',\n        // [north, east, south, west] - Прогноз стороны для передвижения.\n        units: 4,\n      }));\n\n      this.model.compile({\n        optimizer: tf.train.adam(0.01),\n        loss: 'meanSquaredError',\n        metrics: ['accuracy'],\n      });\n    },\n\n    fieldSetting() {\n      this.fieldSize = Math.sqrt(this.field.length);\n      this.maximumCellValue = Math.max(...this.field);\n\n      this.$refs.container.style.setProperty('--quantity-rows', this.fieldSize);\n      this.$refs.container.style.setProperty('--quantity-columns', this.fieldSize);\n    },\n\n    async actorsSetting() {\n      for (let i = 0; i < actorsCount; i++) {\n        this.actors.push({\n          id: i,\n          style: undefined,\n\n          // Сбрасываемые.\n          x: 2,\n          y: 2,\n          cellValue: 1,\n        });\n      }\n\n      if (isDisplayingActors) {\n        await this.$nextTick();\n\n        this.actors.forEach((actor) => {\n          const [{ style }] = this.$refs[`actors_${actor.id}`];\n          actor.style = style;\n        });\n      }\n    },\n\n    actorsReset() {\n      for (let i = 0; i < actorsCount; i++) {\n        this.actors[i].x = 2;\n        this.actors[i].y = 2;\n        this.actors[i].cellValue = 1;\n      }\n\n      this.alives = actorsCount;\n    },\n\n    async modelPredict() {\n      await Promise.all(this.actors.map(async (actor) => {\n        if (actor.cellValue !== 0) {\n          let prediction;\n          everyNWillResearcherCounter += 1;\n\n          if (everyNWillResearcherCounter === everyNWillResearcher) {\n            prediction = this.getRandomPredict();\n            everyNWillResearcherCounter = 0;\n          } else {\n            prediction = await this.model.predict(tf.tensor2d([\n              [\n                actor.x / this.fieldSize,\n                actor.y / this.fieldSize,\n                actor.cellValue / this.maximumCellValue,\n              ],\n            ])).data();\n\n            // console.log(\n            //   'Top', prediction[0].toFixed(10),\n            //   'Right', prediction[1].toFixed(10),\n            //   'Bottom', prediction[2].toFixed(10),\n            //   'Left', prediction[3].toFixed(10),\n            // );\n          }\n\n          const directionStep = this.getDirectionStep(prediction);\n          this[directionStep](actor);\n\n          await this.availabilityCheck(actor);\n        }\n\n        // Замедление прогноза для каждого актёра.\n        // await new Promise((resolve) => {\n        //   setTimeout(() => {\n        //     resolve();\n        //   }, 1000);\n        // });\n      }));\n\n      await this.modelPredict();\n    },\n\n    // Создание случайных решений для исследователей.\n    getRandomPredict() {\n      return [\n        Math.random(), // jumpTop\n        Math.random(), // jumpRight\n        Math.random(), // jumpBottom\n        Math.random(), // jumpLeft\n      ];\n    },\n\n    getDirectionStep([jumpTop, jumpRight, jumpBottom, jumpLeft]) {\n      let maximum = jumpTop;\n      let action = 'jumpTop';\n\n      if (jumpRight > maximum) {\n        maximum = jumpRight;\n        action = 'jumpRight';\n      }\n\n      if (jumpBottom > maximum) {\n        maximum = jumpBottom;\n        action = 'jumpBottom';\n      }\n\n      if (jumpLeft > maximum) {\n        // maximum = jumpLeft;\n        action = 'jumpLeft';\n      }\n\n      return action;\n    },\n\n    jumpTop(actor) {\n      actor.y -= 1;\n    },\n\n    jumpRight(actor) {\n      actor.x += 1;\n    },\n\n    jumpBottom(actor) {\n      actor.y += 1;\n    },\n\n    jumpLeft(actor) {\n      actor.x -= 1;\n    },\n\n    async availabilityCheck(actor) {\n      // Смещение на -1: Сетка начинается с 1, а значения в массиве начинаются с 0.\n      const normalY = actor.y - 1;\n      const normalX = actor.x - 1;\n      const cellValue = this.field[normalY * this.fieldSize + normalX];\n\n      // Предотвращение зацикливания. Актёр не должен двигаться в обратном направлении.\n      if (cellValue > actor.cellValue) {\n        actor.cellValue = cellValue;\n\n        if (cellValue > this.investigatedMaximumCellValue) {\n          this.investigatedMaximumCellValue = cellValue;\n        }\n\n        if (cellValue === this.maximumCellValue) {\n          this.victories += 1;\n          await this.actorsReset();\n          return;\n        }\n      } else {\n        actor.cellValue = 0;\n        this.alives -= 1;\n      }\n\n      this.saveTraining({ actor, label: this.getAntennaCellValues({ normalX, normalY }) });\n\n      if (this.alives === 0) {\n        await this.modelFit();\n      }\n    },\n\n    // Получение значения ячейки, чем дальше ячейка от старта, тем больше там значение.\n    getAntennaCellValues({ normalX, normalY }) {\n      // 0 - когда выходит за пределы поля (дальше пути нет).\n      const topCellValue = this.field[(normalY - 1) * this.fieldSize + normalX] || 0;\n      const rightCellValue = this.field[normalY * this.fieldSize + (normalX + 1)] || 0;\n      const bottomCellValue = this.field[(normalY + 1) * this.fieldSize + normalX] || 0;\n      const leftCellValue = this.field[normalY * this.fieldSize + (normalX - 1)] || 0;\n\n      return [\n        topCellValue / this.maximumCellValue,\n        rightCellValue / this.maximumCellValue,\n        bottomCellValue / this.maximumCellValue,\n        leftCellValue / this.maximumCellValue,\n      ];\n    },\n\n    saveTraining({ actor, label }) {\n      this.training.inputs.push([\n        actor.x / this.fieldSize,\n        actor.y / this.fieldSize,\n        actor.cellValue / this.maximumCellValue,\n      ]);\n\n      this.training.labels.push(label);\n    },\n\n    async modelFit() {\n      const {\n        firstInput,\n        firstLabel,\n\n        secondInput,\n        secondLabel,\n\n        thirdInput,\n        thirdLabel,\n\n        fourInput,\n        fourLabel,\n\n        fiveInput,\n        fiveLabel,\n      } = this.getBestMoves();\n\n      this.learning.inputs.push(\n        firstInput,\n        secondInput,\n        thirdInput,\n        fourInput,\n        fiveInput,\n      );\n\n      this.learning.labels.push(\n        firstLabel,\n        secondLabel,\n        thirdLabel,\n        fourLabel,\n        fiveLabel,\n      );\n\n      await this.model.fit(\n        tf.tensor2d(this.learning.inputs),\n        tf.tensor2d(this.learning.labels),\n      );\n\n      this.generation += 1;\n      await this.actorsReset();\n    },\n\n    getBestMoves() {\n      const { inputs, labels } = this.training;\n      this.training = { inputs: [], labels: [] };\n\n      let fiveCellValue = -1;\n      let fourCellValue = -1;\n      let thirdCellValue = -1;\n      let secondCellValue = -1;\n      let firstCellValue = -1;\n\n      let fiveIndex = -1;\n      let fourIndex = -1;\n      let thirdIndex = -1;\n      let secondIndex = -1;\n      let firstIndex = -1;\n\n      inputs.forEach(([, , cellValue], index) => {\n        switch (true) {\n          case cellValue > firstCellValue:\n            fiveCellValue = fourCellValue;\n            fourCellValue = thirdCellValue;\n            thirdCellValue = secondCellValue;\n            secondCellValue = firstCellValue;\n            firstCellValue = cellValue;\n\n            fiveIndex = fourIndex;\n            fourIndex = thirdIndex;\n            thirdIndex = secondIndex;\n            secondIndex = firstIndex;\n            firstIndex = index;\n            break;\n\n          case cellValue > secondCellValue:\n            fiveCellValue = fourCellValue;\n            fourCellValue = thirdCellValue;\n            thirdCellValue = secondCellValue;\n            secondCellValue = cellValue;\n\n            fiveIndex = fourIndex;\n            fourIndex = thirdIndex;\n            thirdIndex = secondIndex;\n            secondIndex = index;\n            break;\n\n          case cellValue > thirdCellValue:\n            fiveCellValue = fourCellValue;\n            fourCellValue = thirdCellValue;\n            thirdCellValue = cellValue;\n\n            fiveIndex = fourIndex;\n            fourIndex = thirdIndex;\n            thirdIndex = index;\n            break;\n\n          case cellValue > fourCellValue:\n            fiveCellValue = fourCellValue;\n            fourCellValue = cellValue;\n\n            fiveIndex = fourIndex;\n            fourIndex = index;\n            break;\n\n          case cellValue > fiveCellValue:\n            fiveCellValue = cellValue;\n\n            fiveIndex = index;\n            break;\n\n          default:\n        }\n      });\n\n      return {\n        firstInput: inputs[firstIndex],\n        firstLabel: labels[firstIndex],\n\n        secondInput: inputs[secondIndex],\n        secondLabel: labels[secondIndex],\n\n        thirdInput: inputs[thirdIndex],\n        thirdLabel: labels[thirdIndex],\n\n        fourInput: inputs[fourIndex],\n        fourLabel: labels[fourIndex],\n\n        fiveInput: inputs[fiveIndex],\n        fiveLabel: labels[fiveIndex],\n      };\n    },\n\n    // Специально для ручного управления.\n    async handleJumpTop() {\n      const [actor] = this.actors;\n\n      this.jumpTop(actor);\n      await this.availabilityCheck(actor);\n    },\n\n    async handleJumpRight() {\n      const [actor] = this.actors;\n\n      this.jumpRight(actor);\n      await this.availabilityCheck(actor);\n    },\n\n    async handleJumpBottom() {\n      const [actor] = this.actors;\n\n      this.jumpBottom(actor);\n      await this.availabilityCheck(actor);\n    },\n\n    async handleJumpLeft() {\n      const [actor] = this.actors;\n\n      this.jumpLeft(actor);\n      await this.availabilityCheck(actor);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.stat {\n  position: absolute;\n  margin-top: 1rem;\n  width: 100%;\n  text-align: center;\n  font-size: 1.2rem;\n  color: white;\n}\n\n.container {\n  --quantity-rows: -1;\n  --quantity-columns: -1;\n  --square-size: 3rem;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  outline: none;\n  user-select: none;\n}\n\n.field {\n  display: grid;\n  grid-template-rows: repeat(var(--quantity-rows), var(--square-size));\n  grid-template-columns: repeat(var(--quantity-columns), var(--square-size));\n  grid-gap: 0.5rem;\n}\n\n.cells {\n}\n\n.cell {\n  position: relative;\n  background-color: #222;\n}\n\n.available {\n  background-color: darkcyan;\n}\n\n.starting-checkpoint,\n.maximum-cell-value-checkpoint,\n.finishing-checkpoint {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  font-size: 2rem;\n  background-color: seagreen;\n  outline: 0.5rem dashed seagreen;\n}\n\n.maximum-cell-value-checkpoint {\n  background-color: brown;\n  outline: 0.5rem dashed brown;\n}\n\n.actors {\n  position: absolute;\n}\n\n.actor {\n  height: 100%;\n  text-align: center;\n  font-size: 2rem;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Square.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Square.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Square.vue?vue&type=template&id=69f9237b&scoped=true&\"\nimport script from \"./Square.vue?vue&type=script&lang=js&\"\nexport * from \"./Square.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Square.vue?vue&type=style&index=0&id=69f9237b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"69f9237b\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\n\n// import App from './Bird.vue';\nimport App from './Square.vue';\n// import App from './TicTacToe.vue';\n\nVue.config.productionTip = false;\nVue.config.silent = process.env.NODE_ENV === 'production';\n\nnew Vue({ render: h => h(App) }).$mount('#app');\n"],"sourceRoot":""}