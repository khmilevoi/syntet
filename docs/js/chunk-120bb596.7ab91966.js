(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-120bb596"],{"04b8":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},"057f":function(t,e,n){var r=n("fc6a"),s=n("241c").f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],o=function(t){try{return s(t)}catch(e){return i.slice()}};t.exports.f=function(t){return i&&"[object Window]"==a.call(t)?o(t):s(r(t))}},"06c5":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n("a630"),n("fb6a"),n("0d03"),n("b0c0"),n("d3b7"),n("25f0"),n("3ca3");var r=n("6b75");function s(t,e){if(t){if("string"===typeof t)return Object(r["a"])(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r["a"])(t,e):void 0}}},"07d6":function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},"0d03":function(t,e,n){var r=n("6eeb"),s=Date.prototype,a="Invalid Date",i="toString",o=s[i],u=s.getTime;new Date(NaN)+""!=a&&r(s,i,(function(){var t=u.call(this);return t===t?o.call(this):a}))},1:function(t,e){},"113e":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},1212:function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this,n=l();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}function l(){var t=4022871197,e=function(e){e=e.toString();for(var n=0;n<e.length;n++){t+=e.charCodeAt(n);var r=.02519603282416938*t;t=r>>>0,r-=t,r*=t,t=r>>>0,r-=t,t+=4294967296*r}return 2.3283064365386963e-10*(t>>>0)};return e}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.alea=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},"159b":function(t,e,n){var r=n("da84"),s=n("fdbc"),a=n("17c2"),i=n("9112");for(var o in s){var u=r[o],l=u&&u.prototype;if(l&&l.forEach!==a)try{i(l,"forEach",a)}catch(c){l.forEach=a}}},"17c2":function(t,e,n){"use strict";var r=n("b727").forEach,s=n("a640"),a=n("ae40"),i=s("forEach"),o=a("forEach");t.exports=i&&o?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},"1da1":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n("d3b7"),n("e6cf");function r(t,e,n,r,s,a,i){try{var o=t[a](i),u=o.value}catch(l){return void n(l)}o.done?e(u):Promise.resolve(u).then(r,s)}function s(t){return function(){var e=this,n=arguments;return new Promise((function(s,a){var i=t.apply(e,n);function o(t){r(i,s,a,o,u,"next",t)}function u(t){r(i,s,a,o,u,"throw",t)}o(void 0)}))}}},"1dde":function(t,e,n){var r=n("d039"),s=n("b622"),a=n("2d00"),i=s("species");t.exports=function(t){return a>=51||!r((function(){var e=[],n=e.constructor={};return n[i]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},"1fb5":function(t,e,n){"use strict";e.byteLength=c,e.toByteArray=d,e.fromByteArray=m;for(var r=[],s=[],a="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],s[i.charCodeAt(o)]=o;function l(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");-1===n&&(n=e);var r=n===e?0:4-n%4;return[n,r]}function c(t){var e=l(t),n=e[0],r=e[1];return 3*(n+r)/4-r}function h(t,e,n){return 3*(e+n)/4-n}function d(t){var e,n,r=l(t),i=r[0],o=r[1],u=new a(h(t,i,o)),c=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)e=s[t.charCodeAt(n)]<<18|s[t.charCodeAt(n+1)]<<12|s[t.charCodeAt(n+2)]<<6|s[t.charCodeAt(n+3)],u[c++]=e>>16&255,u[c++]=e>>8&255,u[c++]=255&e;return 2===o&&(e=s[t.charCodeAt(n)]<<2|s[t.charCodeAt(n+1)]>>4,u[c++]=255&e),1===o&&(e=s[t.charCodeAt(n)]<<10|s[t.charCodeAt(n+1)]<<4|s[t.charCodeAt(n+2)]>>2,u[c++]=e>>8&255,u[c++]=255&e),u}function p(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function f(t,e,n){for(var r,s=[],a=e;a<n;a+=3)r=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),s.push(p(r));return s.join("")}function m(t){for(var e,n=t.length,s=n%3,a=[],i=16383,o=0,u=n-s;o<u;o+=i)a.push(f(t,o,o+i>u?u:o+i));return 1===s?(e=t[n-1],a.push(r[e>>2]+r[e<<4&63]+"==")):2===s&&(e=(t[n-2]<<8)+t[n-1],a.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),a.join("")}s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},2:function(t,e){},"23bf":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,s,a,i,o;n.d(e,"b",(function(){return l})),n.d(e,"a",(function(){return c})),function(t){t["R0"]="R0",t["R1"]="R1",t["R2"]="R2",t["R3"]="R3",t["R4"]="R4",t["R5"]="R5",t["R6"]="R6"}(r||(r={})),function(t){t["float32"]="float32",t["int32"]="int32",t["bool"]="int32",t["complex64"]="complex64"}(s||(s={})),function(t){t["float32"]="float32",t["int32"]="int32",t["bool"]="bool",t["complex64"]="complex64"}(a||(a={})),function(t){t["float32"]="float32",t["int32"]="float32",t["bool"]="float32",t["complex64"]="complex64"}(i||(i={})),function(t){t["float32"]="complex64",t["int32"]="complex64",t["bool"]="complex64",t["complex64"]="complex64"}(o||(o={}));const u={float32:i,int32:s,bool:a,complex64:o};function l(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function c(t){return l(t,"int32")}},"25f0":function(t,e,n){"use strict";var r=n("6eeb"),s=n("825a"),a=n("d039"),i=n("ad6d"),o="toString",u=RegExp.prototype,l=u[o],c=a((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),h=l.name!=o;(c||h)&&r(RegExp.prototype,o,(function(){var t=s(this),e=String(t.source),n=t.flags,r=String(void 0===n&&t instanceof RegExp&&!("flags"in u)?i.call(t):n);return"/"+e+"/"+r}),{unsafe:!0})},"277d":function(t,e,n){var r=n("23e7"),s=n("e8b5");r({target:"Array",stat:!0},{isArray:s})},"298a":function(t,e,n){"use strict";n.d(e,"a",(function(){return v})),n.d(e,"b",(function(){return C})),n.d(e,"c",(function(){return x})),n.d(e,"e",(function(){return I})),n.d(e,"f",(function(){return h})),n.d(e,"g",(function(){return l})),n.d(e,"h",(function(){return d})),n.d(e,"i",(function(){return p})),n.d(e,"j",(function(){return f})),n.d(e,"k",(function(){return m})),n.d(e,"l",(function(){return g})),n.d(e,"m",(function(){return b})),n.d(e,"n",(function(){return y})),n.d(e,"o",(function(){return w})),n.d(e,"d",(function(){return k})),n.d(e,"p",(function(){return N}));var r=n("6ae2"),s=n("b333"),a=n("a3f7"),i=n("eb7e"),o=n("a677"),u=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e,n){const r=Object(a["c"])(t,n);return c(t,e,r,n)}function c(t,e,n,a){if(null==a&&(a=Object(i["inferDtype"])(t)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(i["isTypedArray"])(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(i["assertNonNegativeIntegerDimensions"])(e);const t=Object(i["sizeFromShape"])(e),r=Object(i["sizeFromShape"])(n);Object(i["assert"])(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==Object(i["sizeFromShape"])(e.slice(s));Object(i["assert"])(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(i["isTypedArray"])(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?Object(i["toTypedArray"])(t,a,Object(s["b"])().getBool("DEBUG")):Object(i["flatten"])(t,[],!0),r["a"].makeTensor(t,e,a)}function h(t,e){if((Object(i["isTypedArray"])(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(i["isTypedArray"])(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return c(t,n,r,e)}function d(t,e){Object(i["assertNonNull"])(t);const n=Object(a["c"])(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return c(t,r,n,e)}function p(t,e,n){if(Object(i["assertNonNull"])(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(a["c"])(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return c(t,e,r,n)}function f(t,e,n){if(Object(i["assertNonNull"])(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(a["c"])(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return c(t,e,r,n)}function m(t,e,n){if(Object(i["assertNonNull"])(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(a["c"])(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return c(t,e,r,n)}function g(t,e,n){if(Object(i["assertNonNull"])(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(a["c"])(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return c(t,e,r,n)}function b(t,e,n){if(Object(i["assertNonNull"])(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(a["c"])(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,c(t,e,r,n)}function y(t,e=!0,n,s){return r["a"].makeVariable(t,e,n,s)}function x(t,e="float32"){if("complex64"===e){const e=x(t,"float32"),n=w(t,"float32");return Object(o["a"])(e,n)}const n=Object(i["makeOnesTypedArray"])(Object(i["sizeFromShape"])(t),e);return r["a"].makeTensor(n,t,e)}function w(t,e="float32"){if("complex64"===e){const e=w(t,"float32"),n=w(t,"float32");return Object(o["a"])(e,n)}const n=Object(i["makeZerosTypedArray"])(Object(i["sizeFromShape"])(t),e);return r["a"].makeTensor(n,t,e)}function v(t,e,n){return r["a"].runKernelFunc(r=>r.fill(t,e,n),{})}function O(t){const e=Object(a["a"])(t,"x","onesLike");if("complex64"===e.dtype){const t=k(Object(o["c"])(e)),n=N(Object(o["b"])(e));return Object(o["a"])(t,n)}const n=(t,e)=>({x:()=>N(t)});return r["a"].runKernelFunc(t=>t.onesLike(e),{x:e},n,"OnesLike")}function S(t){const e=Object(a["a"])(t,"x","zerosLike"),n=(t,e)=>({x:()=>N(t)});return r["a"].runKernelFunc(t=>t.zerosLike(e),{x:e},n,"ZerosLike")}function C(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");return r["a"].runKernelFunc(r=>r.linspace(t,e,n),{})}function I(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s=t===e,a=t<e&&n<0,o=e<t&&n>1;if(s||a||o)return w([0],r);const u=Math.abs(Math.ceil((e-t)/n)),l=Object(i["makeZerosTypedArray"])(u,r);e<t&&1===n&&(n=-1),l[0]=t;for(let i=1;i<l.length;i++)l[i]=l[i-1]+n;return d(l,r)}const k=Object(u["a"])({onesLike_:O}),N=Object(u["a"])({zerosLike_:S})},"29a8":function(t,e,n){"use strict";(function(t){var e=n("7ed6"),r=n("b333");
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(r["b"])();s.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),s.registerFlag("IS_BROWSER",()=>e["isBrowser"]()),s.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),s.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),s.registerFlag("PROD",()=>!1),s.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>s.getBool("DEBUG")),s.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),s.registerFlag("IS_TEST",()=>!1)}).call(this,n("4362"))},"29d8":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},3:function(t,e){},"31bb":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}]},"34d7":function(t,e,n){"use strict";n.d(e,"b",(function(){return p})),n.d(e,"f",(function(){return b})),n.d(e,"e",(function(){return y})),n.d(e,"d",(function(){return x})),n.d(e,"a",(function(){return w})),n.d(e,"c",(function(){return v}));var r=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s=20,a=3,i=7;function o(t,e,n,s){const a=Object(r["computeStrides"])(e),i=u(t,e,n,a),o=e.length,l=h(t,e,n,a,i),c=["Tensor"];return s&&(c.push("  dtype: "+n),c.push("  rank: "+o),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(l.map(t=>"    "+t).join("\n")),c.join("\n")}function u(t,e,n,s){const a=Object(r["sizeFromShape"])(e),i=s[s.length-1],o=new Array(i).fill(0),u=e.length,c="complex64"===n?d(t):t;if(u>1)for(let r=0;r<a/i;r++){const t=r*i;for(let e=0;e<i;e++)o[e]=Math.max(o[e],l(c[t+e],0,n).length)}return o}function l(t,e,n){let s;return s=Array.isArray(t)?parseFloat(t[0].toFixed(i))+" + "+parseFloat(t[1].toFixed(i))+"j":Object(r["isString"])(t)?`'${t}'`:"bool"===n?c(t):parseFloat(t.toFixed(i)).toString(),Object(r["rightPad"])(s,e)}function c(t){return 0===t?"false":"true"}function h(t,e,n,r,i,o=!0){const u="complex64"===n?2:1,p=e[0],f=e.length;if(0===f){if("complex64"===n){const e=d(t);return[l(e[0],0,n)]}return"bool"===n?[c(t[0])]:[t[0].toString()]}if(1===f){if(p>s){const e=a*u;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((p-a)*u,p*u));return"complex64"===n&&(r=d(r),s=d(s)),["["+r.map((t,e)=>l(t,i[e],n)).join(", ")+", ..., "+s.map((t,e)=>l(t,i[p-a+e],n)).join(", ")+"]"]}const e="complex64"===n?d(t):Array.from(t);return["["+e.map((t,e)=>l(t,i[e],n)).join(", ")+"]"]}const m=e.slice(1),g=r.slice(1),b=r[0]*u,y=[];if(p>s){for(let e=0;e<a;e++){const r=e*b,s=r+b;y.push(...h(t.slice(r,s),m,n,g,i,!1))}y.push("...");for(let e=p-a;e<p;e++){const r=e*b,s=r+b;y.push(...h(t.slice(r,s),m,n,g,i,e===p-1))}}else for(let s=0;s<p;s++){const e=s*b,r=e+b;y.push(...h(t.slice(e,r),m,n,g,i,s===p-1))}const x=2===f?",":"";y[0]="["+y[0]+x;for(let s=1;s<y.length-1;s++)y[s]=" "+y[s]+x;let w=",\n";for(let s=2;s<f;s++)w+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(o?"":w),y}function d(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r["sizeFromShape"](t),null!=n){const t=n.length;r["assert"](t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r["getArrayFromDType"](e,this.size),this.strides=Object(r["computeStrides"])(t)}set(t,...e){0===e.length&&(e=[0]),r["assert"](e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return f().makeTensor(this.values,this.shape,this.dtype)}}let f=null,m=null,g=null;function b(t){f=t}function y(t){m=t}function x(t){g=t}class w{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r["sizeFromShape"](t),this.strides=Object(r["computeStrides"])(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}flatten(){return this.throwIfDisposed(),this.as1D()}asScalar(){return this.throwIfDisposed(),r["assert"](1===this.size,()=>"The array must have only 1 element."),this.reshape([])}as1D(){return this.throwIfDisposed(),this.reshape([this.size])}as2D(t,e){return this.throwIfDisposed(),this.reshape([t,e])}as3D(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])}as4D(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])}as5D(t,e,n,r,s){return this.throwIfDisposed(),this.reshape([t,e,n,r,s])}asType(t){return this.throwIfDisposed(),m.cast(this,t)}get rank(){return this.shape.length}async buffer(){const t=await this.data();return m.buffer(this.shape,this.dtype,t)}bufferSync(){return m.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r["toNestedArray"])(this.shape,t)}arraySync(){return Object(r["toNestedArray"])(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=f().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>r["decodeString"](t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=f().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>r["decodeString"](t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await f().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(f().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}toFloat(){return this.asType("float32")}toInt(){return this.asType("int32")}toBool(){return this.asType("bool")}print(t=!1){return m.print(this,t)}reshape(t){return this.throwIfDisposed(),m.reshape(this,t)}reshapeAs(t){return this.throwIfDisposed(),this.reshape(t.shape)}expandDims(t=0){return m.expandDims(this,t)}cumsum(t=0,e=!1,n=!1){return m.cumsum(this,t,e,n)}squeeze(t){return this.throwIfDisposed(),m.squeeze(this,t)}clone(){return this.throwIfDisposed(),m.clone(this)}toString(t=!1){const e=this.dataSync();return o(e,this.shape,this.dtype,t)}gather(t,e=0){return this.throwIfDisposed(),m.gather(this,t,e)}norm(t="euclidean",e=null,n=!1){return this.throwIfDisposed(),m.norm(this,t,e,n)}slice(t,e){return this.throwIfDisposed(),m.slice(this,t,e)}reverse(t){return this.throwIfDisposed(),m.reverse(this,t)}stack(t,e=0){return m.stack([this,t],e)}unstack(t=0){return m.unstack(this,t)}all(t=null,e=!1){return this.throwIfDisposed(),m.all(this,t,e)}any(t=null,e=!1){return this.throwIfDisposed(),m.any(this,t,e)}logSumExp(t=null,e=!1){return this.throwIfDisposed(),m.logSumExp(this,t,e)}sum(t=null,e=!1){return this.throwIfDisposed(),m.sum(this,t,e)}prod(t=null,e=!1){return this.throwIfDisposed(),m.prod(this,t,e)}mean(t=null,e=!1){return this.throwIfDisposed(),m.mean(this,t,e)}min(t=null,e=!1){return this.throwIfDisposed(),m.min(this,t,e)}argMin(t=null){return this.throwIfDisposed(),m.argMin(this,t)}argMax(t=null){return this.throwIfDisposed(),m.argMax(this,t)}cast(t){return this.throwIfDisposed(),m.cast(this,t)}addStrict(t){return this.throwIfDisposed(),m.addStrict(this,t)}atan2(t){return this.throwIfDisposed(),m.atan2(this,t)}subStrict(t){return this.throwIfDisposed(),m.subStrict(this,t)}pow(t){return this.throwIfDisposed(),m.pow(this,t)}powStrict(t){return this.throwIfDisposed(),m.powStrict(this,t)}mul(t){return this.throwIfDisposed(),m.mul(this,t)}mulStrict(t){return this.throwIfDisposed(),m.mulStrict(this,t)}floorDiv(t){return this.throwIfDisposed(),m.floorDiv(this,t)}divStrict(t){return this.throwIfDisposed(),m.divStrict(this,t)}minimum(t){return this.throwIfDisposed(),m.minimum(this,t)}minimumStrict(t){return this.throwIfDisposed(),m.minimumStrict(this,t)}maximum(t){return this.throwIfDisposed(),m.maximum(this,t)}maximumStrict(t){return this.throwIfDisposed(),m.maximumStrict(this,t)}mod(t){return this.throwIfDisposed(),m.mod(this,t)}modStrict(t){return this.throwIfDisposed(),m.modStrict(this,t)}squaredDifferenceStrict(t){return this.throwIfDisposed(),m.squaredDifferenceStrict(this,t)}notEqualStrict(t){return this.throwIfDisposed(),m.notEqualStrict(this,t)}lessStrict(t){return this.throwIfDisposed(),m.lessStrict(this,t)}equalStrict(t){return this.throwIfDisposed(),m.equalStrict(this,t)}lessEqualStrict(t){return this.throwIfDisposed(),m.lessEqualStrict(this,t)}greaterStrict(t){return this.throwIfDisposed(),m.greaterStrict(this,t)}greaterEqualStrict(t){return this.throwIfDisposed(),m.greaterEqualStrict(this,t)}logicalAnd(t){return this.throwIfDisposed(),m.logicalAnd(this,t)}logicalOr(t){return this.throwIfDisposed(),m.logicalOr(this,t)}logicalNot(){return this.throwIfDisposed(),m.logicalNot(this)}logicalXor(t){return this.throwIfDisposed(),m.logicalXor(this,t)}where(t,e){return this.throwIfDisposed(),m.where(t,this,e)}neg(){return this.throwIfDisposed(),m.neg(this)}ceil(){return this.throwIfDisposed(),m.ceil(this)}floor(){return this.throwIfDisposed(),m.floor(this)}sign(){return this.throwIfDisposed(),m.sign(this)}isNaN(){return this.throwIfDisposed(),m.isNaN(this)}isInf(){return this.throwIfDisposed(),m.isInf(this)}isFinite(){return this.throwIfDisposed(),m.isFinite(this)}exp(){return this.throwIfDisposed(),m.exp(this)}expm1(){return this.throwIfDisposed(),m.expm1(this)}log(){return this.throwIfDisposed(),m.log(this)}log1p(){return this.throwIfDisposed(),m.log1p(this)}sqrt(){return this.throwIfDisposed(),m.sqrt(this)}rsqrt(){return this.throwIfDisposed(),m.rsqrt(this)}square(){return this.throwIfDisposed(),m.square(this)}reciprocal(){return this.throwIfDisposed(),m.reciprocal(this)}abs(){return this.throwIfDisposed(),m.abs(this)}clipByValue(t,e){return this.throwIfDisposed(),m.clipByValue(this,t,e)}relu(){return this.throwIfDisposed(),m.relu(this)}relu6(){return this.throwIfDisposed(),m.relu6(this)}elu(){return this.throwIfDisposed(),m.elu(this)}selu(){return this.throwIfDisposed(),m.selu(this)}leakyRelu(t=.2){return this.throwIfDisposed(),m.leakyRelu(this,t)}prelu(t){return this.throwIfDisposed(),m.prelu(this,t)}sigmoid(){return this.throwIfDisposed(),m.sigmoid(this)}logSigmoid(){return this.throwIfDisposed(),m.logSigmoid(this)}softplus(){return this.throwIfDisposed(),m.softplus(this)}zerosLike(){return this.throwIfDisposed(),m.zerosLike(this)}onesLike(){return this.throwIfDisposed(),m.onesLike(this)}sin(){return this.throwIfDisposed(),m.sin(this)}cos(){return this.throwIfDisposed(),m.cos(this)}tan(){return this.throwIfDisposed(),m.tan(this)}asin(){return this.throwIfDisposed(),m.asin(this)}acos(){return this.throwIfDisposed(),m.acos(this)}atan(){return this.throwIfDisposed(),m.atan(this)}sinh(){return this.throwIfDisposed(),m.sinh(this)}cosh(){return this.throwIfDisposed(),m.cosh(this)}tanh(){return this.throwIfDisposed(),m.tanh(this)}asinh(){return this.throwIfDisposed(),m.asinh(this)}acosh(){return this.throwIfDisposed(),m.acosh(this)}atanh(){return this.throwIfDisposed(),m.atanh(this)}erf(){return this.throwIfDisposed(),m.erf(this)}round(){return this.throwIfDisposed(),m.round(this)}step(t=0){return this.throwIfDisposed(),m.step(this,t)}softmax(t=-1){return this.throwIfDisposed(),m.softmax(this,t)}logSoftmax(t=-1){return this.throwIfDisposed(),m.logSoftmax(this,t)}resizeBilinear(t,e=!1){return this.throwIfDisposed(),m.image.resizeBilinear(this,t,e)}resizeNearestNeighbor(t,e=!1){return this.throwIfDisposed(),m.image.resizeNearestNeighbor(this,t,e)}avgPool(t,e,n,r){return this.throwIfDisposed(),m.avgPool(this,t,e,n,r)}maxPool(t,e,n,r){return this.throwIfDisposed(),m.maxPool(this,t,e,n,r)}pool(t,e,n,r,s){return this.throwIfDisposed(),m.pool(this,t,e,n,r,s)}variable(t=!0,e,n){return this.throwIfDisposed(),f().makeVariable(this,t,e,n)}unsortedSegmentSum(t,e){return this.throwIfDisposed(),m.unsortedSegmentSum(this,t,e)}topk(t=1,e=!0){return this.throwIfDisposed(),m.topk(this,t,e)}stridedSlice(t,e,n,r=0,s=0,a=0,i=0,o=0){return this.throwIfDisposed(),m.stridedSlice(this,t,e,n,r,s,a,i,o)}fft(){return this.throwIfDisposed(),m.spectral.fft(this)}ifft(){return this.throwIfDisposed(),m.spectral.ifft(this)}rfft(){return this.throwIfDisposed(),m.spectral.rfft(this)}irfft(){return this.throwIfDisposed(),m.spectral.irfft(this)}}Object.defineProperty(w,Symbol.hasInstance,{value:t=>!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype});class v extends w{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r["arraysEqual"](t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);f().disposeTensor(this),this.dataId=t.dataId,f().incRef(this,null)}dispose(){f().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:t=>t instanceof w&&null!=t.assign&&t.assign instanceof Function})},"350f":function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return g}));var r=n("298a"),s=n("eb7e"),a=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=4;async function o(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let o=0;o<s.length;++o){const a=s[o],u=Array.isArray(t)?t[o].tensor:t[a];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const l={name:a,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){const t=new Promise(async t=>{const e=await u.bytes(),n=e.reduce((t,e)=>t+e.length,0)+i*e.length,r=new Uint8Array(n);let s=0;for(let a=0;a<e.length;a++){const t=e[a],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,s),s+=i,r.set(t,s),s+=t.length}t(r)});r.push(t)}else r.push(u.data());null!=e&&(l.group=e),n.push(l)}const a=await Promise.all(r);return{data:l(a),specs:n}}function u(t,e){const n={};let o=0;for(const u of e){const e=u.name,l=u.dtype,c=u.shape,h=Object(s["sizeFromShape"])(c);let d;if("quantization"in u){const n=u.quantization;if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Weight ${u.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8' and 'uint16'.`);const r=a["a"][n.dtype],s=t.slice(o,o+h*r),i="uint8"===n.dtype?new Uint8Array(s):new Uint16Array(s);if("float32"===l){d=new Float32Array(i.length);for(let t=0;t<i.length;t++){const e=i[t];d[t]=e*n.scale+n.min}}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);d=new Int32Array(i.length);for(let t=0;t<i.length;t++){const e=i[t];d[t]=Math.round(e*n.scale+n.min)}}o+=h*r}else if("string"===l){const e=Object(s["sizeFromShape"])(u.shape);d=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(o,o+i))[0];o+=i;const n=new Uint8Array(t.slice(o,o+e));d.push(n),o+=e}}else{const n=a["a"][l],r=t.slice(o,o+h*n);if("float32"===l)d=new Float32Array(r);else if("int32"===l)d=new Int32Array(r);else{if("bool"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);d=new Uint8Array(r)}o+=h*n}n[e]=Object(r["g"])(d,c,l)}return n}function l(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}const c="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function h(e){return c?t.byteLength(e):new Blob([e]).size}function d(e){if(c)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,s=n.length;t<s;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(c){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){const e="/";t=t.trim();while(t.endsWith(e))t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function g(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:h(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:h(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}}).call(this,n("b639").Buffer)},"3bfc":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},"3c35":function(t,e){(function(e){t.exports=e}).call(this,{})},"3ca3":function(t,e,n){"use strict";var r=n("6547").charAt,s=n("69f3"),a=n("7dd0"),i="String Iterator",o=s.set,u=s.getterFor(i);a(String,"String",(function(t){o(this,{type:i,string:String(t),index:0})}),(function(){var t,e=u(this),n=e.string,s=e.index;return s>=n.length?{value:void 0,done:!0}:(t=r(n,s),e.index+=t.length,{value:t,done:!1})}))},"3d50":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},4:function(t,e){},4160:function(t,e,n){"use strict";var r=n("23e7"),s=n("17c2");r({target:"Array",proto:!0,forced:[].forEach!=s},{forEach:s})},4362:function(t,e,n){e.nextTick=function(t){var e=Array.prototype.slice.call(arguments);e.shift(),setTimeout((function(){t.apply(null,e)}),0)},e.platform=e.arch=e.execPath=e.title="browser",e.pid=1,e.browser=!0,e.env={},e.argv=[],e.binding=function(t){throw new Error("No such module. (Possibly not yet loaded)")},function(){var t,r="/";e.cwd=function(){return r},e.chdir=function(e){t||(t=n("df7c")),r=t.resolve(e,r)}}(),e.exit=e.kill=e.umask=e.dlopen=e.uptime=e.memoryUsage=e.uvCounters=function(){},e.features={}},"46cc":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,s;n.d(e,"a",(function(){return r})),function(t){t[t["DT_INVALID"]=0]="DT_INVALID",t[t["DT_FLOAT"]=1]="DT_FLOAT",t[t["DT_DOUBLE"]=2]="DT_DOUBLE",t[t["DT_INT32"]=3]="DT_INT32",t[t["DT_UINT8"]=4]="DT_UINT8",t[t["DT_INT16"]=5]="DT_INT16",t[t["DT_INT8"]=6]="DT_INT8",t[t["DT_STRING"]=7]="DT_STRING",t[t["DT_COMPLEX64"]=8]="DT_COMPLEX64",t[t["DT_INT64"]=9]="DT_INT64",t[t["DT_BOOL"]=10]="DT_BOOL",t[t["DT_QINT8"]=11]="DT_QINT8",t[t["DT_QUINT8"]=12]="DT_QUINT8",t[t["DT_QINT32"]=13]="DT_QINT32",t[t["DT_BFLOAT16"]=14]="DT_BFLOAT16",t[t["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",t[t["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",t[t["DT_INT32_REF"]=103]="DT_INT32_REF",t[t["DT_UINT8_REF"]=104]="DT_UINT8_REF",t[t["DT_INT16_REF"]=105]="DT_INT16_REF",t[t["DT_INT8_REF"]=106]="DT_INT8_REF",t[t["DT_STRING_REF"]=107]="DT_STRING_REF",t[t["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",t[t["DT_INT64_REF"]=109]="DT_INT64_REF",t[t["DT_BOOL_REF"]=110]="DT_BOOL_REF",t[t["DT_QINT8_REF"]=111]="DT_QINT8_REF",t[t["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",t[t["DT_QINT32_REF"]=113]="DT_QINT32_REF",t[t["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;(function(t){t[t["LEGACY"]=0]="LEGACY",t[t["V1"]=1]="V1",t[t["V2"]=2]="V2"})(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(s||(s={}))},"4b05":function(t,e,n){"use strict";(function(t){var e=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r={importFetch:()=>n(1)};let s;class a{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e["b"])().global.fetch?Object(e["b"])().global.fetch(t,n):(null==s&&(s=r.importFetch()),s(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e["b"])().get("IS_NODE")&&Object(e["b"])().setPlatform("node",new a)}).call(this,n("4362"))},"4cfc":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("c388");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class s extends r["a"]{split(t){return new a(this,t)}}class a extends s{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r["b"]{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},"4df4":function(t,e,n){"use strict";var r=n("0366"),s=n("7b0b"),a=n("9bdd"),i=n("e95a"),o=n("50c4"),u=n("8418"),l=n("35a1");t.exports=function(t){var e,n,c,h,d,p,f=s(t),m="function"==typeof this?this:Array,g=arguments.length,b=g>1?arguments[1]:void 0,y=void 0!==b,x=l(f),w=0;if(y&&(b=r(b,g>2?arguments[2]:void 0,2)),void 0==x||m==Array&&i(x))for(e=o(f.length),n=new m(e);e>w;w++)p=y?b(f[w],w):f[w],u(n,w,p);else for(h=x.call(f),d=h.next,n=new m;!(c=d.call(h)).done;w++)p=y?a(h,b,[c.value,w],!0):c.value,u(n,w,p);return n.length=w,n}},5:function(t,e){},"526c":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n,r){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return s(e.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type){const a=e.inputNames.slice(t,i);return a.map(t=>s(t,n,r))}const o=Array.prototype.slice.call(s(e.inputNames.slice(t)[0],n,r).dataSync());return"number"===a.type?o[0]:o}const i=e.attrParams[t];return i&&i.value}function s(t,e,n){const[r,s]=u(t),a=n.currentContextIds.find(t=>!!e[o(r,t)]);return void 0!==a?e[o(r,a)][s]:void 0}function a(t,e,n){return e[o(t,n.currentContextId)]}function i(t,e){const[n,r]=u(t);return[o(n,e&&e.currentContextId),r]}function o(t,e){return e?`${t}-${e}`:t}function u(t){const e=t.lastIndexOf(":");if(-1===e)return[t,0];const n=t.substring(0,e);return[n,Number(t.substring(e+1))]}function l(t,e){const n=[];for(let r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return a})),n.d(e,"a",(function(){return i})),n.d(e,"e",(function(){return u})),n.d(e,"f",(function(){return l}))},"54ef":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("6ae2");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const a=(...t)=>{r["a"].startScope(n);try{const e=s(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r["a"].endScope(e),e}catch(e){throw r["a"].endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}},5874:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}]},6125:function(t,e,n){var r=n("1212"),s=n("b838"),a=n("a49e"),i=n("cae0"),o=n("7aec"),u=n("89ed"),l=n("a49d");l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,t.exports=l},"62e4":function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},6547:function(t,e,n){var r=n("a691"),s=n("1d80"),a=function(t){return function(e,n){var a,i,o=String(s(e)),u=r(n),l=o.length;return u<0||u>=l?t?"":void 0:(a=o.charCodeAt(u),a<55296||a>56319||u+1===l||(i=o.charCodeAt(u+1))<56320||i>57343?t?o.charAt(u):a:t?o.slice(u,u+2):i-56320+(a-55296<<10)+65536)}};t.exports={codeAt:a(!1),charAt:a(!0)}},"65f0":function(t,e,n){var r=n("861d"),s=n("e8b5"),a=n("b622"),i=a("species");t.exports=function(t,e){var n;return s(t)&&(n=t.constructor,"function"!=typeof n||n!==Array&&!s(n.prototype)?r(n)&&(n=n[i],null===n&&(n=void 0)):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},"673d":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"6ae2":function(t,e,n){"use strict";n.d(e,"a",(function(){return y}));var r=n("b333"),s=n("f490"),a=n("73b8"),i=n("eb7e");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class o{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new l)}profileKernel(t,e,n){let r;const s=()=>{r=n()},a=this.backendTimer.time(s);return r.forEach(n=>{n.data().then(r=>{u(r,n.dtype,t),a.then(s=>{let a="";null!=s.getExtraProfileInfo&&(a=s.getExtraProfileInfo()),this.logger.logKernelProfile(t,n,r,s.kernelMs,e,a)})})}),r}}function u(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class l{logKernelProfile(t,e,n,r,s,a){const o="number"===typeof r?i["rightPad"](r+"ms",9):r["error"],u=i["rightPad"](t,25),l=e.rank,c=e.size,h=i["rightPad"](e.shape.toString(),14);let d="";for(const i in s){const t=s[i],n=t.shape||e.shape,r=n.length;d+=`${i}: ${r}D ${r>0?n:""} `}console.log(`%c${u}\t%c${o}\t%c${l}D ${h}\t%c${c}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c(t,e,n){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],a=n.inputs;for(const t in a){const i=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[i.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(a[e.outputs[t].id]){for(const t in n)a[n[t].id]=!0,i[e.id]=!0;break}}const o=[];for(let u=0;u<t.length;u++){const e=t[u];if(s[e.id]&&i[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];r[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}function h(t,e,n){for(let r=e.length-1;r>=0;r--){const s=e[r],a=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n(()=>o[e]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=s.inputs[e];if(!i["arraysEqual"](r.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=e.add(r),e.dispose()}}}}var d=n("34d7"),p=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class f{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class m{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new f}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t),r=n?await e:e;if(!r)return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new o(this.backendInstance),!0}setupRegisteredKernels(){const t=Object(a["c"])(this.backendName);t.forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){const e=Object(a["c"])(t);e.forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return m.nextTensorId++}nextVariableId(){return m.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t},r=t=>({x:()=>t.toFloat()}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],r,s,{}),e}runKernel(t,e,n,r,s){const a=null,i=null;return this.runKernelFunc(a,e,i,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,o){let u,l=[];const c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,d=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=Object(a["b"])(r,this.backendName);let m;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(c){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==o&&(o=[]);const e=a.filter((t,e)=>o[e]);t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return a};else{const e=t=>{c&&(l=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const s=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{u=this.ENV.getBool("DEBUG")?this.profiler.profileKernel(r,e,()=>p()):p()}),c&&this.addTapeNode(r,e,u,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>e[t].shape),outputShapes:u.map(t=>t.shape)}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){const e=t.map(t=>this.keep(this.clone(t)));return e}getTensorsForGradient(t,e,n){const r=Object(a["a"])(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(i["assert"](Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(t=>e[t])):a=t.map(t=>e[t]);const o=n.filter((t,e)=>s[e]);return a.concat(o)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&i["isString"](t[0])&&(s=t.map(t=>i["encodeString"](t)));const a=r.write(s,e,n),o=new d["a"](e,n,a,this.nextTensorId());if(this.incRef(o,r),"string"===n){const t=this.state.tensorInfo.get(a),e=Object(i["bytesFromStringArray"])(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){n=n||"float32";const s=new d["a"](e,n,t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.asType(r));const s=new d["c"](t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*i["bytesPerElement"](t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof d["c"]||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId),n=e.refCount;n<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;return this.state.activeProfile.kernels=[],this.state.activeProfile.result=t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,o){const u={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},l=Object(a["a"])(t);null!=l&&(r=l.gradFunc),null!=r&&(u.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=i["makeZerosTypedArray"](t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,o))),this.state.activeTape.push(u)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(p["getTensorsInContainer"])(t),n=new Set(e.map(t=>t.id));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(i["assert"](e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));i["assert"](s instanceof d["a"],()=>"The result y returned by f() must be a tensor.");const a=c(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?g(s.shape):n,h(t,a,t=>this.tidy(t));const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return i["assert"](i["isFunction"](t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;i["assert"](e.every(t=>t instanceof d["a"]),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,s)=>(n=t(...e,s),i["assert"](n.value instanceof d["a"],()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),i["assert"](i["isFunction"](n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];i["assert"](a.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),i["assert"](a.every(t=>t instanceof d["a"]),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return a.forEach((t,e)=>{o[e]=()=>t}),o})}}readSync(t){const e=this.state.tensorInfo.get(t);return e.backend.readSync(t)}read(t){const e=this.state.tensorInfo.get(t);return e.backend.read(t)}async time(t){const e=Object(i["now"])(),n=await this.backend.time(t);return n.wallMs=Object(i["now"])()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new f;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(t){const e=Object(i["makeOnesTypedArray"])(Object(i["sizeFromShape"])(t),"float32");return y.makeTensor(e,t,"float32")}function b(){const t=Object(s["b"])();if(null==t._tfengine){const e=new r["a"](t);t._tfengine=new m(e)}return Object(r["c"])(t._tfengine.ENV),Object(d["f"])(()=>t._tfengine),t._tfengine}m.nextTensorId=0,m.nextVariableId=0;const y=b()},"6b75":function(t,e,n){"use strict";function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}n.d(e,"a",(function(){return r}))},"73b8":function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return c}));var r=n("f490");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s=Object(r["a"])("kernelRegistry",()=>new Map),a=Object(r["a"])("gradRegistry",()=>new Map);function i(t,e){const n=h(t,e);return s.get(n)}function o(t){return a.get(t)}function u(t){const e=s.entries(),n=[];while(1){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=h(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function c(t){const{kernelName:e}=t;a.has(e)&&console.warn(`Overriding the gradient for '${e}'`),a.set(e,t)}function h(t,e){return`${e}_${t}`}},"746f":function(t,e,n){var r=n("428f"),s=n("5135"),a=n("e538"),i=n("9bf2").f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});s(e,t)||i(e,t,{value:a.f(t)})}},"76c2":function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return l}));var r=n("34d7"),s=n("23bf"),a=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(s["b"])(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(a["assert"])(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function l(t){const e=[],n=new Set;return c(t,e,n),e}function c(t,e,n){if(null==t)return;if(t instanceof r["a"])return void e.push(t);if(!h(t))return;const s=t;for(const r in s){const t=s[r];n.has(t)||(n.add(t),c(t,e,n))}}function h(t){return Array.isArray(t)||"object"===typeof t}},"7aec":function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this;function n(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,n=o[127&a]^=r+i,s=0==n?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},n(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.xor4096=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},"7ed6":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(){return"undefined"!==typeof navigator&&null!=navigator}function s(){if(r()){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return s})),n.d(e,"isBrowser",(function(){return a}))},8418:function(t,e,n){"use strict";var r=n("c04e"),s=n("9bf2"),a=n("5c6c");t.exports=function(t,e,n){var i=r(e);i in t?s.f(t,i,a(0,n)):t[i]=n}},"89ed":function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.tychei=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},9152:function(t,e){e.read=function(t,e,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,d=n?-1:1,p=t[e+h];for(h+=d,a=p&(1<<-c)-1,p>>=-c,c+=o;c>0;a=256*a+t[e+h],h+=d,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+t[e+h],h+=d,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),a-=l}return(p?-1:1)*i*Math.pow(2,a-r)},e.write=function(t,e,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),e+=i+h>=1?d/u:d*Math.pow(2,1-h),e*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(e*u-1)*Math.pow(2,s),i+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;t[n+p]=255&o,p+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;t[n+p]=255&i,p+=f,i/=256,l-=8);t[n+p-f]|=128*m}},9489:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]},"96cf":function(t,e,n){var r=function(t){"use strict";var e,n=Object.prototype,r=n.hasOwnProperty,s="function"===typeof Symbol?Symbol:{},a=s.iterator||"@@iterator",i=s.asyncIterator||"@@asyncIterator",o=s.toStringTag||"@@toStringTag";function u(t,e,n,r){var s=e&&e.prototype instanceof m?e:m,a=Object.create(s.prototype),i=new E(r||[]);return a._invoke=C(t,n,i),a}function l(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(r){return{type:"throw",arg:r}}}t.wrap=u;var c="suspendedStart",h="suspendedYield",d="executing",p="completed",f={};function m(){}function g(){}function b(){}var y={};y[a]=function(){return this};var x=Object.getPrototypeOf,w=x&&x(x(A([])));w&&w!==n&&r.call(w,a)&&(y=w);var v=b.prototype=m.prototype=Object.create(y);function O(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function S(t,e){function n(s,a,i,o){var u=l(t[s],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"===typeof h&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,i,o)}),(function(t){n("throw",t,i,o)})):e.resolve(h).then((function(t){c.value=t,i(c)}),(function(t){return n("throw",t,i,o)}))}o(u.arg)}var s;function a(t,r){function a(){return new e((function(e,s){n(t,r,e,s)}))}return s=s?s.then(a,a):a()}this._invoke=a}function C(t,e,n){var r=c;return function(s,a){if(r===d)throw new Error("Generator is already running");if(r===p){if("throw"===s)throw a;return $()}n.method=s,n.arg=a;while(1){var i=n.delegate;if(i){var o=I(i,n);if(o){if(o===f)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===c)throw r=p,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var u=l(t,e,n);if("normal"===u.type){if(r=n.done?p:h,u.arg===f)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=p,n.method="throw",n.arg=u.arg)}}}function I(t,n){var r=t.iterator[n.method];if(r===e){if(n.delegate=null,"throw"===n.method){if(t.iterator["return"]&&(n.method="return",n.arg=e,I(t,n),"throw"===n.method))return f;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var s=l(r,t.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,f;var a=s.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,f):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,f)}function k(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function N(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(k,this),this.reset(!0)}function A(t){if(t){var n=t[a];if(n)return n.call(t);if("function"===typeof t.next)return t;if(!isNaN(t.length)){var s=-1,i=function n(){while(++s<t.length)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return i.next=i}}return{next:$}}function $(){return{value:e,done:!0}}return g.prototype=v.constructor=b,b.constructor=g,b[o]=g.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var e="function"===typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,o in t||(t[o]="GeneratorFunction")),t.prototype=Object.create(v),t},t.awrap=function(t){return{__await:t}},O(S.prototype),S.prototype[i]=function(){return this},t.AsyncIterator=S,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new S(u(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},O(v),v[o]="Generator",v[a]=function(){return this},v.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){while(e.length){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=A,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(N),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0],e=t.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,f):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),N(n),f}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var s=r.arg;N(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),f}},t}(t.exports);try{regeneratorRuntime=r}catch(s){Function("r","regeneratorRuntime = r")(r)}},9847:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,int32:4,uint16:2,uint8:1,bool:1}},"9e7b":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}]},a3f7:function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"a",(function(){return c})),n.d(e,"b",(function(){return h}));var r=n("6ae2"),s=n("b333"),a=n("34d7"),i=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){let n=t;if(Object(i["isTypedArray"])(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];while(Array.isArray(n)||Object(i["isTypedArray"])(n)&&"string"!==e)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(s["b"])().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(t,r,[]),r}function u(t,e,n){if(n=n||[],!Array.isArray(t)&&!Object(i["isTypedArray"])(t))return void Object(i["assert"])(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);Object(i["assert"])(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Object(i["assert"])(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)u(t[s],r,n.concat(s))}function l(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function c(t,e,n,u="numeric"){if(t instanceof a["a"])return l(u,t.dtype,e,n),t;let c=Object(i["inferDtype"])(t);if("string"!==c&&["bool","int32","float32"].indexOf(u)>=0&&(c=u),l(u,c,e,n),null==t||!Object(i["isTypedArray"])(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=o(t,c);Object(i["isTypedArray"])(t)||Array.isArray(t)||(t=[t]);const d=!0,p="string"!==c?Object(i["toTypedArray"])(t,c,Object(s["b"])().getBool("DEBUG")):Object(i["flatten"])(t,[],d);return r["a"].makeTensor(p,h,c)}function h(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const s=t;return s.map((t,r)=>c(t,`${e}[${r}]`,n),r)}},a49d:function(t,e,n){var r;(function(s,a){var i,o=this,u=256,l=6,c=52,h="random",d=a.pow(u,l),p=a.pow(2,c),f=2*p,m=u-1;function g(t,e,n){var r=[];e=1==e?{entropy:!0}:e||{};var i=w(x(e.entropy?[t,O(s)]:null==t?v():t,3),r),o=new b(r),c=function(){var t=o.g(l),e=d,n=0;while(t<p)t=(t+n)*u,e*=u,n=o.g(1);while(t>=f)t/=2,e/=2,n>>>=1;return(t+n)/e};return c.int32=function(){return 0|o.g(4)},c.quick=function(){return o.g(4)/4294967296},c.double=c,w(O(o.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&y(r,o),t.state=function(){return y(o,{})}),n?(a[h]=t,e):t})(c,i,"global"in e?e.global:this==a,e.state)}function b(t){var e,n=t.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];n||(t=[n++]);while(s<u)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=m&a+t[s%n]+(e=i[s])],i[a]=e;(r.g=function(t){var e,n=0,s=r.i,a=r.j,i=r.S;while(t--)e=i[s=m&s+1],n=n*u+i[m&(i[s]=i[a=m&a+e])+(i[a]=e)];return r.i=s,r.j=a,n})(u)}function y(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function x(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(x(t[n],e-1))}catch(a){}return r.length?r:"string"==s?t:t+"\0"}function w(t,e){var n,r=t+"",s=0;while(s<r.length)e[m&s]=m&(n^=19*e[m&s])+r.charCodeAt(s++);return O(e)}function v(){try{var t;return i&&(t=i.randomBytes)?t=t(u):(t=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(t)),O(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,O(s)]}}function O(t){return String.fromCharCode.apply(0,t)}if(a["seed"+h]=g,w(a.random(),s),t.exports){t.exports=g;try{i=n(3)}catch(S){}}else r=function(){return g}.call(e,n,e,t),void 0===r||(t.exports=r)})([],Math)},a49e:function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.xorwow=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},a4d3:function(t,e,n){"use strict";var r=n("23e7"),s=n("da84"),a=n("d066"),i=n("c430"),o=n("83ab"),u=n("4930"),l=n("fdbf"),c=n("d039"),h=n("5135"),d=n("e8b5"),p=n("861d"),f=n("825a"),m=n("7b0b"),g=n("fc6a"),b=n("c04e"),y=n("5c6c"),x=n("7c73"),w=n("df75"),v=n("241c"),O=n("057f"),S=n("7418"),C=n("06cf"),I=n("9bf2"),k=n("d1e7"),N=n("9112"),E=n("6eeb"),A=n("5692"),$=n("f772"),R=n("d012"),T=n("90e3"),D=n("b622"),F=n("e538"),_=n("746f"),j=n("d44e"),z=n("69f3"),M=n("b727").forEach,L=$("hidden"),B="Symbol",P="prototype",W=D("toPrimitive"),V=z.set,U=z.getterFor(B),G=Object[P],q=s.Symbol,H=a("JSON","stringify"),K=C.f,X=I.f,J=O.f,Y=k.f,Z=A("symbols"),Q=A("op-symbols"),tt=A("string-to-symbol-registry"),et=A("symbol-to-string-registry"),nt=A("wks"),rt=s.QObject,st=!rt||!rt[P]||!rt[P].findChild,at=o&&c((function(){return 7!=x(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=K(G,e);r&&delete G[e],X(t,e,n),r&&t!==G&&X(G,e,r)}:X,it=function(t,e){var n=Z[t]=x(q[P]);return V(n,{type:B,tag:t,description:e}),o||(n.description=e),n},ot=l?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof q},ut=function(t,e,n){t===G&&ut(Q,e,n),f(t);var r=b(e,!0);return f(n),h(Z,r)?(n.enumerable?(h(t,L)&&t[L][r]&&(t[L][r]=!1),n=x(n,{enumerable:y(0,!1)})):(h(t,L)||X(t,L,y(1,{})),t[L][r]=!0),at(t,r,n)):X(t,r,n)},lt=function(t,e){f(t);var n=g(e),r=w(n).concat(ft(n));return M(r,(function(e){o&&!ht.call(n,e)||ut(t,e,n[e])})),t},ct=function(t,e){return void 0===e?x(t):lt(x(t),e)},ht=function(t){var e=b(t,!0),n=Y.call(this,e);return!(this===G&&h(Z,e)&&!h(Q,e))&&(!(n||!h(this,e)||!h(Z,e)||h(this,L)&&this[L][e])||n)},dt=function(t,e){var n=g(t),r=b(e,!0);if(n!==G||!h(Z,r)||h(Q,r)){var s=K(n,r);return!s||!h(Z,r)||h(n,L)&&n[L][r]||(s.enumerable=!0),s}},pt=function(t){var e=J(g(t)),n=[];return M(e,(function(t){h(Z,t)||h(R,t)||n.push(t)})),n},ft=function(t){var e=t===G,n=J(e?Q:g(t)),r=[];return M(n,(function(t){!h(Z,t)||e&&!h(G,t)||r.push(Z[t])})),r};if(u||(q=function(){if(this instanceof q)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=T(t),n=function(t){this===G&&n.call(Q,t),h(this,L)&&h(this[L],e)&&(this[L][e]=!1),at(this,e,y(1,t))};return o&&st&&at(G,e,{configurable:!0,set:n}),it(e,t)},E(q[P],"toString",(function(){return U(this).tag})),E(q,"withoutSetter",(function(t){return it(T(t),t)})),k.f=ht,I.f=ut,C.f=dt,v.f=O.f=pt,S.f=ft,F.f=function(t){return it(D(t),t)},o&&(X(q[P],"description",{configurable:!0,get:function(){return U(this).description}}),i||E(G,"propertyIsEnumerable",ht,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:q}),M(w(nt),(function(t){_(t)})),r({target:B,stat:!0,forced:!u},{for:function(t){var e=String(t);if(h(tt,e))return tt[e];var n=q(e);return tt[e]=n,et[n]=e,n},keyFor:function(t){if(!ot(t))throw TypeError(t+" is not a symbol");if(h(et,t))return et[t]},useSetter:function(){st=!0},useSimple:function(){st=!1}}),r({target:"Object",stat:!0,forced:!u,sham:!o},{create:ct,defineProperty:ut,defineProperties:lt,getOwnPropertyDescriptor:dt}),r({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:pt,getOwnPropertySymbols:ft}),r({target:"Object",stat:!0,forced:c((function(){S.f(1)}))},{getOwnPropertySymbols:function(t){return S.f(m(t))}}),H){var mt=!u||c((function(){var t=q();return"[null]"!=H([t])||"{}"!=H({a:t})||"{}"!=H(Object(t))}));r({target:"JSON",stat:!0,forced:mt},{stringify:function(t,e,n){var r,s=[t],a=1;while(arguments.length>a)s.push(arguments[a++]);if(r=e,(p(e)||void 0!==t)&&!ot(t))return d(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!ot(e))return e}),s[1]=e,H.apply(null,s)}})}q[P][W]||N(q[P],W,q[P].valueOf),j(q,B),R[L]=!0},a630:function(t,e,n){var r=n("23e7"),s=n("4df4"),a=n("1c7e"),i=!a((function(t){Array.from(t)}));r({target:"Array",stat:!0,forced:i},{from:s})},a640:function(t,e,n){"use strict";var r=n("d039");t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){throw 1},1)}))}},a677:function(t,e,n){"use strict";n.d(e,"a",(function(){return c})),n.d(e,"c",(function(){return h})),n.d(e,"b",(function(){return d}));var r=n("6ae2"),s=n("a3f7"),a=n("eb7e"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(s["a"])(t,"real","complex"),i=Object(s["a"])(e,"imag","complex");return a["assertShapesMatch"](n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`),r["a"].runKernelFunc(t=>t.complex(n,i),{$real:n,$imag:i})}function u(t){const e=Object(s["a"])(t,"input","real");return r["a"].runKernelFunc(t=>t.real(e),{$input:e})}function l(t){const e=Object(s["a"])(t,"input","imag");return r["a"].runKernelFunc(t=>t.imag(e),{$input:e})}const c=Object(i["a"])({complex_:o}),h=Object(i["a"])({real_:u}),d=Object(i["a"])({imag_:l})},a80f:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},ad6d:function(t,e,n){"use strict";var r=n("825a");t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},ae40:function(t,e,n){var r=n("83ab"),s=n("d039"),a=n("5135"),i=Object.defineProperty,o={},u=function(t){throw t};t.exports=function(t,e){if(a(o,t))return o[t];e||(e={});var n=[][t],l=!!a(e,"ACCESSORS")&&e.ACCESSORS,c=a(e,0)?e[0]:u,h=a(e,1)?e[1]:void 0;return o[t]=!!n&&!s((function(){if(l&&!r)return!0;var t={length:-1};l?i(t,1,{enumerable:!0,get:u}):t[1]=1,n.call(t,c,h)}))}},aeab:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},b333:function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c}));
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="tfjsflags";class s{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}get(t){return t in this.flags||(this.flags[t]=this.evaluateFlag(t)),this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=a(this.global.location.search);if(r in t){const e=t[r].split(",");e.forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=o(e,n)})}}}function a(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(i(e,n[0],n[1]),n.join("="))),e}function i(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function o(t,e){if(e=e.toLowerCase(),"true"===e||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}function u(){return l}let l=null;function c(t){l=t}},b639:function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),s=n("9152"),a=n("e3db");function i(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}function o(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=l.prototype):(null===t&&(t=new l(e)),t.length=e),t}function l(t,e,n){if(!l.TYPED_ARRAY_SUPPORT&&!(this instanceof l))return new l(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return p(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?g(t,e,n,r):"string"===typeof e?f(t,e,n):b(t,e)}function h(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e,n,r){return h(e),e<=0?u(t,e):void 0!==n?"string"===typeof r?u(t,e).fill(n,r):u(t,e).fill(n):u(t,e)}function p(t,e){if(h(e),t=u(t,e<0?0:0|y(e)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function f(t,e,n){if("string"===typeof n&&""!==n||(n="utf8"),!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|w(e,n);t=u(t,r);var s=t.write(e,n);return s!==r&&(t=t.slice(0,s)),t}function m(t,e){var n=e.length<0?0:0|y(e.length);t=u(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function g(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),l.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=l.prototype):t=m(t,e),t}function b(t,e){if(l.isBuffer(e)){var n=0|y(e.length);return t=u(t,n),0===t.length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||et(e.length)?u(t,0):m(t,e);if("Buffer"===e.type&&a(e.data))return m(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function y(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function x(t){return+t!=t&&(t=0),l.alloc(+t)}function w(t,e){if(l.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return J(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Q(t).length;default:if(r)return J(t).length;e=(""+e).toLowerCase(),r=!0}}function v(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,e>>>=0,n<=e)return"";t||(t="utf8");while(1)switch(t){case"hex":return z(this,e,n);case"utf8":case"utf-8":return T(this,e,n);case"ascii":return _(this,e,n);case"latin1":case"binary":return j(this,e,n);case"base64":return R(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function O(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function S(t,e,n,r,s){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"===typeof e&&(e=l.from(e,r)),l.isBuffer(e))return 0===e.length?-1:C(t,e,n,r,s);if("number"===typeof e)return e&=255,l.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):C(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function C(t,e,n,r,s){var a,i=1,o=t.length,u=e.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(t,a)===l(e,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,d=0;d<u;d++)if(l(t,a+d)!==l(e,d)){h=!1;break}if(h)return a}return-1}function I(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r),r>s&&(r=s)):r=s;var a=e.length;if(a%2!==0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function k(t,e,n,r){return tt(J(e,t.length-n),t,n,r)}function N(t,e,n,r){return tt(Y(e),t,n,r)}function E(t,e,n,r){return N(t,e,n,r)}function A(t,e,n,r){return tt(Q(e),t,n,r)}function $(t,e,n,r){return tt(Z(e,t.length-n),t,n,r)}function R(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function T(t,e,n){n=Math.min(t.length,n);var r=[],s=e;while(s<n){var a,i,o,u,l=t[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:a=t[s+1],128===(192&a)&&(u=(31&l)<<6|63&a,u>127&&(c=u));break;case 3:a=t[s+1],i=t[s+2],128===(192&a)&&128===(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i,u>2047&&(u<55296||u>57343)&&(c=u));break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128===(192&a)&&128===(192&i)&&128===(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o,u>65535&&u<1114112&&(c=u))}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return F(r)}e.Buffer=l,e.SlowBuffer=x,e.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:i(),e.kMaxLength=o(),l.poolSize=8192,l._augment=function(t){return t.__proto__=l.prototype,t},l.from=function(t,e,n){return c(null,t,e,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(t,e,n){return d(null,t,e,n)},l.allocUnsafe=function(t){return p(null,t)},l.allocUnsafeSlow=function(t){return p(null,t)},l.isBuffer=function(t){return!(null==t||!t._isBuffer)},l.compare=function(t,e){if(!l.isBuffer(t)||!l.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},l.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(t,e){if(!a(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return l.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=l.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var i=t[n];if(!l.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,s),s+=i.length}return r},l.byteLength=w,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)O(this,e,e+1);return this},l.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)O(this,e,e+3),O(this,e+1,e+2);return this},l.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)O(this,e,e+7),O(this,e+1,e+6),O(this,e+2,e+5),O(this,e+3,e+4);return this},l.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?T(this,0,t):v.apply(this,arguments)},l.prototype.equals=function(t){if(!l.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===l.compare(this,t)},l.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},l.prototype.compare=function(t,e,n,r,s){if(!l.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,s>>>=0,this===t)return 0;for(var a=s-r,i=n-e,o=Math.min(a,i),u=this.slice(r,s),c=t.slice(e,n),h=0;h<o;++h)if(u[h]!==c[h]){a=u[h],i=c[h];break}return a<i?-1:i<a?1:0},l.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},l.prototype.indexOf=function(t,e,n){return S(this,t,e,n,!0)},l.prototype.lastIndexOf=function(t,e,n){return S(this,t,e,n,!1)},l.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return I(this,t,e,n);case"utf8":case"utf-8":return k(this,t,e,n);case"ascii":return N(this,t,e,n);case"latin1":case"binary":return E(this,t,e,n);case"base64":return A(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var D=4096;function F(t){var e=t.length;if(e<=D)return String.fromCharCode.apply(String,t);var n="",r=0;while(r<e)n+=String.fromCharCode.apply(String,t.slice(r,r+=D));return n}function _(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function j(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function z(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=X(t[a]);return s}function M(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function L(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function B(t,e,n,r,s,a){if(!l.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function P(t,e,n,r){e<0&&(e=65535+e+1);for(var s=0,a=Math.min(t.length-n,2);s<a;++s)t[n+s]=(e&255<<8*(r?s:1-s))>>>8*(r?s:1-s)}function W(t,e,n,r){e<0&&(e=4294967295+e+1);for(var s=0,a=Math.min(t.length-n,4);s<a;++s)t[n+s]=e>>>8*(r?s:3-s)&255}function V(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(t,e,n,r,a){return a||V(t,e,n,4,34028234663852886e22,-34028234663852886e22),s.write(t,e,n,r,23,4),n+4}function G(t,e,n,r,a){return a||V(t,e,n,8,17976931348623157e292,-17976931348623157e292),s.write(t,e,n,r,52,8),n+8}l.prototype.slice=function(t,e){var n,r=this.length;if(t=~~t,e=void 0===e?r:~~e,t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),e<t&&(e=t),l.TYPED_ARRAY_SUPPORT)n=this.subarray(t,e),n.__proto__=l.prototype;else{var s=e-t;n=new l(s,void 0);for(var a=0;a<s;++a)n[a]=this[a+t]}return n},l.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t],s=1,a=0;while(++a<e&&(s*=256))r+=this[t+a]*s;return r},l.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t+--e],s=1;while(e>0&&(s*=256))r+=this[t+--e]*s;return r},l.prototype.readUInt8=function(t,e){return e||L(t,1,this.length),this[t]},l.prototype.readUInt16LE=function(t,e){return e||L(t,2,this.length),this[t]|this[t+1]<<8},l.prototype.readUInt16BE=function(t,e){return e||L(t,2,this.length),this[t]<<8|this[t+1]},l.prototype.readUInt32LE=function(t,e){return e||L(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},l.prototype.readUInt32BE=function(t,e){return e||L(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},l.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t],s=1,a=0;while(++a<e&&(s*=256))r+=this[t+a]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*e)),r},l.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=e,s=1,a=this[t+--r];while(r>0&&(s*=256))a+=this[t+--r]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*e)),a},l.prototype.readInt8=function(t,e){return e||L(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},l.prototype.readInt16LE=function(t,e){e||L(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(t,e){e||L(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(t,e){return e||L(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},l.prototype.readInt32BE=function(t,e){return e||L(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},l.prototype.readFloatLE=function(t,e){return e||L(t,4,this.length),s.read(this,t,!0,23,4)},l.prototype.readFloatBE=function(t,e){return e||L(t,4,this.length),s.read(this,t,!1,23,4)},l.prototype.readDoubleLE=function(t,e){return e||L(t,8,this.length),s.read(this,t,!0,52,8)},l.prototype.readDoubleBE=function(t,e){return e||L(t,8,this.length),s.read(this,t,!1,52,8)},l.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var s=Math.pow(2,8*n)-1;B(this,t,e,n,s,0)}var a=1,i=0;this[e]=255&t;while(++i<n&&(a*=256))this[e+i]=t/a&255;return e+n},l.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var s=Math.pow(2,8*n)-1;B(this,t,e,n,s,0)}var a=n-1,i=1;this[e+a]=255&t;while(--a>=0&&(i*=256))this[e+a]=t/i&255;return e+n},l.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,1,255,0),l.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},l.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):P(this,t,e,!0),e+2},l.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):P(this,t,e,!1),e+2},l.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):W(this,t,e,!0),e+4},l.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):W(this,t,e,!1),e+4},l.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*n-1);B(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;this[e]=255&t;while(++a<n&&(i*=256))t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},l.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*n-1);B(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;this[e+a]=255&t;while(--a>=0&&(i*=256))t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},l.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,1,127,-128),l.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},l.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):P(this,t,e,!0),e+2},l.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):P(this,t,e,!1),e+2},l.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):W(this,t,e,!0),e+4},l.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||B(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),l.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):W(this,t,e,!1),e+4},l.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},l.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},l.prototype.writeDoubleLE=function(t,e,n){return G(this,t,e,!0,n)},l.prototype.writeDoubleBE=function(t,e,n){return G(this,t,e,!1,n)},l.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s,a=r-n;if(this===t&&n<e&&e<r)for(s=a-1;s>=0;--s)t[s+e]=this[s+n];else if(a<1e3||!l.TYPED_ARRAY_SUPPORT)for(s=0;s<a;++s)t[s+e]=this[s+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},l.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var s=t.charCodeAt(0);s<256&&(t=s)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=l.isBuffer(t)?t:J(new l(t,r).toString()),o=i.length;for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var q=/[^+\/0-9A-Za-z-_]/g;function H(t){if(t=K(t).replace(q,""),t.length<2)return"";while(t.length%4!==0)t+="=";return t}function K(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function X(t){return t<16?"0"+t.toString(16):t.toString(16)}function J(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if(n=t.charCodeAt(i),n>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function Y(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function Z(t,e){for(var n,r,s,a=[],i=0;i<t.length;++i){if((e-=2)<0)break;n=t.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r)}return a}function Q(t){return r.toByteArray(H(t))}function tt(t,e,n,r){for(var s=0;s<r;++s){if(s+n>=e.length||s>=t.length)break;e[s+n]=t[s]}return s}function et(t){return t!==t}}).call(this,n("c8ba"))},b727:function(t,e,n){var r=n("0366"),s=n("44ad"),a=n("7b0b"),i=n("50c4"),o=n("65f0"),u=[].push,l=function(t){var e=1==t,n=2==t,l=3==t,c=4==t,h=6==t,d=5==t||h;return function(p,f,m,g){for(var b,y,x=a(p),w=s(x),v=r(f,m,3),O=i(w.length),S=0,C=g||o,I=e?C(p,O):n?C(p,0):void 0;O>S;S++)if((d||S in w)&&(b=w[S],y=v(b,S,x),t))if(e)I[S]=y;else if(y)switch(t){case 3:return!0;case 5:return b;case 6:return S;case 2:u.call(I,b)}else if(c)return!1;return h?-1:l||c?c:I}};t.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6)}},b838:function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.xor128=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},bdcf:function(t,e,n){"use strict";n.d(e,"b",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return l})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return h}));var r=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function s(t,e){return a(t,e)}function a(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(c(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=t[i],u=a(o,e,n,r);s[i]=u}return r.delete(t),s}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,s.value),s.value}function i(t,e=u){return o(t,e)}function o(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(c(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=t.map(t=>t[a]),i=o(r,e,n);s[a]=i}return n.delete(r),s}throw new Error("Can't recurse into non-iterable type: "+r)}return s.value}function u(t){return null===t?null:c(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function l(t,e){const n=new Map;a(t,e,n);for(const s of Array.from(n.keys())){const t=n.get(s);if(t instanceof Promise){const e=await t;n.set(s,e)}}const r=a(t,e,n);return r}function c(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r["l"]))}function h(t){return null==t||d(t)||Array.isArray(t)||"object"===typeof t&&t instanceof r["l"]||r["zd"].isTypedArray(t)}function d(t){return null===t||"object"!==typeof t&&"function"!==typeof t}},c388:function(t,e,n){"use strict";n.d(e,"f",(function(){return h})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return p})),n.d(e,"g",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"b",(function(){return k})),n.d(e,"c",(function(){return r}));var r,s=n("fa11"),a=n("6125"),i=n("bdcf");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function o(t){return Object(i["b"])(t,u)}function u(t){return t instanceof s["l"]?{value:t.clone(),recurse:!1}:Object(i["e"])(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class l{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){while(t<0)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class c extends l{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function h(t){return new g(t)}function d(t){return new b(t)}function p(t,e){return new E(t,e)}function f(t,e=r.FAIL){return new A(t,e)}c.INITIAL_CAPACITY=32;class m{async toArray(){const t=[];let e=await this.next();while(!e.done)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();while(!n.done)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();while(!t.done)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);while(!e.done&&n)e=await this.next(),n=t(e.value)}handleErrors(t){return new C(this,t)}filter(t){return new O(this,t)}map(t){return new S(this,t)}mapAsync(t){return new I(this,t)}serialMapAsync(t){return new I(this,t).serial()}flatmap(t){return new N(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new v(this,t,e)}columnMajorBatch(t,e=!0,n=i["f"]){const r=this.rowMajorBatch(t,e);return r.map(t=>Object(i["d"])(t,n))}concatenate(t,e){return new E(h([this,t]),e)}take(t){return t<0||null==t?this:new w(this,t)}skip(t){return t<0||null==t?this:new x(this,t)}prefetch(t){return new $(this,t)}shuffle(t,e){return new R(this,t,e)}serial(){return new y(this)}}class g extends m{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:o(t),done:!1}}}class b extends m{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class y extends m{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class x extends m{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const t=await this.upstream.next();if(t.done)return t;s["fb"](t.value)}return this.upstream.next()}}class w extends m{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class v extends m{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];while(t.length<this.batchSize){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class O extends m{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(1){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;s["fb"](t.value)}}}class S extends m{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s["qd"].getTensorsInContainer(t.value),n=this.transform(t.value),r=s["qd"].getTensorsInContainer(n);for(const a of e)s["qd"].isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class C extends m{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I extends m{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s["qd"].getTensorsInContainer(t.value),n=await this.transform(t.value),r=s["qd"].getTensorsInContainer(n);for(const a of e)s["qd"].isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class k extends m{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends k{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=s["qd"].getTensorsInContainer(t.value),n=this.transform(t.value),r=s["qd"].getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of e)s["qd"].isTensorInList(a,r)||a.dispose();return!0}}class E extends m{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){const t="TODO: fill in upstream of chained summaries";return t+" -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(function(t){t[t["FAIL"]=0]="FAIL",t[t["SHORTEST"]=1]="SHORTEST",t[t["LONGEST"]=2]="LONGEST"})(r||(r={}));class A extends m{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){const t="TODO: fill in upstream of zip summaries";return`{${t}} -> Zip`}async nextState(t){await t;let e=0,n=0;function s(t){if(t instanceof m){const r=t.next();return{value:r.then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}const a=await Object(i["c"])(this.iterators,s);if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class $ extends m{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new l(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){while(!this.buffer.isFull()){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class R extends ${constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=a["alea"](n||s["zd"].now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},c8ad:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},cae0:function(t,e,n){(function(t){var r;(function(t,s,a){function i(t){var e=this;function n(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],t^=t>>>7,n=t^t<<24,t=r[s+1&7],n^=t^t>>>10,t=r[s+3&7],n^=t^t>>>3,t=r[s+4&7],n^=t^t<<7,t=r[s+7&7],t^=t<<13,n^=t^t<<9,r[s]=n,e.i=s+1&7,n},n(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,s),void 0===r||(s.exports=r)):this.xorshift7=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},ce1a:function(t,e,n){"use strict";n.d(e,"c",(function(){return a["od"]})),n.d(e,"d",(function(){return a["ud"]})),n.d(e,"b",(function(){return $r})),n.d(e,"a",(function(){return r}));var r={};n.r(r),n.d(r,"inputLayer",(function(){return Ma})),n.d(r,"elu",(function(){return La})),n.d(r,"reLU",(function(){return Ba})),n.d(r,"leakyReLU",(function(){return Pa})),n.d(r,"prelu",(function(){return Wa})),n.d(r,"softmax",(function(){return Va})),n.d(r,"thresholdedReLU",(function(){return Ua})),n.d(r,"conv1d",(function(){return Ga})),n.d(r,"conv2d",(function(){return qa})),n.d(r,"conv2dTranspose",(function(){return Ha})),n.d(r,"conv3d",(function(){return Ka})),n.d(r,"separableConv2d",(function(){return Xa})),n.d(r,"cropping2D",(function(){return Ja})),n.d(r,"upSampling2d",(function(){return Ya})),n.d(r,"depthwiseConv2d",(function(){return Za})),n.d(r,"activation",(function(){return Qa})),n.d(r,"dense",(function(){return ti})),n.d(r,"dropout",(function(){return ei})),n.d(r,"spatialDropout1d",(function(){return ni})),n.d(r,"flatten",(function(){return ri})),n.d(r,"repeatVector",(function(){return si})),n.d(r,"reshape",(function(){return ai})),n.d(r,"permute",(function(){return ii})),n.d(r,"embedding",(function(){return oi})),n.d(r,"add",(function(){return ui})),n.d(r,"average",(function(){return li})),n.d(r,"concatenate",(function(){return ci})),n.d(r,"maximum",(function(){return hi})),n.d(r,"minimum",(function(){return di})),n.d(r,"multiply",(function(){return pi})),n.d(r,"dot",(function(){return fi})),n.d(r,"batchNormalization",(function(){return mi})),n.d(r,"layerNormalization",(function(){return gi})),n.d(r,"zeroPadding2d",(function(){return bi})),n.d(r,"averagePooling1d",(function(){return yi})),n.d(r,"avgPool1d",(function(){return xi})),n.d(r,"avgPooling1d",(function(){return wi})),n.d(r,"averagePooling2d",(function(){return vi})),n.d(r,"avgPool2d",(function(){return Oi})),n.d(r,"avgPooling2d",(function(){return Si})),n.d(r,"averagePooling3d",(function(){return Ci})),n.d(r,"avgPool3d",(function(){return Ii})),n.d(r,"avgPooling3d",(function(){return ki})),n.d(r,"globalAveragePooling1d",(function(){return Ni})),n.d(r,"globalAveragePooling2d",(function(){return Ei})),n.d(r,"globalMaxPooling1d",(function(){return Ai})),n.d(r,"globalMaxPooling2d",(function(){return $i})),n.d(r,"maxPooling1d",(function(){return Ri})),n.d(r,"maxPooling2d",(function(){return Ti})),n.d(r,"maxPooling3d",(function(){return Di})),n.d(r,"gru",(function(){return Fi})),n.d(r,"gruCell",(function(){return _i})),n.d(r,"lstm",(function(){return ji})),n.d(r,"lstmCell",(function(){return zi})),n.d(r,"simpleRNN",(function(){return Mi})),n.d(r,"simpleRNNCell",(function(){return Li})),n.d(r,"rnn",(function(){return Bi})),n.d(r,"stackedRNNCells",(function(){return Pi})),n.d(r,"bidirectional",(function(){return Wi})),n.d(r,"timeDistributed",(function(){return Vi})),n.d(r,"globalMaxPool1d",(function(){return Ui})),n.d(r,"globalMaxPool2d",(function(){return Gi})),n.d(r,"maxPool1d",(function(){return qi})),n.d(r,"maxPool2d",(function(){return Hi})),n.d(r,"Layer",(function(){return Ie})),n.d(r,"RNN",(function(){return Sa})),n.d(r,"RNNCell",(function(){return Ca})),n.d(r,"input",(function(){return Rr})),n.d(r,"gaussianNoise",(function(){return Ki})),n.d(r,"gaussianDropout",(function(){return Xi})),n.d(r,"alphaDropout",(function(){return Ji})),n.d(r,"masking",(function(){return Yi}));var s={};n.r(s),n.d(s,"maxImpl",(function(){return lo})),n.d(s,"transposeImpl",(function(){return co}));var a=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let i;function o(){return null==i&&(i=Object(a["E"])().epsilon()),i}function u(){return"channelsLast"}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class h extends Error{constructor(t){super(t),Object.setPrototypeOf(this,h.prototype)}}class d extends Error{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}class p extends Error{constructor(t){super(t),Object.setPrototypeOf(this,p.prototype)}}Error;
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function m(t,e){if(!t)throw new p(e)}function g(t,e){let n=0;for(const r of t)r===e&&n++;return n}function b(t){return 1===t.length?t[0]:t}function y(t){return Array.isArray(t)?t:[t]}function x(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=e.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function w(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let v={};function O(t){if(null===t||void 0===t)return null;const e={};return e["className"]=t.getClassName(),e["config"]=t.getConfig(),e}function S(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach(t=>S(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e["type"]||"number"!==typeof e["value"]?S(e):t[n]=e["value"])}}}function C(t,e={},n={},r="object",s=!1){if("string"===typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in v)a=v[s];else if(a=e[s],null==a)throw new h(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a["className"]||null==a["config"])throw new h(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a["className"];let o,u;if(i in n?[o,u]=n[i]:i in v?[o,u]=v["className"]:i in e&&([o,u]=e[i]),null==o)throw new h(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(v))t[n]=v[n];for(const s of Object.keys(n))t[s]=n[s];const e=a["config"];e["customObjects"]=t;const r=Object.assign({},v);for(const s of Object.keys(n))v[s]=n[s];S(a["config"]);const i=u(o,a["config"],n,s);return v=Object.assign({},r),i}{const t=Object.assign({},v);for(const r of Object.keys(n))v[r]=n[r];const e=new o(a["config"]);return v=Object.assign({},t),e}}}function I(t,e){return t<e?-1:t>e?1:0}function k(t,e){return-1*I(t,e)}function N(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function E(t){if(null==t)throw new h("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function A(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new h(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function $(t,e,n=0,r=1/0){return m(n>=0),m(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function R(t,e){Array.isArray(t)?(a["zd"].assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>R(t,`element ${n+1} of ${e}`))):a["zd"].assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+T(t)+".")}function T(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>T(t)).join(",")+"]":"string"===typeof t?`"${t}"`:""+t}function D(t,e){let n,r=a["zd"].now();const s=(...s)=>{const i=a["zd"].now();return i-r<e||(r=i,n=t(...s)),n};return s}function F(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _(t,e){return Object(a["rd"])(()=>a["bd"](a["id"](a["gc"](t,t),e,!0)))}class j extends a["Jc"].Serializable{getConfig(){return{}}}class z extends j{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a["rd"])(()=>{const e=_(t,this.axis),n=a["P"](e,0,this.maxValue);return a["gc"](t,a["gb"](n,a["r"](o(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}z.className="MaxNorm",a["Jc"].registerClass(z);class M extends j{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a["rd"])(()=>a["gb"](t,a["r"](o(),_(t,this.axis))))}getConfig(){return{axis:this.axis}}}M.className="UnitNorm",a["Jc"].registerClass(M);class L extends j{apply(t){return a["zc"](t)}}L.className="NonNeg",a["Jc"].registerClass(L);class B extends j{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a["rd"])(()=>{const e=_(t,this.axis),n=a["r"](a["gc"](this.rate,a["P"](e,this.minValue,this.maxValue)),a["gc"](1-this.rate,e));return a["gc"](t,a["gb"](n,a["r"](o(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}B.className="MinMaxNorm",a["Jc"].registerClass(B);const P={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function W(t){return O(t)}function V(t,e={}){return C(t,a["Jc"].SerializationMap.getMap().classNameMap,e,"constraint")}function U(t){if(null==t)return null;if("string"===typeof t){const e=t in P?P[t]:t,n={className:e,config:{}};return V(n)}return t instanceof j?t:V(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const G=["channelsFirst","channelsLast"],q=["valid","same","causal"],H=["max","avg"],K=["sum","mul","concat","ave"],X=new Map;function J(t){A(G,"DataFormat",t)}function Y(t){A(q,"PaddingMode",t)}function Z(t){A(H,"PoolMode",t)}const Q=[],tt="/";function et(t,e){Q.push(t);try{const t=e();return Q.pop(),t}catch(n){throw Q.pop(),n}}function nt(){return 0===Q.length?"":Q.join(tt)+tt}function rt(t){if(!it(t))throw new Error("Not a valid tensor name: '"+t+"'");return nt()+t}function st(t){if(!it(t))throw new Error("Not a valid tensor name: '"+t+"'");X.has(t)||X.set(t,0);const e=X.get(t);if(X.set(t,X.get(t)+1),e>0){const n=`${t}_${e}`;return X.set(n,1),n}return t}const at=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function it(t){return!!t.match(at)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ot(t){return t===parseInt(t.toString(),10)}function ut(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function lt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(a["nd"])(t)}function ct(t){return a["cc"](lt(t)).dataSync()[0]}function ht(t){return a["Vb"](lt(t)).dataSync()[0]}function dt(t,e){if(e<t)throw new h(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pt(t,e){return t.asType(e)}function ft(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function mt(t,e){return Object(a["rd"])(()=>{if(2!==t.shape.length)throw new h(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=ft(t,1);return St(n,[1,e,1])})}function gt(t){const e=[ut(t.shape)];return t.reshape(e)}function bt(t){if(t.rank<=1)throw new h(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],ut(t.shape,1)];return t.reshape(e)}function yt(t,e,n){return Object(a["rd"])(()=>{switch(t.rank){case 1:return a["Rc"](t,e,n);case 2:return a["Sc"](t,[e,0],[n,t.shape[1]]);case 3:return a["Tc"](t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return a["Uc"](t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return a["Qc"](t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return a["Qc"](t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new h("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function xt(t,e,n){return Object(a["rd"])(()=>{switch(t.rank){case 1:return a["Rc"](t,e,n);case 2:return a["Sc"](t,[0,e],[t.shape[0],n]);case 3:return a["Tc"](t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return a["Uc"](t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new h("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function wt(t,e,n,r){return Object(a["rd"])(()=>{switch(t.rank){case 1:return a["Rc"](t,e,n);case 2:switch(r){case 1:return yt(t,e,n);case 2:return xt(t,e,n);default:throw new h("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return yt(t,e,n);case 2:return a["Tc"](t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return xt(t,e,n);default:throw new h("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return yt(t,e,n);case 2:return a["Uc"](t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return a["Uc"](t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return xt(t,e,n);default:throw new h("The axis is not within the rank of the tensor "+r)}default:throw new h("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function vt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),a["R"](t,e)}function Ot(t,e){switch(t.rank){case 1:return a["S"]([t,e]);case 2:return a["T"]([t,e],0);case 3:return a["U"]([t,e],0);case 4:return a["V"]([t,e],0);default:throw new h("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function St(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new h(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return a["sd"](t,e)}function Ct(t,e=0,n=1,r,s){return a["sc"](t,e,n,r,s)}function It(t,e,n,r){if(t.rank<2||e.rank<2)throw new d(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const n=t.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(n!==r)throw new d(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const s=!1,i=!1;return a["wb"].matMul({a:t,b:e,transposeA:s,transposeB:i,bias:r?Et(t.rank,r,u()):null,activation:n})}{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const o=e.shape.slice(),l=o.pop(),c=o.pop(),h=[...o,l],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([c,-1]);const p=[...s,...h],f=!1,m=!1;return a["wb"].matMul({a:t,b:e,transposeA:f,transposeB:m,bias:r?Et(t.rank,r,u()):null,activation:n}).reshape(p)}}function kt(t,e,n){return Object(a["rd"])(()=>(e=Array.isArray(e)?Object(a["nd"])(e,"int32"):e.toInt(),a["xb"](t,e,n)))}function Nt(t){return a["gc"](t,t)}function Et(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new h("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new h("Unsupported input rank by biasAdd: "+e.rank)}function At(t,e,n){return Object(a["rd"])(()=>(null==n&&(n=u()),J(n),t.add(Et(t.rank,e,n))))}function $t(t,e=1){if(1!==e)throw new d(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return a["jb"](t)}function Rt(t){return Object(a["rd"])(()=>a["gb"](t,a["o"](t).add(1)))}function Tt(t,e,n,r){return Object(a["rd"])(()=>a["ib"](t,e,n,r))}function Dt(t){return Object(a["rd"])(()=>{const e=a["r"](.5,a["gc"](.2,t));return a["P"](e,0,1)})}function Ft(t,e,n=!1){return n?t():e()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _t=["fanIn","fanOut","fanAvg"],jt=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function zt(t){A(_t,"FanMode",t)}function Mt(t){A(jt,"Distribution",t)}class Lt extends a["Jc"].Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Bt extends Lt{apply(t,e){return Object(a["Fd"])(t,e)}}Bt.className="Zeros",a["Jc"].registerClass(Bt);class Pt extends Lt{apply(t,e){return Object(a["mc"])(t,e)}}Pt.className="Ones",a["Jc"].registerClass(Pt);class Wt extends Lt{constructor(t){if(super(),"object"!==typeof t)throw new h("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new h("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(a["rd"])(()=>Object(a["gc"])(Object(a["Fc"])(this.value),Object(a["mc"])(t,e)))}getConfig(){return{value:this.value}}}Wt.className="Constant",a["Jc"].registerClass(Wt);class Vt extends Lt{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(a["tc"])(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Vt.className="RandomUniform",a["Jc"].registerClass(Vt);class Ut extends Lt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32","float32"!==e&&"int32"!==e)throw new d(`randomNormal does not support dType ${e}.`);return Ct(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ut.className="RandomNormal",a["Jc"].registerClass(Ut);class Gt extends Lt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32","float32"!==e&&"int32"!==e)throw new d(`truncatedNormal does not support dType ${e}.`);return Object(a["wd"])(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Gt.className="TruncatedNormal",a["Jc"].registerClass(Gt);class qt extends Lt{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(a["rd"])(()=>{if(2!==t.length||t[0]!==t[1])throw new h("Identity matrix initializer can only be used for 2D square matrices.");return Object(a["gc"])(this.gain,Object(a["rb"])(t[0]))})}getConfig(){return{gain:this.gain}}}function Ht(t,e="channelsLast"){let n,r;if(J(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=ut(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=ut(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=ut(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}qt.className="Identity",a["Jc"].registerClass(qt);class Kt extends Lt{constructor(t){if(super(),t.scale<0)throw new h("scale must be a positive float. Got: "+t.scale);this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,zt(this.mode),this.distribution=null==t.distribution?"normal":t.distribution,Mt(this.distribution),this.seed=t.seed}apply(t,e){const n=Ht(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if(e=e||"float32","float32"!==e&&"int32"!==e)throw new d(`${this.getClassName()} does not support dType ${e}.`);return Object(a["wd"])(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Object(a["tc"])(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Kt.className="VarianceScaling",a["Jc"].registerClass(Kt);class Xt extends Kt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}Xt.className="GlorotUniform",a["Jc"].registerClass(Xt);class Jt extends Kt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}Jt.className="GlorotNormal",a["Jc"].registerClass(Jt);class Yt extends Kt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}Yt.className="HeNormal",a["Jc"].registerClass(Yt);class Zt extends Kt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}Zt.className="HeUniform",a["Jc"].registerClass(Zt);class Qt extends Kt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}Qt.className="LeCunNormal",a["Jc"].registerClass(Qt);class te extends Kt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kt.className}}te.className="LeCunNormal",a["Jc"].registerClass(te);class ee extends Lt{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new d("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(a["rd"])(()=>{if(2!==t.length)throw new d("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=t[0]>t[1]?[t[1],t[0]]:t,n=Ct(e,0,1,"float32");let r=a["Lb"].gramSchmidt(n);return t[0]>t[1]&&(r=r.transpose()),Object(a["gc"])(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}ee.className="Orthogonal",a["Jc"].registerClass(ee);const ne={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function re(t,e={}){return C(t,a["Jc"].SerializationMap.getMap().classNameMap,e,"initializer")}function se(t){return O(t)}function ae(t){if("string"===typeof t){const e=t in ne?ne[t]:t;if("GlorotNormal"===e)return new Jt;if("GlorotUniform"===e)return new Xt;if("HeNormal"===e)return new Yt;if("HeUniform"===e)return new Zt;if("LeCunNormal"===e)return new Qt;if("LeCunUniform"===e)return new te;{const t={};return t["className"]=e,t["config"]={},re(t)}}return t instanceof Lt?t:re(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let ie=0;function oe(){return ie++}const ue={};function le(t=""){return t in ue||(ue[t]=0),ue[t]+=1,t+ue[t].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ce(t){return Array.isArray(t)&&Array.isArray(t[0])}function he(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function de(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new h("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function pe(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t=t,t[0];throw new h("Expected exactly 1 Shape; got "+t.length)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fe(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const me="Variable";class ge{constructor(t,e="float32",n=me,r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=oe(),n=null==n?me:n,this.originalName=rt(n),this.name=st(this.originalName),this.trainable_=r,this.constraint=s,this.val=a["Ad"](t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),be(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function be(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function ye(t){return t.map(t=>t.read())}function xe(t){t.forEach(t=>{const e=t[0];e.write(t[1])})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class we{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ve{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=oe(),null!=a&&(this.originalName=rt(a),this.name=st(this.originalName)),this.rank=e.length}}let Oe=0;class Se{constructor(t,e){this.callArgs=e,this.id=Oe++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ce=0;class Ie extends a["Jc"].Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ce++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=x(t)+"_"+le(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new c(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new h(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return b(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return b(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new l("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new l("Layer "+this.name+" is not connected, no input to return.");return b(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new l("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new l("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return b(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=y(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=y(this.inputSpec);if(t.length!==e.length)throw new h(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new h(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new h(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new h(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new h(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new h(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new h(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=y(t);let r=!0;for(const a of n)if(!(a instanceof ve)){r=!1;break}let s=!0;for(const a of n)if(a instanceof ve){s=!1;break}if(r===s)throw new h("Arguments to apply() must be all SymbolicTensors or all Tensors");return et(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of y(t))e.push(n.shape);this.build(b(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=y(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=b(a),null!=this.activityRegularizer)throw new d("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=ke(t),r=this.computeOutputShape(n);let s;const a=Ne(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ve(a,n,this,y(t),e,this.name,r)):new ve(a,r,this,y(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new d("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new l(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new l(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new c(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fe(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ye(t?this.trainableWeights:this.weights)}setWeights(t){Object(a["rd"])(()=>{const e=this.weights;if(e.length!==t.length)throw new h(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=ye(e);for(let s=0;s<r.length;++s){const i=r[s],o=e[s],u=t[s];if(!a["zd"].arraysEqual(i.shape,u.shape))throw new h(`Layer weight shape ${i.shape} not compatible with provided weight shape `+u.shape);n.push([o,u])}xe(n)})}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new h(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ae("zeros"));const o=r.apply(e,n),u=new ge(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(u.read())),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=y(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=y(t);e=y(e),n=y(n),r=y(r),s=he(s),a=he(a);const u=[],l=[],c=[];for(const h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new Se({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(t["dtype"]=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function ke(t){t=y(t);const e=[];for(const n of t)e.push(n.shape);return b(e)}function Ne(t){return"float32"}function Ee(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=t.inputTensors[n],s=t.inboundLayers[n],a=t.nodeIndices[n],i=Ee(r,s,a);for(const t of i)-1===e.indexOf(t)&&e.push(t)}return e}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ae extends Ie{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:le("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new h("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new h("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new h("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ve(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new h("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function $e(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new h("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");const r=new Ae({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}),s=r.inboundNodes[0].outputTensors;return s[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Re(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!==typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Object(a["fb"])(r)}}function Te(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var De;Ae.className="InputLayer",a["Jc"].registerClass(Ae),function(t){t[t["SILENT"]=0]="SILENT",t[t["VERBOSE"]=1]="VERBOSE"}(De||(De={}));const Fe=125;class _e{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class je{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class ze extends _e{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e["size"]?0:e["size"];this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const s=Object(a["rd"])(()=>Object(a["r"])(this.totals[r],Object(a["gc"])(t,n)));this.totals[r]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(a["rd"])(()=>{const t=Object(a["gc"])(Object(a["gb"])(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(a["Gb"])(e[n])}))}}class Me extends _e{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const i=r[a];t.push(i.data()),e.push(s),n.push(a)}}const r=await Promise.all(t);for(let s=0;s<r.length;++s){const t=this.history[e[s]][n[s]];t.dispose(),this.history[e[s]][n[s]]=r[s][0]}}}class Le extends _e{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=Fe),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a["zd"].isNumber(this.yieldEvery)&&(this.maybeWait=D(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Re(n),r.push(this.yield(t,e,n))),r.push(Object(a["jc"])()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Re(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Re(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(a["jc"])()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Re(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Re(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(a["jc"])()):a["zd"].isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Re(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Re(t),await this.trainEnd(t))}}function Be(t,e){if(null==t&&(t={}),t instanceof _e)return[t];if(Array.isArray(t)&&t[0]instanceof _e)return t;const n=y(t);return n.map(t=>new Le(t,e))}class Pe{constructor(){}static registerCallbackConstructor(t,e){a["zd"].assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),Pe.checkForDuplicate(e),null==Pe.constructors[t]&&(Pe.constructors[t]=[]),Pe.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Pe.constructors){const n=Pe.constructors[+e];n.forEach(e=>{if(e===t)throw new h("Duplicate callback constructor.")})}}static clear(){Pe.constructors={}}static createCallbacks(t){const e=[];for(const n in Pe.constructors){const r=+n;t>=r&&e.push(...Pe.constructors[r])}return e.map(t=>new t)}}function We(t,e,n,r,s,a,i,o,u){const l=new Me,c=[new ze,...Pe.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new je(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ve(t,e={},n=!1){return C(t,a["Jc"].SerializationMap.getMap().classNameMap,e,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ue(t,e){return Object(a["rd"])(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=a["id"](Nt(t),e,!0),r=a["tb"](n.shape,o()),s=a["bd"](a["Zb"](n,r));return a["gb"](t,s)})}function Ge(t,e){return Object(a["rd"])(()=>a["ac"](Nt(a["hd"](e,t)),-1))}function qe(t,e){return Object(a["rd"])(()=>a["ac"](a["o"](a["hd"](e,t)),-1))}function He(t,e){return Object(a["rd"])(()=>{const n=a["hd"](t,e),r=a["P"](a["o"](t),o(),Number.MAX_VALUE),s=a["o"](a["gb"](n,r));return a["gc"](100,a["ac"](s,-1))})}function Ke(t,e){return Object(a["rd"])(()=>{const n=a["P"](e,o(),Number.MAX_VALUE),r=a["Ob"](a["r"](1,n)),s=a["P"](t,o(),Number.MAX_VALUE),i=a["Ob"](a["r"](1,s));return a["ac"](Nt(a["hd"](r,i)),-1)})}function Xe(t,e){return Object(a["rd"])(()=>{const n=a["Zb"](0,a["hd"](1,a["gc"](t,e)));return a["ac"](Nt(n),-1)})}function Je(t,e){return Object(a["rd"])(()=>{const n=a["Zb"](0,a["hd"](1,a["gc"](t,e)));return a["ac"](n,-1)})}function Ye(t,e){return Object(a["rd"])(()=>{const n=a["id"](a["gc"](t,e),-1),r=a["Vb"](a["gc"](a["hd"](1,t),e),-1);return a["Zb"](0,a["r"](1,a["hd"](r,n)))})}function Ze(t,e){return Object(a["rd"])(()=>{const n=Math.log(2),r=a["hd"](e,t),s=a["hd"](a["r"](r,a["Xc"](a["gc"](-2,r))),n);return a["ac"](s,-1)})}function Qe(t,e,n=!1){return Object(a["rd"])(()=>{if(n)e=a["Wc"](e);else{const t=a["id"](e,e.shape.length-1,!0);e=a["gb"](e,t)}return e=a["P"](e,o(),1-o()),a["ic"](a["id"](a["gc"](t.toFloat(),a["Ob"](e)),e.shape.length-1))})}function tn(t,e,n=!1){return Object(a["rd"])(()=>{const r=a["ub"](gt(t)).toInt();e=a["P"](e,o(),1-o());const s=e.shape,i=a["lc"](r,s[s.length-1]).reshape(s);return Qe(i,e,n)})}function en(t,e){if(!a["zd"].arraysEqual(t.shape,e.shape))throw new h(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(a["rd"])(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}function nn(t,e){return Object(a["rd"])(()=>{let n;return n=a["P"](e,o(),1-o()),n=a["Ob"](a["gb"](n,a["hd"](1,n))),a["ac"](en(t,n),-1)})}function rn(t,e){return Object(a["rd"])(()=>{const n=a["P"](t,o(),1),r=a["P"](e,o(),1);return a["id"](a["gc"](t,a["Ob"](a["gb"](n,r))),-1)})}function sn(t,e){return Object(a["rd"])(()=>{const n=a["Ob"](a["r"](o(),e));return a["ac"](a["hd"](e,a["gc"](t,n)),-1)})}function an(t,e){return Object(a["rd"])(()=>{const n=Ue(t,-1),r=Ue(e,-1),s=a["gc"](n,r);return a["ic"](a["id"](s,-1))})}Pe.constructors={};const on={meanSquaredError:Ge,meanAbsoluteError:qe,meanAbsolutePercentageError:He,meanSquaredLogarithmicError:Ke,squaredHinge:Xe,hinge:Je,categoricalHinge:Ye,logcosh:Ze,categoricalCrossentropy:Qe,sparseCategoricalCrossentropy:tn,binaryCrossentropy:nn,kullbackLeiblerDivergence:rn,poisson:sn,cosineProximity:an};function un(t){if("string"===typeof t){if(t in on)return on[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new h(e)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ln(t,e){return Object(a["rd"])(()=>{const n=a["gc"](.5,a["nc"](e)),r=pt(a["zb"](e,n),t.dtype);return a["ac"](a["mb"](t,r),-1)})}function cn(t,e){return Object(a["rd"])(()=>pt(a["mb"](a["v"](t,-1),a["v"](e,-1)),"float32"))}function hn(t,e){return Object(a["rd"])(()=>a["Rb"](t.equal(1),e.equal(1)).sum().cast("float32"))}function dn(t,e){return Object(a["rd"])(()=>a["Rb"](t.equal(0),e.equal(1)).sum().cast("float32"))}function pn(t,e){return Object(a["rd"])(()=>{const n=hn(t,e),r=dn(t,e),s=n.add(r);return a["Dd"](a["zb"](s,0),n.div(s),0).cast("float32")})}function fn(t,e){return nn(t,e)}function mn(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),e=e.argMax(-1),e.dtype!==t.dtype&&(e=e.asType(t.dtype)),a["mb"](t,e).asType("float32")}const gn=Ge,bn=Ge,yn=qe,xn=qe,wn=He,vn=He,On=Qe,Sn=an,Cn=tn,In={binaryAccuracy:ln,categoricalAccuracy:cn,precision:pn,categoricalCrossentropy:On,sparseCategoricalCrossentropy:Cn,mse:gn,MSE:bn,mae:yn,MAE:xn,mape:wn,MAPE:vn,cosine:Sn};function kn(t){if("string"===typeof t&&t in In)return In[t];if("string"!==typeof t&&null!=t)return t;throw new h("Unknown metric "+t)}function Nn(t){if(m(null!==t,"Unknown LossOrMetricFn "+t),"string"===typeof t)return t;{let e;for(const n of Object.keys(on))if(on[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(In))if(In[n]===t){e=n;break}return void 0!==e?e:t.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function En(t){const e={Adagrad:()=>a["ud"].adagrad(.01),Adadelta:()=>a["ud"].adadelta(1,.95,o()),Adam:()=>a["ud"].adam(.001,.9,.999,o()),Adamax:()=>a["ud"].adamax(.002,.9,.999,o(),0),RMSProp:()=>a["ud"].rmsprop(.001,.9,0,o()),SGD:()=>a["ud"].sgd(.01)};if(e["adagrad"]=e["Adagrad"],e["adadelta"]=e["Adadelta"],e["adam"]=e["Adam"],e["adamax"]=e["Adamax"],e["rmsprop"]=e["RMSProp"],e["sgd"]=e["SGD"],t in e)return e[t]();throw new h("Unknown Optimizer "+t)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const An=1048576;function $n(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Rn(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>An&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= `+An+".")}}function Rn(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Rn(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Rn(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tn(t,e,n,r=console.log){const s=Fn(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),_n(a,n,r),r("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)s?jn(o[c],n,r):zn(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=Dn(t),l=fe(t.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(e))}function Dn(t){let e;return e=null!=t.collectedTrainableWeights?fe(t.collectedTrainableWeights):fe(t.trainableWeights),e}function Fn(t){let e=!0;const n=[],r=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}function _n(t,e,n=console.log){let r="";for(let s=0;s<t.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=t[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);n(r)}function jn(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(o){r="multiple"}const s=t.name,a=t.getClassName(),i=[`${s} (${a})`,r,t.countParams().toString()];_n(i,e,n)}function zn(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(c){s="multiple"}const a=[];for(const h of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let t=0;t<h.inboundLayers.length;++t){const e=h.inboundLayers[t].name,n=h.nodeIndices[t],r=h.tensorIndices[t];a.push(`${e}[${n}][${r}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0],l=[`${i} (${o})`,s,t.countParams().toString(),u];_n(l,e,r);for(let h=1;h<a.length;++h)_n(["","","",a[h]],e,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mn(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Ln(t,e){if(null===t)return null;if("string"===typeof t)return w(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Mn(e,s,r)?n.push(r):n.push(Ln(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=w(n);e[t]=Ln(r,t)}}return e}}function Bn(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return x(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Mn(e,s,r)?n.push(r):n.push(Bn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],s=x(n);e[s]="name"!==n&&"className"!==n||"string"!==typeof r?Bn(r,n):r}return e}}
/** @license See the LICENSE file. */const Pn="2.0.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wn(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(a["N"])(e,t.dtype)}catch(n){throw new h(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class Vn{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Vn)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new h(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=Wn(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ve){if(null==this.id2Value[t.id])throw new h("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new h("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof ve){if(null==this.id2Value[t.id])throw new h("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new h("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(a["fb"])(this.id2Mask)}}const Un={},Gn={};function qn(t,e,n,r){const s=null!=n&&n["training"],i=Array.isArray(t),o=i?t:[t],u=o.map(t=>t.name),l=[],c=e.names();for(const a of u)-1!==c.indexOf(a)?l.push(e.getValue(a)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=u.join(",")+"|"+e.names().join(",");let d,p;if(null==Un[h]){const t=Hn(o,e);d=t.sorted,p=t.recipientCounts,Un[h]=d,Gn[h]=p}d=Un[h],p={},s||Object.assign(p,Gn[h]);const f=new Vn(e);for(let m=0;m<d.length;++m){if(null!=r){const t=Object(a["bc"])().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=d[m],i=t.sourceLayer;if(i instanceof Ae)continue;const o=[],c=[],h=[];let g=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);o.push(t),c.push(r),null!=r&&(g=!0),s||(p[n.name]--,0!==p[n.name]||e.hasKey(n)||-1!==u.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||h.push(t))}g&&(n=n||{},n["mask"]=c[0]);const b=y(i.apply(o,n));let x=null;i.supportsMasking&&(x=i.computeMask(o,c));const w=Jn(t),v=Array.isArray(w)?w:[w];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],b[e],Array.isArray(x)?x[0]:x);const t=u.indexOf(v[e].name);-1!==t&&(l[t]=b[e])}s||Object(a["fb"])(h)}return f.disposeMasks(),i?l:l[0]}function Hn(t,e){a["zd"].assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=Xn(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=Xn(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Kn(r)}}function Kn(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Xn(t,e){const n=new Set,r=[],s={};for(const o of e.names())n.add(o);const a=[],i=[];a.push(t);while(a.length>0){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function Jn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yn extends Ie{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=le(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],N(this.inputs).length!==this.inputs.length)throw new h("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));N(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const c of this.outputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const c of this.inputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;m(0===e,"input layer has >1 nodes"),m(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let c=0;c<this.inputLayers.length;c++){const e=this.inputLayers[c];if(!(e instanceof Ae))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${c} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const c of this.outputLayers)this.outputNames.push(c.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new c(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(Yn.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const h=l.inboundLayers.length;for(let a=0;a<h;a++){const t=l.inputTensors[a],r=l.inboundLayers[a],s=l.nodeIndices[a],i=l.tensorIndices[a];o(t,e,n,r,s,i)}e.push(l);while(n.indexOf(l)>=0)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const c of this.outputs)o(c,u,l);const d=i.slice().reverse();for(const c of d){n[c.id]=c,c.id in e||(e[c.id]=0);let t=e[c.id];const a=null==r[c.outboundLayer.id]?0:r[c.outboundLayer.id];t=Math.max(t,a),r[c.outboundLayer.id]=t,s[c.outboundLayer.id]=c.outboundLayer,e[c.id]=t;for(let r=0;r<c.inboundLayers.length;r++){const s=c.inboundLayers[r],a=c.nodeIndices[r],i=s.inboundNodes[a],o=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(t+1,o),n[i.id]=i}}const p={};for(const c in e){const t=e[c];t in p||(p[t]=[]),p[t].push(n[c])}const f={};for(const c in r){const t=r[c];t in f||(f[t]=[]),f[t].push(s[c])}let g=Object.keys(f).map(t=>parseInt(t,10)).sort(k);this.layers=[];for(const c of g){const t=f[c];t.sort((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof Yn&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=f,g=Object.keys(p).map(t=>parseInt(t,10)).sort(k);const b=this.inputs.slice(),y=[];for(const h of g)for(const t of p[h]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===b.indexOf(n))throw new c("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+y);for(const e of t.outputTensors)b.push(e);y.push(e.name)}}this.nodesByDepth=p;const x=this.layers.map(t=>t.name);for(const h of x){const t=x.filter(t=>t===h).length;if(1!==t)throw new c(`The name "${h}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new h("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const a of this.layers)for(const t of a.weights){if(null!=n[t.originalName])throw new h("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const s=[];for(const a in t){if(null!=n[a])s.push([n[a],t[a]]);else if(e)throw new h("Provided weight data has no target variable: "+a);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new h(`${t.length} of ${r} weights are not set: `+t)}xe(s)}updatedConfig(){const t=this.getConfig(),e={};return e["className"]=this.getClassName(),e["config"]=t,e["kerasVersion"]="tfjs-layers "+Pn,e["backend"]="TensorFlow.js",e}toJSON(t,e=!0){const n=Bn(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(a["rd"])(()=>{t=y(t);const n=new Vn;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return qn(this.outputs,n,e)})}computeMask(t,e){return Object(a["rd"])(()=>{let n;return t=y(t),n=null==e?f(null,t.length):y(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=he(t);if(e.length!==this.inputLayers.length)throw new h(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i],s=t.name+"_0_0";n[s]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);if(r.length>1)for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],s=e.nodeIndices[o],a=e.tensorIndices[o],i=`${t.name}_${s}_${a}`,u=n[i];r.push(u)}const s=t.computeOutputShape(b(r)),a=he(s),i=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){const r=`${t.name}_${i}_${e}`;n[r]=a[e]}}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;a.push(r)}for(let i=0;i<a.length;i++){const t=a[i];m(t in n),s.push(n[t])}return b(s)}runInternalGraph(t,e){null==e&&(e=f(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=t[o],a=e[o];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l["mask"]&&(l["mask"]=n),o=y(t.call(e,l)),u=y(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map(t=>t[0]),i=a.map(t=>t[1]),null==l["mask"]&&(l["mask"]=i),o=y(t.call(r,l)),u=y(t.computeMask(r,i));if(t.activityRegularizer)throw new d("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const o of this.outputs){m(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];i.push(t.shape),s.push(t),a.push(e)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof Yn?1:0;for(let t=0;t<r.inboundNodes.length;t++){const s=Yn.nodeKey(r,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new h(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new h("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new h("No such layer: "+t)}calculateLosses(){return Object(a["rd"])(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Yn.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=Yn.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(a){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: `+t.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],i=t.tensorIndices[r],u=Yn.nodeKey(s,a);let l=e[u];null==l&&(l=0),n.push([s.name,l,i,o])}s.push(n)}}}const o={};o["name"]=i.name,o["className"]=t,o["config"]=r,o["inboundNodes"]=s,n.push(o)}t["layers"]=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=Yn.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let a=e[s];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];r.push([t.name,a,o])}t["inputLayers"]=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=Yn.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let a=e[r];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];s.push([t.name,a,o])}return t["outputLayers"]=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(b(n),r)}function u(t){const n=t["name"],a=Ve(t,null!=e["customObjects"]?e["customObjects"]:{});a.setFastWeightInitDuringBuild(r),s[n]=a;const o=t["inboundNodes"];o.forEach(t=>{if(!(t instanceof Array))throw new h("Corrupted configuration, expected array for nodeData: "+t);i(a,t)})}const l=e["name"],c=e["layers"];for(const h of c)u(h);while(!E(a))for(const t of c){const e=s[t["name"]];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const d=[],p=[],f=e["inputLayers"];for(const h of f){const t=h[0],e=h[1],n=h[2];m(t in s);const r=s[t],a=r.inboundNodes[e].outputTensors;d.push(a[n])}const g=e["outputLayers"];for(const h of g){const t=h[0],e=h[1],n=h[2];m(t in s);const r=s[t],a=r.inboundNodes[e].outputTensors;p.push(a[n])}return new t({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new h("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(a["rd"])(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zn(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Qn(t,e){return Zn(t,e,"classWeight")}async function tr(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(a["rd"])(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(a["fb"])(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),Object(a["nd"])(s,"float32")}return null}function er(t,e){return Object(a["gc"])(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nr=32;function rr(t,e){let n,r;const s=e;n=s["xs"],r=s["ys"],a["zd"].assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const i=sr("input",t.inputNames,n),o=sr("output",t.outputNames,r),u=i[0].shape[0];a["zd"].assert(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),a["zd"].assert(o.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let l=0;l<i.length;l++)a["zd"].assert(i[l].shape[0]===u,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${i[l].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);for(let l=0;l<o.length;l++)a["zd"].assert(o[l].shape[0]===u,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${o[l].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);return{xs:i,ys:o}}function sr(t,e,n){if(n instanceof a["l"])return[n];if(Array.isArray(n))return a["zd"].assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new h(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function ar(t){if(3===t.length)throw new d("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function ir(t,e,n){const r=null!=n.batchesPerEpoch;if(a["zd"].assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),a["zd"].assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),a["zd"].assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),a["zd"].assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),a["zd"].assert(null==n["validationSplit"],()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(ur(n.validationData))a["zd"].assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=ar(n.validationData);i=t.xs,o=t.ys}const u=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const h=Be(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=We(h,d,n.epochs,null,null,or(e,n),null,s,c);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();while(m<n.epochs){const c={};await p.onEpochBegin(m);let h=0,d=0;r||(g=await e.iterator());while(!r||h<n.batchesPerEpoch){const e=await g.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+h+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=rr(t,e.value),i={};i["batch"]=d,i["size"]=r[0].shape[0],await p.onBatchBegin(d,i);const o=[];if(null!=n.classWeight){const e=Qn(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await tr(s[t],null,e[t]))}const c=r.concat(s).concat(o),f=u(c);a["fb"](c);for(let t=0;t<l.length;++t){const e=l[t],n=f[t];i[e]=n,a["Gb"](n)}await p.onBatchEnd(d,i),Te(i),d++,h++}if(r?h>=n.batchesPerEpoch:e.done){if(s){let e;e=ur(n.validationData)?y(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):y(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?nr:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function or(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function ur(t){return"function"===typeof t.iterator}function lr(t){return"function"===typeof t.next}async function cr(t,e,n){n=n||{};const r=null!=n.batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new d("Verbose mode is not implemented yet.");a["zd"].assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const o=lr(e)?e:await e.iterator();let u=0,l=0;while(!r||l<n.batches){const e=await o.next();if(i=a["rd"](()=>{if(e.value){const{xs:n,ys:r}=rr(t,e.value),o=n.concat(r),c=a["rd"](()=>s(o));if(a["fb"](o),0===l)for(let t=0;t<c.length;++t)i.push(Object(a["Fc"])(0));const h=o[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=i[t];i[t]=a["rd"](()=>a["r"](i[t],a["gc"](h,e))),l>0&&a["fb"](n)}a["fb"](c),u+=h,++l}return i}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const t=i[c];i[c]=a["gb"](i[c],u),a["fb"](t)}return b(i)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hr(t){a["zd"].assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function dr(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>yt(t,e,n-e)):yt(t,e,n-e)}function pr(t,e){return a["rd"](()=>null==t?null:Array.isArray(t)?t.map(t=>pr(t,e)):kt(t,"int32"===e.dtype?e:e.toInt()))}function fr(t,e){const n=[];let r=0,s=null;while(r<t)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function mr(t,e,n,r,s,i,o,u,l,c,p,f,m,g,b){null==s&&(s=32),null==i&&(i=1),null==p&&(p=!0),null==m&&(m=0);let y=!1;if(null!=l&&null!=c&&(y=!0),null!=b&&(y=!0,null==g))throw new h("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=t.checkNumSamples(n,s,g,"steps_per_epoch");let w;null!=x&&(w=dt(0,x)),null==o&&(o=1);const{callbackList:v,history:O}=We(u,o,i,m,x,g,s,y,f);v.setModel(t),t.history=O,await v.onTrainBegin(),t.stopTraining_=!1;for(let h=m;h<i;++h){await v.onEpochBegin(h);const i={};if(null!=g)throw new d("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new d("batch shuffling is not implemneted yet");p&&a["zd"].shuffle(w);const o=Object(a["nd"])(w),u=fr(x,s);for(let h=0;h<u.length;++h){const d={};if(await v.onBatchBegin(h,d),a["rd"](()=>{const p=u[h][0],f=u[h][1],m=yt(o,p,f-p);d["batch"]=h,d["size"]=f-p;const g=pr(n,m),b=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];d[e]=n,a["Gb"](n)}if(h===u.length-1&&y){const e=t.testLoop(l,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];a["Gb"](s),i["val_"+n]=s}}}),await v.onBatchEnd(h,d),Te(d),t.stopTraining_)break}o.dispose()}if(await v.onEpochEnd(h,i),t.stopTraining_)break}return await v.onTrainEnd(),await t.history.syncData(),t.history}async function gr(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,u,l,c,p;t.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;hr(f);const m=!1,g=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,m,f);s=g[0],i=g[1],p=g[2];let b,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new d("validationData including sample weights is not supported yet."):new h("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");o=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,u,null,null,e,f);l=n[0],c=n[1],b=l.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=dr(s,t,e),s=dr(s,0,t),c=dr(i,t,e),i=dr(i,0,t),b=l.concat(c)}else null!=r.validationSteps&&(y=!0);const x=s.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let O,S;y?(t.makeTestFunction(),O=t.testFunction,S=v.slice().concat(v.map(t=>"val_"+t))):(O=null,b=[],S=v.slice());const C=Be(r.callbacks,r.yieldEvery),I=await mr(t,w,x,v,f,r.epochs,r.verbose,C,O,b,r.shuffle,S,r.initialEpoch,null,null);return I}finally{t.isTraining=!1,yr(s,e),yr(i,n),yr(l,o),yr(c,u),null!=p&&a["fb"](p)}}function br(t){const e=[];t instanceof a["l"]&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(ft(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function yr(t,e){if(null==t)return;const n=[];if(e instanceof a["l"])n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const r=[];if(t instanceof a["l"])-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xr(t){return t instanceof a["l"]}function wr(t){return Array.isArray(t)}function vr(t){return!xr(t)&&!wr(t)}function Or(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(wr(t)&&t.length>0)e=!0;else if(vr(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new h(`Error when checking model ${s} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let a;if(vr(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new h(`No data provided for "${n}". Need data for each key in: `+e);a.push(t[n])}}else if(wr(t)){if(t=t,t.length!==e.length)throw new h(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);a=t}else{if(t=t,e.length>1)throw new h(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);a=[t]}if(a=br(a),null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=a[i];if(t.shape.length!==n[i].length)throw new h(`Error when checking ${s}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape `+t.shape);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=t.shape[a],u=n[i][a];if(null!=u&&u>=0&&o!==u)throw new h(`Error when checking ${s}: expected ${e[i]} to have shape [${n[i]}], but got array with shape [${t.shape}].`)}}return a}function Sr(t,e,n){const r=N(t.map(t=>t.shape[0]));r.sort();const s=N(e.map(t=>t.shape[0]));if(s.sort(),r.length>1)throw new h("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(s.length>1)throw new h("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&s.length>0&&!a["zd"].arraysEqual(r,s))throw new h(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function Cr(t,e,n){const r=[Ge,nn,Qe];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===Qe&&1===a.shape[a.shape.length-1])throw new h(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new h(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Ir(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new h(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new h(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");a=[t]}if(null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=a[i];if(t.shape.length!==n[i].length)throw new h(`Error when checking ${s}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(t.shape));for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=t.shape[a],u=n[i][a];if(null!=u&&u!==o)throw new h(`Error when checking ${s}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}function kr(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}const Nr="layers-model";class Er extends Yn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new h("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Tn(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=En(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof a["i"]))throw new h("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new h(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>un(t))}else{const n=un(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new h(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(un(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const t=this.internalOutputShapes[a],e=this.outputNames[a];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],et("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=kr(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};et("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=r[t],a=e=>{const n="";let r,a,i;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===nn?-1!==["accuracy","acc"].indexOf(o)?a=ln:-1!==["crossentropy","ce"].indexOf(o)&&(a=fn):this.lossFunctions[t]===tn?-1!==["accuracy","acc"].indexOf(o)?a=mn:-1!==["crossentropy","ce"].indexOf(o)&&(a=Cn):-1!==["accuracy","acc"].indexOf(o)?a=cn:-1!==["crossentropy","ce"].indexOf(o)&&(a=On),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),i=a,r=n+s}else{const t=kn(o);i=t,r=n+Nn(o)}let e;et(r,()=>{e=i}),s(t,r,e)}};a(e)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;hr(r);const s=!0,a=this.standardizeUserDataXY(t,e,s,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return b(o)}finally{yr(a[0],t),yr(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),cr(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new h(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new h("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new h("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new Vn;if(t instanceof a["l"]&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new h(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new h("No value is provided for the model's input "+a.name);i.add(a,e)}const o=qn(s,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=f(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(t=>t.name);for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new h("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return a["rd"](()=>{const r=this.checkNumSamples(t);if(n)throw new d("Verbose predictLoop() is not implemented yet.");const s=fr(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){const n=a["rd"](()=>{const n=s[e][0],r=s[e][1],a=dr(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Vn(i);return qn(this.outputs,o)});n.forEach((t,e)=>i[e].push(t))}return b(i.map(t=>a["R"](t,0)))})}predict(t,e={}){const n=br(t);Ir(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return hr(r),this.predictLoop(n,r)}finally{yr(n,t)}}predictOnBatch(t){Ir(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new c("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const t=this.feedOutputShapes[a],e=this.feedLossFns[a];e===tn?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(t=Or(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Or(e,this.feedOutputNames,s,!1,"target"),Sr(t,e,null),Cr(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new h(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Qn(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await tr(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return a["rd"](()=>{const i=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new d("Verbose mode is not implemented yet.");if(null!=s)throw new d("steps mode in testLoop() is not implemented yet");{const r=fr(i,n),s=Object(a["nd"])(dt(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],u=r[n][1],l=yt(s,i,u-i),c=pr(e,l),h=t(c);if(0===n)for(let t=0;t<h.length;++t)o.push(Object(a["Fc"])(0));for(let t=0;t<h.length;++t){const e=h[t];o[t]=a["r"](o[t],a["gc"](u-i,e))}}for(let t=0;t<o.length;++t)o[t]=a["gb"](o[t],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(g(t,r)>1){const e=g(t.slice(0,n),r);s+="_"+e}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new Vn(t),u=qn(this.outputs,o,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){const t=this.lossFunctions[n];let i=t(r[n],u[n]);null!=s[n]&&(i=er(i,s[n]));const o=a["ac"](i);e.push(o),l=0===n?i:a["r"](l,i)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=a["ac"](e(r[s],u[s]))}a["Gb"](t),i.push(t)}return l=a["ac"](l),this.calculateLosses().forEach(t=>{l=a["r"](l,t)}),l},u=this.collectedTrainableWeights.map(t=>t.read()),l=!0,c=this.optimizer_.minimize(o,l,u);return[c].concat(i)}}makeTestFunction(){this.testFunction=t=>a["rd"](()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new Vn(i),u=qn(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=a["ac"](r(s[t],u[t]));n=0===t?i:a["r"](n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=a["ac"](n(s[r],u[r]));e.push(i)}return e})}async fit(t,e,n={}){return gr(this,t,e,n)}async fitDataset(t,e){return ir(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction(),o=i(r.concat(s)),u=[];for(const a of o){const t=await a.data();u.push(t[0])}return a["fb"](o),b(u)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||e.push({name:r[a].originalName,tensor:s[a]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=a["bc"]().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-a["bc"]().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=x(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>x(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=x(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[x(Nn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>x(Nn(t)));{const t={};for(const e in this.metrics)t[e]=x(Nn(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Ln(t.optimizer_config),n=Ve(e);let r,s;if("string"===typeof t.loss)r=w(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(t=>w(t));else if(null!=t.loss){r={};for(const e in t.loss)r[e]=w(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map(t=>w(t));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=w(t.metrics[e])}this.compile({loss:r,metrics:s,optimizer:n})}async save(t,e){if("string"===typeof t){const e=a["Eb"].getSaveHandlers(t);if(0===e.length)throw new h(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new h(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new h("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a["Eb"].encodeWeights(this.getNamedWeights(e)),r=!1,s=null,i=this.toJSON(s,r),o={modelTopology:i,format:Nr,generatedBy:"TensorFlow.js tfjs-layers v"+Pn,convertedBy:null},u=null!=e&&e.includeOptimizer;if(u&&null!=this.optimizer){o.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await a["Eb"].encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=a["Eb"].concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;$n(this.userDefinedMetadata,this.name,t),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,t.save(o)}setUserDefinedMetadata(t){$n(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Er.className="Model",a["Jc"].registerClass(Er);class Ar extends Er{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:le("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){const e=t.inboundNodes[0].outputTensors[0].shape;if(e.some(t=>t<0))throw new h("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Ar||t instanceof Er;let n;if(e){if(n=t,1!==n.outputs.length)throw new h("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new h("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new h("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=$e({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new h(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new h("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Ee(this.outputs[0])}this.inboundNodes=[],new Se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:f(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(pe(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Er({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0]["className"])throw new h("Legacy serialization format not supported yet.");s=e}else a["zd"].assert(null!=e["layers"],()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e["layers"],delete e["layers"],i=e;const o=new t(i);if(!(o instanceof Ar))throw new d("Sequential.fromConfig called on non-Sequential input: "+o);for(const a of s){const t=void 0,e=Ve(a,t,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new h("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new h("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n["className"]=e.getClassName(),n["config"]=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function $r(t){return new Ar(t)}function Rr(t){return $e(t)}Ar.className="Sequential",a["Jc"].registerClass(Ar);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Tr extends a["Jc"].Serializable{getConfig(){return{}}}class Dr extends Tr{apply(t,e=1){return $t(t,e)}}Dr.className="elu",a["Jc"].registerClass(Dr);class Fr extends Tr{apply(t){return a["Hc"](t)}}Fr.className="selu",a["Jc"].registerClass(Fr);class _r extends Tr{apply(t){return a["zc"](t)}}_r.className="relu",a["Jc"].registerClass(_r);class jr extends Tr{apply(t){return Object(a["rd"])(()=>a["dc"](6,a["zc"](t)))}}jr.className="relu6",a["Jc"].registerClass(jr);class zr extends Tr{apply(t){return t}}zr.className="linear",a["Jc"].registerClass(zr);class Mr extends Tr{apply(t){return a["Mc"](t)}}Mr.className="sigmoid",a["Jc"].registerClass(Mr);class Lr extends Tr{apply(t){return Dt(t)}}Lr.className="hardSigmoid",a["Jc"].registerClass(Lr);class Br extends Tr{apply(t){return a["Xc"](t)}}Br.className="softplus",a["Jc"].registerClass(Br);class Pr extends Tr{apply(t){return Rt(t)}}Pr.className="softsign",a["Jc"].registerClass(Pr);class Wr extends Tr{apply(t){return a["ld"](t)}}Wr.className="tanh",a["Jc"].registerClass(Wr);class Vr extends Tr{apply(t,e=-1){return a["Wc"](t,e)}}Vr.className="softmax",a["Jc"].registerClass(Vr);class Ur extends Tr{apply(t,e=-1){return a["Qb"](t,e)}}function Gr(t){return t.getClassName()}function qr(t,e={}){return C(t,a["Jc"].SerializationMap.getMap().classNameMap,e,"activation")}function Hr(t){if(null==t){const t={className:"linear",config:{}};return qr(t)}if("string"===typeof t){const e={};return e["className"]=t,e["config"]={},qr(e)}return t instanceof Tr?t:qr(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kr(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Ur.className="logSoftmax",a["Jc"].registerClass(Ur);class Xr extends a["Jc"].Serializable{}class Jr extends Xr{constructor(t){super(),Kr(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(a["rd"])(()=>{let e=Object(a["Fd"])([1]);return this.hasL1&&(e=Object(a["r"])(e,Object(a["id"])(a["gc"](this.l1,Object(a["o"])(t))))),this.hasL2&&(e=Object(a["r"])(e,Object(a["id"])(a["gc"](this.l2,Nt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e["l1"],l2:e["l2"]})}}Jr.className="L1L2",a["Jc"].registerClass(Jr);const Yr={l1l2:"L1L2"};function Zr(t){return O(t)}function Qr(t,e={}){return C(t,a["Jc"].SerializationMap.getMap().classNameMap,e,"regularizer")}function ts(t){if(null==t)return null;if("string"===typeof t){const e=t in Yr?Yr[t]:t,n={className:e,config:{}};return Qr(n)}return t instanceof Xr?t:Qr(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class es extends Ie{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=de(t);let n=Object(a["zc"])(t);return null!=this.maxValue&&(n=Object(a["P"])(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}es.className="ReLU",a["Jc"].registerClass(es);class ns extends Ie{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=de(t);return Object(a["Ib"])(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ns.className="LeakyReLU",a["Jc"].registerClass(ns);class rs extends Ie{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ae(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ts(t.alphaRegularizer),this.alphaConstraint=U(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new h("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){t=pe(t);const e=t.slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new we({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=de(t),Object(a["qc"])(t,this.alpha.read())}getConfig(){const t={alphaInitializer:se(this.alphaInitializer),alphaRegularizer:Zr(this.alphaRegularizer),alphaConstraint:W(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}rs.className="PReLU",a["Jc"].registerClass(rs);class ss extends Ie{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new d(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=de(t);return Object(a["jb"])(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ss.className="ELU",a["Jc"].registerClass(ss);class as extends Ie{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=de(t);return n.mul(pt(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}as.className="ThresholdedReLU",a["Jc"].registerClass(as);class is extends Ie{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Vr).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=de(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function os(t,e,n){if("number"===typeof t)return f(t,e);if(t.length!==e)throw new h(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const s=t[r];if(!ot(s))throw new h(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+s)}return t}function us(t,e,n,r,s=1){if(null==t)return t;const a=e+(e-1)*(s-1);let i;return i="same"===n?t:t-a+1,Math.floor((i+r-1)/r)}function ls(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ht([n-e,0]);else{if("same"!==r)throw new h(`Unsupport padding mode: ${r}.`);t*=e}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cs(t,e){return Object(a["rd"])(()=>(J(e),"channelsFirst"===e?a["vd"](t,[0,2,3,1]):t))}function hs(t,e){return Object(a["rd"])(()=>(J(e),"channelsFirst"===e?a["vd"](t,[0,2,3,4,1]):t))}function ds(t,e,n,r=1,s="valid",i,o=1){return Object(a["rd"])(()=>{if(null==i&&(i=u()),J(i),3!==t.shape.length)throw new h("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new h("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new h("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===i&&(t=a["vd"](t,[0,2,1])),"causal"===s)throw new d("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=a["W"](t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(l=At(l,n)),l})}function ps(t,e,n,r=[1,1],s="valid",i,o,l=null){return Object(a["rd"])(()=>{if(null==i&&(i=u()),J(i),3!==t.rank&&4!==t.rank)throw new h(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new h(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let c=cs(t,i);if("causal"===s)throw new d("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=a["wb"].conv2d({x:c,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(c=a["vd"](c,[0,3,1,2])),c})}function fs(t,e,n,r=[1,1,1],s="valid",i,o){return Object(a["rd"])(()=>{if(null==i&&(i=u()),J(i),4!==t.rank&&5!==t.rank)throw new h("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new h("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let l=hs(t,i);if("causal"===s)throw new d("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=a["Z"](l,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(l=At(l,n)),"channelsFirst"===i&&(l=a["vd"](l,[0,4,1,2,3])),l})}is.className="Softmax",a["Jc"].registerClass(is);class ms extends Ie{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ms.verifyArgs(e),this.rank=t,R(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new d(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=os(e.kernelSize,t,"kernelSize"),this.strides=os(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Y(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,J(this.dataFormat),this.activation=Hr(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=ae(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=U(e.biasConstraint),this.biasRegularizer=ts(e.biasRegularizer),this.activityRegularizer=ts(e.activityRegularizer),this.dilationRate=os(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new h("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new h("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new h("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(m("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,3))throw new h(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Gr(this.activation),useBias:this.useBias,biasInitializer:se(this.biasInitializer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),biasConstraint:W(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class gs extends ms{constructor(t,e){super(t,e),this.kernel=null,gs.verifyArgs(e),this.filters=e.filters,R(this.filters,"filters"),this.kernelInitializer=ae(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=U(e.kernelConstraint),this.kernelRegularizer=ts(e.kernelRegularizer)}build(t){t=pe(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new h("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(a["rd"])(()=>{let e;t=de(t);const n=null==this.bias?null:this.bias.read(),r=F(this.activation.getClassName());if(null!=r&&2===this.rank)e=ps(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=ds(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=ps(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new d("convolutions greater than 3D are not implemented yet.");e=fs(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=pe(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=us(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:se(this.kernelInitializer),kernelRegularizer:Zr(this.kernelRegularizer),kernelConstraint:W(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new h("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class bs extends gs{constructor(t){super(2,t),bs.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t["rank"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,2))throw new h(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}bs.className="Conv2D",a["Jc"].registerClass(bs);class ys extends gs{constructor(t){super(3,t),ys.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t["rank"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new h(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}ys.className="Conv3D",a["Jc"].registerClass(ys);class xs extends bs{constructor(t){if(super(t),this.inputSpec=[new we({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new h("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(t=pe(t),4!==t.length)throw new h("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new h("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new we({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return a["rd"](()=>{let e=de(t);if(4!==e.shape.length)throw new h("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],u=n[i],l=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=ls(o,d,l,this.padding),m=ls(u,p,c,this.padding),g=[r,f,m,this.filters];"channelsLast"!==this.dataFormat&&(e=a["vd"](e,[0,2,3,1]));let b=a["Y"](e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=a["vd"](b,[0,3,1,2])),null!=this.bias&&(b=At(b,this.bias.read(),this.dataFormat)),null!=this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=pe(t);const e=t.slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=ls(e[r],o,a,this.padding),e[s]=ls(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t["dilationRate"],t}}xs.className="Conv2DTranspose",a["Jc"].registerClass(xs);class ws extends gs{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new h("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new h("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new h(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ae(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ts(e.depthwiseRegularizer),this.depthwiseConstraint=U(e.depthwiseConstraint),this.pointwiseInitializer=ae(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ts(e.pointwiseRegularizer),this.pointwiseConstraint=U(e.pointwiseConstraint)}build(t){if(t=pe(t),t.length<this.rank+2)throw new h(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new h("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new we({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(a["rd"])(()=>{let e;if(t=de(t),1===this.rank)throw new d("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=a["vd"](t,[0,2,3,1])),e=a["Ic"](t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=At(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=a["vd"](e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t["rank"],delete t["kernelInitializer"],delete t["kernelRegularizer"],delete t["kernelConstraint"],t["depthwiseInitializer"]=se(this.depthwiseInitializer),t["pointwiseInitializer"]=se(this.pointwiseInitializer),t["depthwiseRegularizer"]=Zr(this.depthwiseRegularizer),t["pointwiseRegularizer"]=Zr(this.pointwiseRegularizer),t["depthwiseConstraint"]=W(this.depthwiseConstraint),t["pointwiseConstraint"]=W(this.pointwiseConstraint),t}}ws.className="SeparableConv";class vs extends ws{constructor(t){super(2,t)}}vs.className="SeparableConv2D",a["Jc"].registerClass(vs);class Os extends gs{constructor(t){super(1,t),Os.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t["rank"],delete t["dataFormat"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,1))throw new h(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Os.className="Conv1D",a["Jc"].registerClass(Os);class Ss extends Ie{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(a["rd"])(()=>{if(t=de(t),"channelsLast"===this.dataFormat){const e=wt(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wt(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=wt(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wt(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ss.className="Cropping2D",a["Jc"].registerClass(Ss);class Cs extends Ie{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return a["rd"](()=>{let e=de(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=a["vd"](e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return a["vd"](s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Is(t,e,n=[1,1],r="valid",s,i){return Object(a["rd"])(()=>{null==s&&(s=u()),J(s);let o=cs(t,s);if(4!==t.rank)throw new h("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new h("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return o=a["db"](o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=a["vd"](o,[0,3,1,2])),o})}Cs.className="UpSampling2D",a["Jc"].registerClass(Cs);class ks extends ms{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ae(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=U(t.depthwiseConstraint),this.depthwiseRegularizer=ts(t.depthwiseRegularizer)}build(t){if(t=pe(t),t.length<4)throw new h(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new h(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a["rd"])(()=>{t=de(t);let e=Is(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=At(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=pe(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=us(e,this.kernelSize[0],this.padding,this.strides[0]),a=us(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t["depthMultiplier"]=this.depthMultiplier,t["depthwiseInitializer"]=se(this.depthwiseInitializer),t["depthwiseRegularizer"]=Zr(this.depthwiseRegularizer),t["depthwiseConstraint"]=W(this.depthwiseRegularizer),t}}ks.className="DepthwiseConv2D",a["Jc"].registerClass(ks);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ns extends Ie{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t);if(0<this.rate&&this.rate<1){const t=null!=e["training"]&&e["training"],r=this.getNoiseShape(n),s=Ft(()=>Tt(n,this.rate,r,this.seed),()=>n,t);return s}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Ns.className="Dropout",a["Jc"].registerClass(Ns);class Es extends Ns{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Es.className="SpatialDropout1D",a["Jc"].registerClass(Es);class As extends Ie{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,R(this.units,"units"),this.activation=Hr(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=U(t.kernelConstraint),this.biasConstraint=U(t.biasConstraint),this.kernelRegularizer=ts(t.kernelRegularizer),this.biasRegularizer=ts(t.biasRegularizer),this.activityRegularizer=ts(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=pe(t);const e=t[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=pe(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t),r=F(this.activation.getClassName());let s;return null!=r?s=It(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=It(n,this.kernel.read()),null!=this.bias&&(s=At(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:Gr(this.activation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Zr(this.kernelRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),biasConstraint:W(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}As.className="Dense",a["Jc"].registerClass(As);class $s extends Ie{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=pe(t);for(const e of t.slice(1))if(null==e)throw new h(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ut(t,1)]}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);let n=de(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return bt(n)})}getConfig(){const t={};null!=this.dataFormat&&(t["dataFormat"]=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}$s.className="Flatten",a["Jc"].registerClass($s);class Rs extends Ie{constructor(t){super(t),this.supportsMasking=!0,this.activation=Hr(t.activation)}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t);return this.activation.apply(n)})}getConfig(){const t={activation:Gr(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Rs.className="Activation",a["Jc"].registerClass(Rs);class Ts extends Ie{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(a["rd"])(()=>(t=de(t),mt(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Ts.className="RepeatVector",a["Jc"].registerClass(Ts);class Ds extends Ie{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==a)throw new h("Can only specifiy one unknown dimension.");a=o}else s*=t}const i=ut(t);if(null!==a){if(0===s||i%s!==0)throw new h(n);r[a]=i/s}else if(i!==s)throw new h(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ds.className="Reshape",a["Jc"].registerClass(Ds);class Fs extends Ie{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=dt(1,t.dims.length+1);if(!a["zd"].arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new we({ndim:this.dims.length+1})]}computeOutputShape(t){t=pe(t);const e=t.slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(a["vd"])(de(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Fs.className="Permute",a["Jc"].registerClass(Fs);class _s extends Ie{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=de(t),r=-1;return Object(a["u"])(Object(a["kc"])(n,this.maskValue),r)}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t),r=-1,s=!0,i=Object(a["u"])(Object(a["kc"])(n,this.maskValue),r,s),o=n.mul(i.asType(n.dtype));return o})}}_s.className="Masking",a["Jc"].registerClass(_s);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class js extends Ie{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(y(t.inputLength))}this.inputDim=t.inputDim,R(this.inputDim,"inputDim"),this.outputDim=t.outputDim,R(this.outputDim,"outputDim"),this.embeddingsInitializer=ae(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ts(t.embeddingsRegularizer),this.activityRegularizer=ts(t.activityRegularizer),this.embeddingsConstraint=U(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(a["rd"])(()=>this.maskZero?(t=de(t),Object(a["kc"])(t,Object(a["Gd"])(t))):null)}computeOutputShape(t){if(t=pe(t),null==this.inputLength)return[...t,this.outputDim];const e=y(this.inputLength);if(e.length!==t.length-1)throw new h(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new h(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);let n=de(t);"int32"!==n.dtype&&(n=pt(n,"int32"));const r=kt(this.embeddings.read(),n.as1D());return r.reshape(pe(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:se(this.embeddingsInitializer),embeddingsRegularizer:Zr(this.embeddingsRegularizer),activityRegularizer:Zr(this.activityRegularizer),embeddingsConstraint:W(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}js.className="Embedding",a["Jc"].registerClass(js);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class zs extends Ie{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new d}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new h("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[pe(t)]),t=t,t.length<2)throw new h(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=N(e),e.length>1)throw new h(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===N(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(a["rd"])(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=ht(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=ft(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const i of t){const t=i.rank;if(null==t){const t=i.shape,r=t[0],s=t.slice(1).concat([r]);let o=i.reshape([r].concat(ut(t.slice(1))));o=a["vd"](o,[1,0]),o=o.reshape(s),e.push(o),n=!0}else if(t>1){const r=dt(1,t).concat([0]);e.push(a["vd"](i,r)),n=!0}else e.push(i)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t.length,n=t[e-1],s=[n].concat(t.slice(0,t.length-1));r=a["vd"](r.reshape([-1,n]),[1,0]).reshape(s)}else if(s>1){const t=[s-1].concat(dt(0,s-1));r=a["vd"](r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;t=t,e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=N(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return a["rd"](()=>{if(null==e)return null;if(!Array.isArray(e))throw new h("`mask` should be an Array");if(!Array.isArray(t))throw new h("`inputs` should be an Array");if(e.length!==t.length)throw new h(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;e=e.map(t=>null==t?t:a["pb"](t,0));let n=e[0];for(let t=1;t<e.length-1;++t)n=a["Rb"](n,e[t]);return n})}}class Ms extends zs{constructor(t){super(t)}mergeFunction(t){return Object(a["rd"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a["r"](e,t[n]);return e})}}Ms.className="Add",a["Jc"].registerClass(Ms);class Ls extends zs{constructor(t){super(t)}mergeFunction(t){return Object(a["rd"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a["gc"](e,t[n]);return e})}}Ls.className="Multiply",a["Jc"].registerClass(Ls);class Bs extends zs{constructor(t){super(t)}mergeFunction(t){return Object(a["rd"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a["r"](e,t[n]);return a["gc"](1/t.length,e)})}}Bs.className="Average",a["Jc"].registerClass(Bs);class Ps extends zs{constructor(t){super(t)}mergeFunction(t){return Object(a["rd"])(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a["Zb"](e,t[n]);return e})}}Ps.className="Maximum",a["Jc"].registerClass(Ps);class Ws extends zs{constructor(t){super(t)}mergeFunction(t){return Object(a["rd"])(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a["dc"](e,t[n]);return e})}}Ws.className="Minimum",a["Jc"].registerClass(Ws);class Vs extends zs{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new h("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(a["zd"].arraysEqual(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new h("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(a["rd"])(()=>vt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new h("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new h("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new h("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new h(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return a["rd"](()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let i=0;i<t.length;++i)null==e[i]?r.push(a["nc"](t[i]).asType("bool")):e[i].rank<t[i].rank?r.push(a["pb"](e[i],-1)):r.push(e[i]);const s=a["R"](r,this.axis);return a["t"](s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Us(t,e){while(t<0)t+=e;return t}function Gs(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new d("batchDot is not implemented for tensors of 4D or higher rank yet");if(a["zd"].assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),a["zd"].assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new d("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return a["rd"](()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a})}Vs.className="Concatenate",a["Jc"].registerClass(Vs);class qs extends zs{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){a["zd"].assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new d("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new h(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new h(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>Us(e,t[n].shape.length)):[Us(this.axes,n.shape.length),Us(this.axes,r.shape.length)],this.normalize&&(n=Ue(n,e[0]),r=Ue(r,e[1])),Gs(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Us(this.axes,t.length),Us(this.axes,e.length)],n}computeOutputShape(t){a["zd"].assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new d("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}qs.className="Dot",a["Jc"].registerClass(qs);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Hs extends Ie{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t),r=()=>Ct(n.shape,0,this.stddev).add(n),s=Ft(r,()=>n,e["training"]||!1);return s})}}Hs.className="GaussianNoise",a["Jc"].registerClass(Hs);class Ks extends Ie{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e);const n=de(t);if(this.rate>0&&this.rate<1){const t=()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ct(n.shape,1,t))};return Ft(t,()=>n,e["training"]||!1)}return n})}}Ks.className="GaussianDropout",a["Jc"].registerClass(Ks);class Xs extends Ie{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||de(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a["rd"])(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),r=()=>{const e=de(t),r=1.6732632423543772,s=1.0507009873554805,i=-r*s;let o=Object(a["Ab"])(Object(a["tc"])(n),this.rate);o=pt(o,"float32");const u=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-u*i*this.rate,c=e.mul(o).add(o.add(-1).mul(i));return c.mul(u).add(l)};return Ft(r,()=>de(t),e["training"]||!1)}return t})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Js(t,e,n,r,s,i=.001){let o;if(2===t.rank)o=a["H"](t,e,n,r,s,i);else if(3===t.rank)o=a["I"](t,e,n,r,s,i);else{if(4!==t.rank)throw new d(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=a["J"](t,e,n,r,s,i)}return o}function Ys(t,e,n,r,s=.001){return Object(a["rd"])(()=>{const i=a["fc"](t,r),o=i.mean,u=i.variance,l=Js(t,o,u,n,e,s);return[l,o,u]})}function Zs(t,e,n,r,s=.001){return Object(a["rd"])(()=>{const i=a["fc"](t,r),o=i.mean,u=i.variance,l=[];for(const e of dt(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const c=o.reshape(l),h=u.reshape(l),d=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l),f=Js(t,c,h,p,d,s);return[f,o,u]})}function Qs(t,e,n,r,s=.001){return a["zd"].arraysEqual(r.slice().sort(),dt(0,t.rank-1))?Ys(t,e,n,r,s):Zs(t,e,n,r,s)}Xs.className="AlphaDropout",a["Jc"].registerClass(Xs);class ta extends Ie{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ae(t.betaInitializer||"zeros"),this.gammaInitializer=ae(t.gammaInitializer||"ones"),this.movingMeanInitializer=ae(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ae(t.movingVarianceInitializer||"ones"),this.betaConstraint=U(t.betaConstraint),this.gammaConstraint=U(t.gammaConstraint),this.betaRegularizer=ts(t.betaRegularizer),this.gammaRegularizer=ts(t.gammaRegularizer)}build(t){t=pe(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new h(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new we({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(a["rd"])(()=>{const n=null!=e["training"]&&e["training"],r=de(t),s=r.shape,i=s.length,o=dt(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const l=f(1,i);l[u]=s[u];const c=o.slice();c.sort();const h=!a["zd"].arraysEqual(c,dt(0,i).slice(0,i-1)),d=()=>{if(h){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return Js(r,t,e,n,s,this.epsilon)}return Js(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[p,m,g]=Qs(r,this.gamma.read(),this.beta.read(),o,this.epsilon),b=(t,e,n)=>{a["rd"](()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))})},y=()=>{b(this.movingMean,m,this.momentum),b(this.movingVariance,g,this.momentum)};return y(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:se(this.betaInitializer),gammaInitializer:se(this.gammaInitializer),movingMeanInitializer:se(this.movingMeanInitializer),movingVarianceInitializer:se(this.movingVarianceInitializer),betaRegularizer:Zr(this.betaRegularizer),gammaRegularizer:Zr(this.gammaRegularizer),betaConstraint:W(this.betaConstraint),gammaConstraint:W(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ta.className="BatchNormalization",a["Jc"].registerClass(ta);class ea extends Ie{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ae(t.betaInitializer||"zeros"),this.gammaInitializer=ae(t.gammaInitializer||"ones"),this.betaRegularizer=ts(t.betaRegularizer),this.gammaRegularizer=ts(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=pe(t);const e=t.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(const s of this.axis)if(s<0||s>=e)throw new Error("Invalid axis: "+s);if(this.axis.length!==N(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const n=de(t),r=n.shape,s=r.length;return Object(a["rd"])(()=>{const t=!0;let{mean:e,variance:i}=Object(a["fc"])(n,this.axis,t);const o=f(1,s);for(const n of this.axis)o[n]=r[n];const u=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(o):t;let l=u(this.gamma.read()),c=u(this.beta.read());const h=[],d=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(h.push(r[n]),d.push(1)):(h.push(1),d.push(r[n]));return e=e.tile(h),i=i.tile(h),l=l.tile(d),c=c.tile(d),Js(n,e,i,c,l,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:se(this.betaInitializer),gammaInitializer:se(this.gammaInitializer),betaRegularizer:Zr(this.betaRegularizer),gammaRegularizer:Zr(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}function na(t,e,n){return Object(a["rd"])(()=>{if(4!==t.rank)throw new h("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new h("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=u()),"channelsLast"!==n&&"channelsFirst"!==n)throw new h(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],a["oc"](t,r)})}ea.className="LayerNormalization",a["Jc"].registerClass(ea);class ra extends Ie{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?u():t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new h(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new h(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new h(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){let e,n;return t=pe(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(a["rd"])(()=>na(de(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function sa(t,e,n,r,s,i){return Object(a["rd"])(()=>{let o;J(s),Z(i),Y(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s=u()),null==i&&(i="max"),t=cs(t,s);const l="same"===r?"same":"valid";return o="max"===i?a["Wb"](t,e,n,l):a["C"](t,e,n,l),"channelsFirst"===s&&(o=a["vd"](o,[0,3,1,2])),o})}function aa(t,e,n,r,s,i){return Object(a["rd"])(()=>{let o;J(s),Z(i),Y(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s=u()),null==i&&(i="max"),t=hs(t,s);const l="same"===r?"same":"valid";return o="max"===i?a["Xb"](t,e,n,l):a["D"](t,e,n,l),"channelsFirst"===s&&(o=a["vd"](o,[0,4,1,2,3])),o})}ra.className="ZeroPadding2D",a["Jc"].registerClass(ra);class ia extends Ie{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new h("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(R(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new h("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Y(this.padding),this.inputSpec=[new we({ndim:3})]}computeOutputShape(t){t=pe(t);const e=us(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(a["rd"])(()=>{this.invokeCallHook(t,e),t=ft(de(t),2);const n=this.poolingFunction(de(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a["ed"](n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class oa extends ia{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),sa(t,e,n,r,s,"max")}}oa.className="MaxPooling1D",a["Jc"].registerClass(oa);class ua extends ia{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),sa(t,e,n,r,s,"avg")}}ua.className="AveragePooling1D",a["Jc"].registerClass(ua);class la extends Ie{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new h("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];R(this.poolSize,"poolSize"),R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,J(this.dataFormat),Y(this.padding),this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){t=pe(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=us(e,this.poolSize[0],this.padding,this.strides[0]),n=us(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(a["rd"])(()=>(this.invokeCallHook(t,e),this.poolingFunction(de(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ca extends la{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),sa(t,e,n,r,s,"max")}}ca.className="MaxPooling2D",a["Jc"].registerClass(ca);class ha extends la{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),sa(t,e,n,r,s,"avg")}}ha.className="AveragePooling2D",a["Jc"].registerClass(ha);class da extends Ie{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new h("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];R(this.poolSize,"poolSize"),R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,J(this.dataFormat),Y(this.padding),this.inputSpec=[new we({ndim:5})]}computeOutputShape(t){t=pe(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=us(e,this.poolSize[0],this.padding,this.strides[0]),n=us(n,this.poolSize[1],this.padding,this.strides[1]),r=us(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(a["rd"])(()=>(this.invokeCallHook(t,e),this.poolingFunction(de(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class pa extends da{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),aa(t,e,n,r,s,"max")}}pa.className="MaxPooling3D",a["Jc"].registerClass(pa);class fa extends da{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return J(s),Y(r),aa(t,e,n,r,s,"avg")}}fa.className="AveragePooling3D",a["Jc"].registerClass(fa);class ma extends Ie{constructor(t){super(t),this.inputSpec=[new we({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new d}}class ga extends ma{constructor(t){super(t||{})}call(t,e){return Object(a["rd"])(()=>{const e=de(t);return a["ac"](e,1)})}}ga.className="GlobalAveragePooling1D",a["Jc"].registerClass(ga);class ba extends ma{constructor(t){super(t||{})}call(t,e){return Object(a["rd"])(()=>{const e=de(t);return a["Vb"](e,1)})}}ba.className="GlobalMaxPooling1D",a["Jc"].registerClass(ba);class ya extends Ie{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,J(this.dataFormat),this.inputSpec=[new we({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new d}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class xa extends ya{call(t,e){return Object(a["rd"])(()=>{const e=de(t);return"channelsLast"===this.dataFormat?a["ac"](e,[1,2]):a["ac"](e,[2,3])})}}xa.className="GlobalAveragePooling2D",a["Jc"].registerClass(xa);class wa extends ya{call(t,e){return Object(a["rd"])(()=>{const e=de(t);return"channelsLast"===this.dataFormat?a["Vb"](e,[1,2]):a["Vb"](e,[2,3])})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function va(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new h("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return e=s(e),n=s(n),{inputs:t,initialState:e,constants:n}}function Oa(t,e,n,r=!1,s,i,o=!1,u=!1){return a["rd"](()=>{const l=e.shape.length;if(l<3)throw new h(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(dt(2,l));if(e=a["vd"](e,c),null!=i)throw new d("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=s.asType("bool").asType("float32"),s.rank===l-1&&(s=a["pb"](s,-1)),s=a["vd"](s,c)),r&&(e=a["Bc"](e,0),null!=s&&(s=a["Bc"](s,0)));const p=[];let f,m=n;const g=e.shape[0],b=a["xd"](e);let y,x;null!=s&&(y=a["xd"](s));for(let e=0;e<g;++e){const n=b[e],r=a["rd"](()=>t(n,m));if(null==s)f=r[0],m=r[1];else{const t=a["rd"](()=>{const t=y[e],n=a["nc"](t).sub(t),s=r[0].mul(t).add(m[0].mul(n)),i=m.map((e,s)=>r[1][s].mul(t).add(e.mul(n)));return{output:s,newStates:i}});f=t.output,m=t.newStates}u&&p.push(f)}if(u){const t=1;x=a["fd"](p,t)}return[f,x,m]})}wa.className="GlobalMaxPooling2D",a["Jc"].registerClass(wa);class Sa extends Ie{constructor(t){let e;if(super(t),null==t.cell)throw new h("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ra({cells:t.cell}):t.cell,null==e.stateSize)throw new h("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new we({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return dt(0,t).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){ce(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return a["rd"](()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){const e=null;if(null!=this.numConstants)throw new d("Constants support is not implemented in RNN yet.");ce(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,r=t[t.length-1];this.inputSpec[0]=new we({shape:[n,null,r]});const s=[t[0]].concat(t.slice(2));if(null!=e)throw new d("Constants support is not implemented in RNN yet.");let i;if(this.cell.build(s),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a["zd"].arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),i))throw new h(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=i.map(t=>new we({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(a["rd"])(()=>{if(!this.stateful)throw new l("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new h("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a["Fd"]([n,t])):this.states_=[a["Fd"]([n,this.cell.stateSize])];else if(null==t)a["fb"](this.states_),null!=this.keptStates&&(a["fb"](this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a["Fd"]([n,t])):this.states_[0]=a["Fd"]([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new h(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):a["fb"](this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!a["zd"].arraysEqual(r.shape,i))throw new h(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>a["Gb"](t.clone()))})}apply(t,e){let n=null==e?null:e["initialState"],r=null==e?null:e["constants"];null==e&&(e={});const s=va(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e["initialState"]=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new we({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e["constants"]=r,a=a.concat(r),this.numConstants=r.length);const o=a[0]instanceof ve;if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Object(a["rd"])(()=>{const n=null==e?null:e["mask"],r=null==e?null:e["training"];let s=null==e?null:e["initialState"];t=de(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new h(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=(t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},u=Oa(o,t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?c:l;return this.returnState?[p].concat(d):p})}getInitialState(t){return Object(a["rd"])(()=>{let e=a["Fd"](t.shape);return e=a["id"](e,[1,2]),e=ft(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?St(e,[1,t]):e):this.cell.stateSize>1?[St(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const e=this.cell.getConfig();t["cell"]={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=e["cell"],s=Ve(r,n);return new t(Object.assign(e,{cell:s}))}}Sa.className="RNN",a["Jc"].registerClass(Sa);class Ca extends Ie{}class Ia extends Ca{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,R(this.units,"units"),this.activation=Hr(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ts(t.kernelRegularizer),this.recurrentRegularizer=ts(t.recurrentRegularizer),this.biasRegularizer=ts(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ct([1,ht([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ct([1,ht([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=pe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a["rd"])(()=>{if(t=t,2!==t.length)throw new h(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e["training"]&&e["training"];let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ta(()=>a["nc"](t),this.dropout,r)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ta(()=>a["nc"](n),this.recurrentDropout,r));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=It(null!=i?a["gc"](t,i):t,this.kernel.read()),null!=this.bias&&(s=At(s,this.bias.read())),null!=o&&(n=a["gc"](n,o));let u=a["r"](s,It(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t={units:this.units,activation:Gr(this.activation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}Ia.className="SimpleRNNCell",a["Jc"].registerClass(Ia);class ka extends Sa{constructor(t){t.cell=new Ia(t),super(t)}call(t,e){return Object(a["rd"])(()=>{null!=this.cell.dropoutMask&&(a["fb"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a["fb"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],s=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:Gr(this.activation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e["cell"],Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}ka.className="SimpleRNN",a["Jc"].registerClass(ka);class Na extends Ca{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,R(this.units,"units"),this.activation=Hr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Hr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ts(t.kernelRegularizer),this.recurrentRegularizer=ts(t.recurrentRegularizer),this.biasRegularizer=ts(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ct([1,ht([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ct([1,ht([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=pe(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a["rd"])(()=>{if(t=t,2!==t.length)throw new h("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e["training"]&&e["training"];let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ta(()=>a["nc"](t),this.dropout,n,3)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ta(()=>a["nc"](r),this.recurrentDropout,n,3));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l;0<this.dropout&&this.dropout<1&&(t=a["gc"](t,s[0]));let c=It(t,this.kernel.read());this.useBias&&(c=At(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a["gc"](r,i[0]));const d=this.recurrentKernel.read(),[p,f]=a["ad"](d,[2*this.units,this.units],d.rank-1),m=It(r,p),[g,b,y]=a["ad"](c,3,c.rank-1),[x,w]=a["ad"](m,2,m.rank-1);o=this.recurrentActivation.apply(a["r"](g,x)),u=this.recurrentActivation.apply(a["r"](b,w));const v=It(a["gc"](u,r),f);l=this.activation.apply(a["r"](y,v));const O=a["r"](a["gc"](o,r),a["gc"](a["r"](1,a["ic"](o)),l));return[O,O]})}getConfig(){const t={units:this.units,activation:Gr(this.activation),recurrentActivation:Gr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}Na.className="GRUCell",a["Jc"].registerClass(Na);class Ea extends Sa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Na(t),super(t)}call(t,e){return Object(a["rd"])(()=>{null!=this.cell.dropoutMask&&(a["fb"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a["fb"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],s=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Gr(this.activation),recurrentActivation:Gr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e["cell"],Object.assign(t,e),t}static fromConfig(t,e){return 0===e["implmentation"]&&(e["implementation"]=1),new t(e)}}Ea.className="GRU",a["Jc"].registerClass(Ea);class Aa extends Ca{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,R(this.units,"units"),this.activation=Hr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Hr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ts(t.kernelRegularizer),this.recurrentRegularizer=ts(t.recurrentRegularizer),this.biasRegularizer=ts(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ct([1,ht([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ct([1,ht([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=pe(t);const n=t[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new(e=class extends Lt{apply(e,r){const s=t.apply([n]),a=(new Pt).apply([n]),i=t.apply([2*n]);return Ot(Ot(s,a),i)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(a["rd"])(()=>{const n=null!=e["training"]&&e["training"];if(t=t,3!==t.length)throw new h("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ta(()=>a["nc"](t),this.dropout,n,4)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ta(()=>a["nc"](r),this.recurrentDropout,n,4));const i=this.dropoutMask,o=this.recurrentDropoutMask;let u,l,c,d;0<this.dropout&&this.dropout<1&&(t=a["gc"](t,i[0]));let p=It(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a["gc"](r,o[0])),p=a["r"](p,It(r,this.recurrentKernel.read())),this.useBias&&(p=At(p,this.bias.read()));const[f,m,g,b]=a["ad"](p,4,p.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(m),c=a["r"](a["gc"](l,s),a["gc"](u,this.activation.apply(g))),d=this.recurrentActivation.apply(b);const y=a["gc"](d,this.activation.apply(c));return[y,y,c]})}getConfig(){const t={units:this.units,activation:Gr(this.activation),recurrentActivation:Gr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}Aa.className="LSTMCell",a["Jc"].registerClass(Aa);class $a extends Sa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Aa(t),super(t)}call(t,e){return Object(a["rd"])(()=>{null!=this.cell.dropoutMask&&(a["fb"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a["fb"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],s=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Gr(this.activation),recurrentActivation:Gr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:se(this.kernelInitializer),recurrentInitializer:se(this.recurrentInitializer),biasInitializer:se(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Zr(this.kernelRegularizer),recurrentRegularizer:Zr(this.recurrentRegularizer),biasRegularizer:Zr(this.biasRegularizer),activityRegularizer:Zr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e["cell"],Object.assign(t,e),t}static fromConfig(t,e){return 0===e["implmentation"]&&(e["implementation"]=1),new t(e)}}$a.className="LSTM",a["Jc"].registerClass($a);class Ra extends Ca{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(a["rd"])(()=>{t=t;let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)})}build(t){let e;ce(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{et("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=[];for(const r of this.cells)t.push({className:r.getClassName(),config:r.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const s of e["cells"])r.push(Ve(s,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ye(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}xe(e)}}function Ta(t,e,n=null,r=1){function s(){return Tt(t(),e)}if(r>1){const e=[];for(let a=0;a<r;a++)e.push(Ft(s,t,n));return e.map(t=>a["Gb"](t.clone()))}return a["Gb"](Ft(s,t,n).clone())}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */Ra.className="StackedRNNCells",a["Jc"].registerClass(Ra);class Da extends Ie{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=e["layer"],s=Ve(r,n);delete e["layer"];const a={layer:s};return Object.assign(a,e),new t(a)}}class Fa extends Da{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=pe(t),t.length<3)throw new h("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=pe(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(a["rd"])(()=>{t=de(t);const n=(t,n)=>{const r=de(this.layer.call(t,e));return[r,[]]},r=Oa(n,t,[],!1,null,null,!1,!0),s=r[1];return s})}}function _a(t){A(K,"BidirectionalMergeMode",t)}Fa.className="TimeDistributed",a["Jc"].registerClass(Fa);const ja="concat";class za extends Da{constructor(t){super(t);const e=t.layer.getConfig(),n={};n["className"]=t.layer.getClassName(),n["config"]=e,this.forwardLayer=Ve(n),e["goBackwards"]=!0!==e["goBackwards"];const r={};if(r["className"]=t.layer.getClassName(),r["config"]=e,this.backwardLayer=Ve(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?ja:t.mergeMode,_a(this.mergeMode),t.weights)throw new d("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):b(n)}apply(t,e){let n=null==e?null:e["initialState"],r=null==e?null:e["constants"];null==e&&(e={});const s=va(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new h("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e["initialState"]=n,a.push(...n);const r=n.map(t=>new we({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new d("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ve;for(const u of a)if(u instanceof ve!==o)throw new h("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Object(a["rd"])(()=>{const n=e["initialState"];let r,s,i,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a["Bc"](s,1)),"concat"===this.mergeMode?o=vt([r,s]):"sum"===this.mergeMode?o=a["r"](r,s):"ave"===this.mergeMode?o=a["gc"](.5,a["r"](r,s)):"mul"===this.mergeMode?o=a["gc"](r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){et(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),et(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states,e=t.map(t=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Ve(e["layer"]);if(delete e["layer"],null!=e["numConstants"])throw new d("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r["layer"]=n,new t(r)}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Ma(t){return new Ae(t)}function La(t){return new ss(t)}function Ba(t){return new es(t)}function Pa(t){return new ns(t)}function Wa(t){return new rs(t)}function Va(t){return new is(t)}function Ua(t){return new as(t)}function Ga(t){return new Os(t)}function qa(t){return new bs(t)}function Ha(t){return new xs(t)}function Ka(t){return new ys(t)}function Xa(t){return new vs(t)}function Ja(t){return new Ss(t)}function Ya(t){return new Cs(t)}function Za(t){return new ks(t)}function Qa(t){return new Rs(t)}function ti(t){return new As(t)}function ei(t){return new Ns(t)}function ni(t){return new Es(t)}function ri(t){return new $s(t)}function si(t){return new Ts(t)}function ai(t){return new Ds(t)}function ii(t){return new Fs(t)}function oi(t){return new js(t)}function ui(t){return new Ms(t)}function li(t){return new Bs(t)}function ci(t){return new Vs(t)}function hi(t){return new Ps(t)}function di(t){return new Ws(t)}function pi(t){return new Ls(t)}function fi(t){return new qs(t)}function mi(t){return new ta(t)}function gi(t){return new ea(t)}function bi(t){return new ra(t)}function yi(t){return new ua(t)}function xi(t){return yi(t)}function wi(t){return yi(t)}function vi(t){return new ha(t)}function Oi(t){return vi(t)}function Si(t){return vi(t)}function Ci(t){return new fa(t)}function Ii(t){return Ci(t)}function ki(t){return Ci(t)}function Ni(t){return new ga(t)}function Ei(t){return new xa(t)}function Ai(t){return new ba(t)}function $i(t){return new wa(t)}function Ri(t){return new oa(t)}function Ti(t){return new ca(t)}function Di(t){return new pa(t)}function Fi(t){return new Ea(t)}function _i(t){return new Na(t)}function ji(t){return new $a(t)}function zi(t){return new Aa(t)}function Mi(t){return new ka(t)}function Li(t){return new Ia(t)}function Bi(t){return new Sa(t)}function Pi(t){return new Ra(t)}function Wi(t){return new za(t)}function Vi(t){return new Fa(t)}za.className="Bidirectional",a["Jc"].registerClass(za);const Ui=Ai,Gi=$i,qi=Ri,Hi=Ti;function Ki(t){return new Hs(t)}function Xi(t){return new Ks(t)}function Ji(t){return new Xs(t)}function Yi(t){return new _s(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
n("f8bb"),n("526c");n("d303");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zi{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.id=Zi.nextId++}get closed(){return this.closed_}clearAndClose(){this.tensors.forEach(t=>t.tensor.dispose()),this.tensors=[],this.closed_=!0}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n&&n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n&&n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(a["md"])([],[0].concat(this.elementShape));const n=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(a["fd"])(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(a["md"])([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(a["R"])(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(a["xd"])(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];Object(a["rd"])(()=>{e=e.reshape([1,n,s]);for(let n=0;n<t.length;++n){const o=0===n?0:r[n-1],u=[0,o,0],l=[1,t[n],s];i[n]=Object(a["Qc"])(e,u,l).reshape(this.elementShape)}return i});const o=[];for(let a=0;a<t.length;a++)o[a]=a;this.writeMany(o,i)}assertShapesMatchAllowUndefinedSize(t,e,n=""){a["zd"].assert(this.shapesEqualAllowUndefinedSize(t,e),()=>n+` Shapes ${t} and ${e} must match`)}shapesEqualAllowUndefinedSize(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}}Zi.nextId=0;
/** @license See the LICENSE file. */
const Qi="2.0.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var to=n("6125"),eo=n("c388"),no=n("bdcf");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class ro{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return a["zd"].assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),so(async()=>(await n.iterator()).columnMajorBatch(t,e,ao),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,so(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,so(async()=>(await e.iterator()).filter(e=>a["rd"](()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return so(async()=>(await e.iterator()).map(e=>a["rd"](()=>t(e))),this.size)}mapAsync(t){const e=this;return so(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return so(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,so(async()=>{const n=Object(eo["e"])(async()=>({value:await e.iterator(),done:!1}));return Object(eo["d"])(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,so(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=to["alea"](e||a["zd"].now().toString());return so(async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,so(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function so(t,e=null){return new class extends ro{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function ao(t){if(null===t)return null;const e=t[0];if(Object(no["a"])(e)){const e=io(t);return{value:e,recurse:!1}}return{value:null,recurse:!0}}function io(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof a["l"]?a["fd"](t):a["md"](t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */ro.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
eo["a"];
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */eo["a"];
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var oo=n("dc14");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */oo["a"];
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/** @license See the LICENSE file. */
const uo="2.0.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(t,e,n,r){const s=a["zd"].getTypedArrayFromDType(r,a["zd"].sizeFromShape(n));for(let a=0;a<s.length;++a){const n=a*e;let r=t[n];for(let s=0;s<e;++s){const e=t[n+s];e>r&&(r=e)}s[a]=r}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(t,e,n,r,s){const i=e.length,o=a["zd"].sizeFromShape(e),u=a["zd"].computeStrides(e),l=a["zd"].computeStrides(s),c=a["zd"].getTypedArrayFromDType(n,a["zd"].sizeFromShape(s));for(let h=0;h<o;++h){const e=a["zd"].indexToLoc(h,i,u),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];const s=a["zd"].locToIndex(n,i,l);c[s]=t[h]}return c}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a["zd"].assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function po(t,e,n,r,s,i){const o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Object(a["M"])(s.outShape,n),b=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],w=s.outShape[3];for(let a=0;a<s.batchSize;++a){const e=a*y,n=a*r[0];for(let a=0;a<s.inChannels;++a)for(let g=0;g<s.outHeight;++g){const y=g*o-p,v=Math.max(0,y),O=Math.min(s.inHeight,h+y),S=e+g*x;for(let e=0;e<s.outWidth;++e){const o=e*u-f,h=Math.max(0,o),p=Math.min(s.inWidth,d+o);let g=m,y=0,x=0;for(let e=v;e<O;e+=l){const s=n+e*r[1];for(let e=h;e<p;e+=c){const n=s+e*r[2],o=t[n+a];"max"===i&&o>g?g=o:"avg"===i&&(y+=o,x++)}if(isNaN(g))break}const C=S+e*w+a;b[C]="avg"===i?y/x:g}}}return g}function fo(t,e,n,r,s=!1,i=!1){const o=Object(a["M"])(r.outShape,"int32"),u=r.strideHeight,l=r.strideWidth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Object(a["M"])(e,n,t);for(let a=0;a<r.batchSize;++a)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*u-f;let b=n;while(b<0)b+=c;const y=Math.min(r.inHeight,d+n);for(let u=0;u<r.outWidth;++u){const d=u*l-m;let f=d;while(f<0)f+=h;const x=Math.min(r.inWidth,p+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let e=b;e<y;e+=c){const o=e-n;for(let n=f;n<x;n+=h){const u=n-d,l=g.get(a,e,n,t);l>w&&(w=l,v=s?i?((a*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:o*p+u)}}o.set(v,a,e,u,t)}}return o}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mo=a["Hb"].nonMaxSuppressionV3,go=a["Hb"].split,bo=a["Hb"].tile,yo=a["Hb"].topkImpl,xo=a["Hb"].whereImpl;function wo(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class vo extends a["d"]{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a["a"](this,Object(a["kb"])())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(a["lb"])().get("IS_NODE")&&a["F"].warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n}),r}move(t,e,n,r){this.data.set(t,{values:e,dtype:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return a["F"].mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a["zd"].decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return a["M"](t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(a["kb"])().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}async time(t){const e=a["zd"].now();t();const n=a["zd"].now()-e;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64"),r=this.data.get(n.dataId);return r.complexTensors={real:Object(a["kb"])().keep(t.clone()),imag:Object(a["kb"])().keep(e.clone())},n}real(t){const e=this.data.get(t.dataId);return e.complexTensors.real.clone()}imag(t){const e=this.data.get(t.dataId);return e.complexTensors.imag.clone()}slice(t,e,n){ho(t,"slice");const r=a["Vc"].isSliceContinous(t.shape,e,n);if(r){const r=a["Vc"].computeFlatOffset(e,t.strides),s=a["zd"].sizeFromShape(n),i=this.readSync(t.dataId);return a["md"](i.subarray(r,r+s),n,t.dtype)}const s=a["M"](n,t.dtype),i=this.bufferSync(t);for(let a=0;a<s.size;++a){const t=s.indexToLoc(a),n=t.map((t,n)=>t+e[n]);s.values[a]=i.get(...n)}return s.toTensor()}stridedSlice(t,e,n,r){ho(t,"stridedSlice");const s=a["Vc"].computeOutShape(e,n,r);if(s.some(t=>0===t))return a["md"]([],s);const i=a["M"](s,t.dtype),o=this.bufferSync(t);for(let a=0;a<i.size;a++){const t=i.indexToLoc(a),n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*r[s]+e[s];i.set(o.get(...n),...t)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=a["M"]([t.size,t.size],t.dtype),r=n.values;for(let s=0;s<e.length;s++)r[s*t.size+s]=e[s];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let u=0;u<t.rank;u++)u!==e&&(r[s++]=t.shape[u]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)a[e]=u,o[u]=this.slice(t,a,i).reshape(r);return o}reverse(t,e){ho(t,"reverse");const n=a["M"](t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach(e=>i[e]=t.shape[e]-1-i[e]),n.set(r.get(...i),...a)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>a["vc"](t)),r=t.map(t=>a["Cb"](t));return a["Q"](this.concat(n,e),this.concat(r,e))}const n=t.map(t=>{const n=a["zd"].sizeFromShape(t.shape.slice(e));return t.as2D(-1,n)}),r=a["F"].computeOutShape(n.map(t=>t.shape),1),s=a["M"](r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach(e=>{s.set(this.readSync(e.dataId),t),t+=e.size})}else{let t=0;n.forEach(e=>{const n=this.readSync(e.dataId);let a=0;for(let i=0;i<e.shape[0];++i){const o=i*r[1]+t;for(let t=0;t<e.shape[1];++t)s[o+t]=n[a++]}t+=e.shape[1]})}const i=a["F"].computeOutShape(t.map(t=>t.shape),e);return a["md"](s,i,t[0].dtype)}neg(t){return ho(t,"neg"),this.multiply(a["Fc"](-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t+n,imag:e+r})):this.broadcastedBinaryOp(t,e,Object(a["yd"])(t.dtype,e.dtype),(t,e)=>t+e)}addN(t){ho(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=a["M"](t[0].shape,t[0].dtype),r=n.values;for(let s=0;s<t.length;s++){const t=e[s];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=a["zd"].parseAxisParam([e],t.shape),r=Object(a["Vb"])(t,n),s=a["F"].expandShapeToKeepDim(r.shape,n),i=this.subtract(t,r.reshape(s)),o=this.exp(i),u=this.sum(o,n).reshape(s);return a["gb"](o,u)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t-n,imag:e-r})):this.broadcastedBinaryOp(t,e,Object(a["yd"])(t.dtype,e.dtype),(t,e)=>t-e)}pow(t,e){return ho([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}batchMatMul(t,e,n,r){ho([t,e],"matMul");const s=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],o=r?e.shape[1]:e.shape[2],u=t.shape[0],l=this.readSync(t.dataId),c=this.readSync(e.dataId),[h,d,p]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[f,m,g]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],b=i*o,y=a["M"]([u,i,o],t.dtype),x=y.values,w=this.blockSize;for(let a=0;a<u;a++)for(let t=0;t<i;t+=w)for(let e=0;e<o;e+=w)for(let n=0;n<s;n+=w){const r=Math.min(t+w,i),u=Math.min(e+w,o),y=Math.min(n+w,s);for(let s=t;s<r;s++)for(let t=e;t<u;t++){let e=0;for(let r=n;r<y;r++)e+=l[a*h+s*d+r*p]*c[r*f+t*m+a*g];x[a*b+(s*o+t)]+=e}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){let o=this.batchMatMul(t,e,n,r);return s&&(o=this.add(o,s)),a&&(o=wo(this,o,a,i)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})):this.broadcastedBinaryOp(t,e,Object(a["yd"])(t.dtype,e.dtype),(t,e)=>t*e)}floorDiv(t,e){ho([t,e],"floorDiv");const n=(t,e)=>Math.floor(t/e),r="int32";return this.broadcastedBinaryOp(t,e,r,n)}sum(t,e){ho(t,"sum"),a["F"].assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=Object(a["yd"])(t.dtype,"int32"),i=a["Fd"](n,s),o=a["zd"].sizeFromShape(r),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let a=0;a<u.length;++a){const t=a*o;let e=0;for(let n=0;n<o;++n)e+=l[t+n];u[a]=e}return i}prod(t,e){ho(t,"sum");const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=Object(a["yd"])(t.dtype,"int32"),i=a["Fd"](n,s),o=a["zd"].sizeFromShape(r),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let a=0;a<u.length;++a){const t=a*o;let e=1;for(let n=0;n<o;++n)e*=l[t+n];u[a]=e}return i}unsortedSegmentSum(t,e,n){ho(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let a=0;a<s;++a)e=e.expandDims(a+1);for(let i=0;i<n;++i){const n=a["Fc"](i,"int32"),s=a["mb"](n,e).asType("float32"),o=s.mul(t).sum(0);r.push(o)}return a["fd"](r)}argMin(t,e){ho(t,"argMin");const n=[e];a["F"].assertAxesAreInnerMostDims("argMin",n,t.rank);const[r,s]=a["F"].computeOutAndReduceShapes(t.shape,n),i=a["Fd"](r,"int32"),o=a["zd"].sizeFromShape(s),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let a=0;a<u.length;++a){const t=a*o;let e=l[t],n=0;for(let r=0;r<o;++r){const s=l[t+r];s<e&&(e=s,n=r)}u[a]=n}return i}argMax(t,e){ho(t,"argMax");const n=[e];a["F"].assertAxesAreInnerMostDims("argMax",n,t.rank);const[r,s]=a["F"].computeOutAndReduceShapes(t.shape,n),i=a["Fd"](r,"int32"),o=a["zd"].sizeFromShape(s),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let a=0;a<u.length;++a){const t=a*o;let e=l[t],n=0;for(let r=0;r<o;++r){const s=l[t+r];s>e&&(e=s,n=r)}u[a]=n}return i}cumsum(t,e,n,r){if(ho(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=Object(a["yd"])(t.dtype,"int32"),i=a["Fd"](t.shape,s),o=this.readSync(i.dataId),u=this.readSync(t.dataId),l=t.shape[t.rank-1],c=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let a=0;a<u.length;a+=l)for(let t=0;t<l;t++){const e=c(a,t);if(0===t)o[e]=n?0:u[e];else{const r=c(a,t-1);o[e]=n?u[r]+o[r]:u[e]+o[r]}}return i}equal(t,e){return ho([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return ho([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return ho([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return ho([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return ho([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return ho([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalNot(t){ho(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n[r]=e[r]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return ho([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return ho([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){ho([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),i=this.readSync(n.dataId),o=a["Fd"](e.shape,Object(a["yd"])(e.dtype,n.dtype)),u=this.readSync(o.dataId);let l=0;const c=0===t.rank||t.rank>1||1===e.rank?1:a["zd"].sizeFromShape(e.shape.slice(1));for(let a=0;a<r.length;a++)for(let t=0;t<c;t++)1===r[a]?u[l++]=s[a]:u[l++]=i[a];return o}where(t){ho([t],"where");const e=this.readSync(t.dataId);return xo(t.shape,e)}topk(t,e,n){ho(t,"topk");const r=this.readSync(t.dataId);return yo(r,t.shape,t.dtype,e,n)}min(t,e){ho(t,"min"),a["F"].assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["Fd"](n,t.dtype),i=a["zd"].sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let a=0;a<o.length;++a){const t=a*i;let e=u[t];for(let n=0;n<i;++n){const r=u[t+n];r<e&&(e=r)}o[a]=e}return s}minimum(t,e){return ho([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return ho([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return ho([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){ho(t,"all"),a["F"].assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["Fd"](n,t.dtype),i=a["zd"].sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let a=0;a<o.length;++a){const t=a*i;let e=u[t];for(let n=0;n<i;++n){const r=u[t+n];e=e&&r}o[a]=e}return s}any(t,e){ho(t,"any"),a["F"].assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["Fd"](n,t.dtype),i=a["zd"].sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let a=0;a<o.length;++a){const t=a*i;let e=u[t];for(let n=0;n<i;++n){const r=u[t+n];e=e||r}o[a]=e}return s}squaredDifference(t,e){return ho([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}ceil(t){ho(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.ceil(e[r]);return this.makeOutput(n,t.shape,"float32")}floor(t){ho(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.floor(e[r]);return this.makeOutput(n,t.shape,"float32")}sign(t){ho(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)e[r]<0?n[r]=-1:e[r]>0?n[r]=1:n[r]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){ho(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Number.isNaN(e[r])&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){ho(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Math.abs(e[r])===1/0&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){ho(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Number.isFinite(e[r])&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}round(t){ho(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=Math.floor(e[r]);e[r]-t<.5?n[r]=Math.floor(e[r]):e[r]-t>.5?n[r]=Math.ceil(e[r]):n[r]=t%2===0?t:t+1}return this.makeOutput(n,t.shape,"float32")}exp(t){ho(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.exp(e[r]);return this.makeOutput(n,t.shape,"float32")}expm1(t){ho(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.expm1(e[r]);return this.makeOutput(n,t.shape,"float32")}log(t){ho(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=e[r];n[r]=Math.log(t)}return this.makeOutput(n,t.shape,"float32")}log1p(t){ho(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=e[r];n[r]=Math.log1p(t)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){ho(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=e[r];n[r]=Math.sqrt(t)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){ho(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=e[r];n[r]=1/Math.sqrt(t)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){ho(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=1/e[r];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){ho(t,"relu");const e=a["Fd"](t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s)n[s]=Math.max(0,r[s]);return e}relu6(t){ho(t,"relu");const e=a["Fd"](t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s)n[s]=Math.min(Math.max(0,r[s]),6);return e}prelu(t,e){return ho([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>t<0?e*t:t)}elu(t){ho(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r){const t=n[r];e[r]=t>=0?t:Math.exp(t)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){ho([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let a=0;a<r.length;++a){const t=r[a];n[a]=t>=1?s[a]:s[a]*(t+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){ho(t,"selu");const e=a["F"].SELU_SCALEALPHA,n=a["F"].SELU_SCALE,r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let a=0;a<s.length;++a){const t=s[a];r[a]=t>=0?n*t:e*(Math.exp(t)-1)}return this.makeOutput(r,t.shape,"float32")}clip(t,e,n){ho(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let a=0;a<s.length;++a){const t=s[a];r[a]=t>n?n:t<e?e:t}return this.makeOutput(r,t.shape,"float32")}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.abs(n[r]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r){const t=n[2*r],s=n[2*r+1];e[r]=Math.hypot(t,s)}return this.makeOutput(e,t.shape,"float32")}int(t){ho(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=n[r];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){ho(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(e,t.shape,"float32")}softplus(t){ho(t,"softplus");const e=1.1920928955078125e-7,n=Math.log(e)+2,r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let a=0;a<s.length;++a){const t=s[a]>-n,e=s[a]<n,i=Math.exp(s[a]);let o;o=e?i:t?s[a]:Math.log(1+i),r[a]=o}return this.makeOutput(r,t.shape,"float32")}sin(t){ho(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.sin(n[r]);return this.makeOutput(e,t.shape,"float32")}cos(t){ho(t,"cos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.cos(n[r]);return this.makeOutput(e,t.shape,"float32")}tan(t){ho(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.tan(n[r]);return this.makeOutput(e,t.shape,"float32")}asin(t){ho(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.asin(n[r]);return this.makeOutput(e,t.shape,"float32")}acos(t){ho(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.acos(n[r]);return this.makeOutput(e,t.shape,"float32")}atan(t){ho(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.atan(n[r]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return ho([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}sinh(t){ho(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.sinh(n[r]);return this.makeOutput(e,t.shape,"float32")}cosh(t){ho(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.cosh(n[r]);return this.makeOutput(e,t.shape,"float32")}tanh(t){ho(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=a["zd"].tanh(n[r]);return this.makeOutput(e,t.shape,"float32")}asinh(t){ho(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.asinh(n[r]);return this.makeOutput(e,t.shape,"float32")}acosh(t){ho(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.acosh(n[r]);return this.makeOutput(e,t.shape,"float32")}atanh(t){ho(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.atanh(n[r]);return this.makeOutput(e,t.shape,"float32")}erf(t){ho(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),r=a["F"].ERF_P,s=a["F"].ERF_A1,i=a["F"].ERF_A2,o=a["F"].ERF_A3,u=a["F"].ERF_A4,l=a["F"].ERF_A5;for(let a=0;a<n.length;++a){const t=Math.sign(n[a]),c=Math.abs(n[a]),h=1/(1+r*c);e[a]=t*(1-((((l*h+u)*h+o)*h+i)*h+s)*h*Math.exp(-c*c))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){ho(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s){const t=r[s];isNaN(t)?n[s]=NaN:n[s]=t>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.conv2d(t,e,n);return r&&(i=this.add(i,r)),s&&(i=wo(this,i,s,a)),i}conv2d(t,e,n){ho([t,e],"conv2d");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,u=n.padInfo.left,l=n.padInfo.top,c="channelsLast"===n.dataFormat,h=a["M"](n.outShape,t.dtype),d=t.strides[0],p=c?t.strides[1]:t.strides[2],f=c?t.strides[2]:1,m=c?1:t.strides[1],g=h.strides[0],b=c?h.strides[1]:h.strides[2],y=c?h.strides[2]:1,x=c?1:h.strides[1],w=this.readSync(t.dataId),v=this.readSync(e.dataId),O=h.values;for(let a=0;a<n.batchSize;++a){const t=a*d,c=a*g;for(let a=0;a<n.outHeight;++a){const h=c+a*b,d=a*n.strideHeight-l;for(let a=0;a<r;a++){const r=d+a*i;if(r<0||r>=n.inHeight)continue;const l=a*e.strides[0],c=t+r*p;for(let t=0;t<n.outWidth;++t){const r=h+t*y,a=t*n.strideWidth-u;for(let t=0;t<s;t++){const s=a+t*o;if(s<0||s>=n.inWidth)continue;const i=l+t*e.strides[1],u=c+s*f;let h=i;for(let t=0;t<n.inChannels;++t){const e=w[u+t*m];for(let t=0;t<n.outChannels;++t)O[r+t*x]+=e*v[h+t];h+=n.outChannels}}}}}}return h.toTensor()}conv3d(t,e,n){const r=n.filterDepth,s=n.filterHeight,i=n.filterWidth,o=n.dilationDepth,u=n.dilationHeight,l=n.dilationWidth,c=n.padInfo.front,h=n.padInfo.left,d=n.padInfo.top,p=a["M"](n.outShape,t.dtype),f=this.readSync(t.dataId),m=this.readSync(e.dataId),g=p.values;for(let a=0;a<n.batchSize;++a){const b=a*t.strides[0],y=a*p.strides[0];for(let a=0;a<n.outDepth;++a){const x=y+a*p.strides[1],w=a*n.strideDepth-c;for(let a=0;a<r;a++){const r=w+a*o;if(r<0||r>=n.inDepth)continue;const c=a*e.strides[0],y=b+r*t.strides[1];for(let a=0;a<n.outHeight;++a){const r=x+a*p.strides[2],o=a*n.strideHeight-d;for(let a=0;a<s;a++){const s=o+a*u;if(s<0||s>=n.inHeight)continue;const d=c+a*e.strides[1],p=y+s*t.strides[2];for(let t=0;t<n.outWidth;++t){const s=r+t*n.outChannels,a=t*n.strideWidth-h;for(let t=0;t<i;t++){const r=a+t*l;if(r<0||r>=n.inWidth)continue;const i=d+t*e.strides[2],o=p+r*n.inChannels;let u=i;for(let t=0;t<n.inChannels;++t){const e=f[o+t];for(let t=0;t<n.outChannels;++t)g[s+t]+=e*m[u+t];u+=n.outChannels}}}}}}}}return p.toTensor()}conv2dDerInput(t,e,n){ho([t,e],"conv2dDerInput");const r=a["M"](n.inShape,"float32"),s=r.values,i=this.readSync(t.dataId),o=this.readSync(e.dataId),[u,l,c]=e.strides,{batchSize:h,filterHeight:d,filterWidth:p,inChannels:f,inHeight:m,inWidth:g,outChannels:b,outHeight:y,outWidth:x,strideHeight:w,strideWidth:v,dataFormat:O}=n,S=d-1-n.padInfo.top,C=p-1-n.padInfo.left,I="channelsLast"===O,k=r.strides[0],N=I?r.strides[1]:r.strides[2],E=I?r.strides[2]:1,A=I?1:r.strides[1],$=t.strides[0],R=I?t.strides[1]:t.strides[2],T=I?t.strides[2]:1,D=I?1:t.strides[1];for(let a=0;a<h;++a)for(let t=0;t<f;++t)for(let e=0;e<m;++e){const n=e-S,r=Math.max(0,Math.ceil(n/w)),h=Math.min(y,(d+n)/w);for(let f=0;f<g;++f){const m=f-C,g=Math.max(0,Math.ceil(m/v)),y=Math.min(x,(p+m)/v);let O=0;for(let e=r;e<h;++e){const r=e*w-n;for(let n=g;n<y;++n){const s=n*v-m,h=$*a+R*e+T*n,f=u*(d-1-r)+l*(p-1-s)+c*t;for(let t=0;t<b;++t){const e=i[h+D*t],n=o[f+t];O+=e*n}}}const S=k*a+N*e+E*f+A*t;s[S]=O}}return r.toTensor()}conv3dDerInput(t,e,n){const r=a["M"](n.inShape,"float32"),s=r.values,[i,o,u,l]=r.strides,c=this.readSync(t.dataId),[h,d,p,f]=t.strides,m=this.readSync(e.dataId),[g,b,y,x]=e.strides,{batchSize:w,filterDepth:v,filterHeight:O,filterWidth:S,inChannels:C,inDepth:I,inHeight:k,inWidth:N,outChannels:E,outDepth:A,outHeight:$,outWidth:R,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=v-1-n.padInfo.front,j=O-1-n.padInfo.top,z=S-1-n.padInfo.left;for(let a=0;a<w;++a)for(let t=0;t<C;++t)for(let e=0;e<I;++e){const n=e-_,r=Math.max(0,Math.ceil(n/T)),w=Math.min(A,(v+n)/T);for(let C=0;C<k;++C){const I=C-j,k=Math.max(0,Math.ceil(I/D)),A=Math.min($,(O+I)/D);for(let $=0;$<N;++$){const N=$-z,_=Math.max(0,Math.ceil(N/F)),j=Math.min(R,(S+N)/F);let M=0;for(let e=r;e<w;++e){const r=e*T-n;for(let n=k;n<A;++n){const s=n*D-I;for(let i=_;i<j;++i){const o=i*F-N,u=h*a+d*e+p*n+f*i,l=g*(v-1-r)+b*(O-1-s)+y*(S-1-o)+x*t;for(let t=0;t<E;++t){const e=c[u+t],n=m[l+t];M+=e*n}}}}s[i*a+o*e+u*C+l*$+t]=M}}}return r.toTensor()}conv2dDerFilter(t,e,n){ho([t,e],"conv2dDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u="channelsLast"===n.dataFormat,l=a["M"](n.filterShape,"float32"),c=n.padInfo.left,h=n.padInfo.top,d=this.bufferSync(t),p=this.bufferSync(e);for(let a=0;a<i;++a){const t=Math.max(0,Math.ceil((h-a)/r)),e=Math.min(n.outHeight,(n.inHeight+h-a)/r);for(let i=0;i<o;++i){const o=Math.max(0,Math.ceil((c-i)/s)),f=Math.min(n.outWidth,(n.inWidth+c-i)/s);for(let m=0;m<n.inChannels;++m)for(let g=0;g<n.outChannels;++g){let b=0;for(let l=0;l<n.batchSize;++l)for(let n=t;n<e;++n){const t=a+n*r-h;for(let e=o;e<f;++e){const r=i+e*s-c;b+=u?d.get(l,t,r,m)*p.get(l,n,e,g):d.get(l,m,t,r)*p.get(l,g,n,e)}}l.set(b,a,i,m,g)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,o=n.filterDepth,u=n.filterHeight,l=n.filterWidth,c=a["M"](n.filterShape,"float32"),h=c.values,[d,p,f,m]=c.strides,g=this.readSync(e.dataId),[b,y,x,w]=e.strides,v=this.readSync(t.dataId),[O,S,C,I]=t.strides,k=n.padInfo.front,N=n.padInfo.left,E=n.padInfo.top;for(let a=0;a<o;++a){const t=Math.max(0,Math.ceil((k-a)/r)),e=Math.min(n.outDepth,(n.inDepth+k-a)/r),o=a*d;for(let c=0;c<u;++c){const u=Math.max(0,Math.ceil((E-c)/s)),d=Math.min(n.outHeight,(n.inHeight+E-c)/s),A=c*p+o;for(let o=0;o<l;++o){const l=Math.max(0,Math.ceil((N-o)/i)),p=Math.min(n.outWidth,(n.inWidth+N-o)/i),$=o*f+A;for(let f=0;f<n.inChannels;++f){const A=f*m+$;for(let m=0;m<n.outChannels;++m){let $=0;for(let h=0;h<n.batchSize;++h){const n=h*O,A=h*b;for(let h=t;h<e;++h){const t=a+h*r-k,e=t*S+n,b=h*y+A;for(let n=u;n<d;++n){const t=c+n*s-E,r=t*C+e,a=n*x+b;for(let e=l;e<p;++e){const t=o+e*i-N,n=t*I+r,s=e*w+a;$+=v[n+f]*g[s+m]}}}}h[A+m]=$}}}}}return c.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.depthwiseConv2D(t,e,n);return r&&(i=this.add(i,r)),s&&(i=wo(this,i,s,a)),i}depthwiseConv2D(t,e,n){ho([t,e],"depthwiseConv2D");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=a["M"](n.outShape,t.dtype),d=this.readSync(t.dataId),p=this.readSync(e.dataId),f=h.values;for(let a=0;a<n.batchSize;++a){const m=a*t.strides[0],g=a*h.strides[0];for(let a=0;a<n.outHeight;++a){const b=g+a*h.strides[1],y=a*n.strideHeight-u;for(let a=0;a<r;++a){const r=y+a*i;if(r<0||r>=n.inHeight)continue;const u=a*e.strides[0],g=m+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=b+t*h.strides[2],a=t*n.strideWidth-l;for(let t=0;t<s;++t){const s=a+t*o;if(s<0||s>=n.inWidth)continue;const i=u+t*e.strides[1],l=g+s*n.inChannels;let h=r,m=i;for(let t=0;t<n.inChannels;++t){const e=d[l+t];for(let t=0;t<c;++t)f[h+t]+=e*p[m+t];h+=c,m+=c}}}}}}return h.toTensor()}depthwiseConv2DDerInput(t,e,n){ho([t,e],"depthwiseConv2DDerInput");const r=a["M"](n.inShape,"float32"),s=r.values,[i,o,u]=r.strides,l=this.readSync(t.dataId),[c,h,d]=t.strides,p=this.readSync(e.dataId),[f,m,g]=e.strides,{batchSize:b,filterHeight:y,filterWidth:x,inChannels:w,inHeight:v,inWidth:O,outChannels:S,outHeight:C,outWidth:I,strideHeight:k,strideWidth:N}=n,E=y-1-n.padInfo.top,A=x-1-n.padInfo.left,$=S/w;for(let a=0;a<b;++a)for(let t=0;t<w;++t)for(let e=0;e<v;++e){const n=e-E,r=Math.max(0,Math.ceil(n/k)),b=Math.min(C,(y+n)/k);for(let w=0;w<O;++w){const v=w-A,O=Math.max(0,Math.ceil(v/N)),S=Math.min(I,(x+v)/N);let C=0;for(let e=r;e<b;++e){const r=e*k-n;for(let n=O;n<S;++n){const s=n*N-v,i=c*a+h*e+d*n,o=f*(y-1-r)+m*(x-1-s)+g*t;for(let e=0;e<$;++e){const n=t*$+e,r=l[i+n],s=p[o+e];C+=r*s}}}s[i*a+o*e+u*w+t]=C}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){ho([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u=a["M"](n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=n.outChannels/n.inChannels,d=this.bufferSync(t),p=this.bufferSync(e);for(let a=0;a<i;++a){const t=Math.max(0,Math.ceil((c-a)/r)),e=Math.min(n.outHeight,(n.inHeight+c-a)/r);for(let i=0;i<o;++i){const o=Math.max(0,Math.ceil((l-i)/s)),f=Math.min(n.outWidth,(n.inWidth+l-i)/s);for(let m=0;m<n.outChannels;++m){const g=Math.trunc(m/h),b=m%h;let y=0;for(let u=0;u<n.batchSize;++u)for(let n=t;n<e;++n){const t=a+n*r-c;for(let e=o;e<f;++e){const r=i+e*s-l;y+=d.get(u,t,r,g)*p.get(u,n,e,m)}}u.set(y,a,i,g,b)}}}return u.toTensor()}tile(t,e){return ho(t,"tile"),bo(this.bufferSync(t),e)}pad(t,e,n){ho(t,"pad");const r=e.map((e,n)=>e[0]+t.shape[n]+e[1]),s=e.map(t=>t[0]),i=this.bufferSync(t),o=a["M"](r,t.dtype);0!==n&&o.values.fill(n);for(let a=0;a<t.size;a++){const t=i.indexToLoc(a),e=t.map((t,e)=>t+s[e]);o.set(i.get(...t),...e)}return o.toTensor()}gather(t,e,n){ho([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const i=a["M"](r,t.dtype),o=this.bufferSync(t);for(let a=0;a<i.size;++a){const t=i.indexToLoc(a),e=t.slice();e[n]=s[t[n]];const r=o.locToIndex(e);i.values[a]=o.values[r]}return i.toTensor()}batchToSpaceND(t,e,n){ho([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),s=a["F"].getReshaped(t.shape,e,r),i=a["F"].getPermuted(s.length,e.length),o=a["F"].getReshapedPermuted(t.shape,e,r),u=a["F"].getSliceBeginCoords(n,e.length),l=a["F"].getSliceSize(o,n,e.length);return a["vd"](t.reshape(s),i).reshape(o).slice(u,l)}spaceToBatchND(t,e,n){ho([t],"spaceToBatchND");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let a=1+e.length;a<t.shape.length;++a)s.push([0,0]);const i=t.pad(s),o=a["F"].getReshaped(i.shape,e,r,!1),u=a["F"].getPermuted(o.length,e.length,!1),l=a["F"].getReshapedPermuted(i.shape,e,r,!1);return a["vd"](i.reshape(o),u).reshape(l)}maxPool(t,e){ho(t,"maxPool");const n=this.readSync(t.dataId);return po(n,t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){ho([e,n],"maxPoolBackprop");const s=this.readSync(e.dataId),i=Object(a["M"])(r.outShape,e.dtype,fo(s,e.shape,e.dtype,r).values),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=d-1-r.padInfo.left,f=h-1-r.padInfo.top,m=a["M"](e.shape,"float32"),g=this.bufferSync(t);for(let a=0;a<r.batchSize;++a)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inHeight;++e)for(let n=0;n<r.inWidth;++n){const s=e-f,b=n-p;let y=0;for(let e=0;e<h;e+=l){const n=(s+e)/o;if(!(n<0||n>=r.outHeight||Math.floor(n)!==n))for(let s=0;s<d;s+=c){const o=(b+s)/u;if(o<0||o>=r.outWidth||Math.floor(o)!==o)continue;const l=h*d-1-i.get(a,n,o,t),c=e*d+s,p=l===c?1:0;if(0===p)continue;const f=g.get(a,n,o,t);y+=f*p}}m.set(y,a,e,n,t)}return m.toTensor()}avgPoolBackprop(t,e,n){ho([t,e],"avgPoolBackprop");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u=n.dilationHeight,l=n.dilationWidth,c=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=h-1-n.padInfo.left,p=c-1-n.padInfo.top,f=a["M"](e.shape,"float32"),m=1/(i*o),g=this.bufferSync(t);for(let a=0;a<n.batchSize;++a)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inHeight;++e)for(let i=0;i<n.inWidth;++i){const o=e-p,b=i-d;let y=0;for(let e=0;e<c;e+=u){const i=(o+e)/r;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let e=0;e<h;e+=l){const r=(b+e)/s;if(r<0||r>=n.outWidth||Math.floor(r)!==r)continue;const o=g.get(a,i,r,t);y+=o}}f.set(y*m,a,e,i,t)}return f.toTensor()}pool3d(t,e,n){ho(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=this.readSync(t.dataId),y=a["M"](e.outShape,t.dtype),x=y.values,w=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],O=e.outShape[3]*e.outShape[4],S=e.outShape[4];for(let a=0;a<e.batchSize;++a){const y=a*w,C=a*t.strides[0];for(let a=0;a<e.inChannels;++a)for(let w=0;w<e.outDepth;++w){const I=w*r-p;let k=I;while(k<0)k+=o;const N=Math.min(e.inDepth,c+I),E=y+w*v;for(let r=0;r<e.outHeight;++r){const c=r*s-f;let p=c;while(p<0)p+=u;const y=Math.min(e.inHeight,h+c),w=E+r*O;for(let r=0;r<e.outWidth;++r){const s=r*i-m;let c=s;while(c<0)c+=l;const h=Math.min(e.inWidth,d+s),f=w+r*S;let v=g,O=0,I=0;for(let e=k;e<N;e+=o){const r=C+e*t.strides[1];for(let e=p;e<y;e+=u){const s=r+e*t.strides[2];for(let e=c;e<h;e+=l){const r=s+e*t.strides[3],i=b[r+a];if("max"===n&&i>v?v=i:"avg"===n&&(O+=i,I++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}const E=f+a;x[E]="avg"===n?O/I:v}}}}return y.toTensor()}avgPool3d(t,e){return ho(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){ho([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,o=n.filterDepth,u=n.filterHeight,l=n.filterWidth,c=n.dilationDepth,h=n.dilationHeight,d=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,m=n.effectiveFilterWidth,g=p-1-n.padInfo.front,b=m-1-n.padInfo.left,y=f-1-n.padInfo.top,x=a["M"](e.shape,"float32"),w=1/(o*u*l),v=this.bufferSync(t);for(let a=0;a<n.batchSize;++a)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inDepth;++e)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const l=e-g,O=o-y,S=u-b;let C=0;for(let e=0;e<p;e+=c){const o=(l+e)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let e=0;e<f;e+=h){const r=(O+e)/s;if(!(r<0||r>=n.outHeight||Math.floor(r)!==r))for(let e=0;e<m;e+=d){const s=(S+e)/i;if(s<0||s>=n.outWidth||Math.floor(s)!==s)continue;const u=v.get(a,o,r,s,t);C+=u}}}x.set(C*w,a,e,o,u,t)}return x.toTensor()}maxPool3d(t,e){return ho(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=a["M"](e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g=this.bufferSync(t);for(let a=0;a<e.batchSize;++a)for(let t=0;t<e.inChannels;++t)for(let b=0;b<e.outDepth;++b){const y=b*r-p;let x=y;while(x<0)x+=o;const w=Math.min(e.inDepth,c+y);for(let r=0;r<e.outHeight;++r){const c=r*s-f;let p=c;while(p<0)p+=u;const v=Math.min(e.inHeight,h+c);for(let s=0;s<e.outWidth;++s){const f=s*i-m;let O=f;while(O<0)O+=l;const S=Math.min(e.inWidth,d+f);let C=Number.NEGATIVE_INFINITY,I=-1;for(let e=x;e<w;e+=o){const n=e-y;for(let r=p;r<v;r+=u){const s=r-c;for(let i=O;i<S;i+=l){const o=i-f,u=g.get(a,e,r,i,t);u>=C&&(C=u,I=n*h*d+s*h+o)}}}n.set(I,a,b,r,s,t)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){ho([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=d-1-r.padInfo.front,g=f-1-r.padInfo.left,b=p-1-r.padInfo.top,y=a["M"](e.shape,"float32"),x=this.bufferSync(s),w=this.bufferSync(t);for(let a=0;a<r.batchSize;++a)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inDepth;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const v=e-m,O=n-b,S=s-g;let C=0;for(let e=0;e<d;e+=l){const n=(v+e)/i;if(!(n<0||n>=r.outDepth||Math.floor(n)!==n))for(let s=0;s<p;s+=c){const i=(O+s)/o;if(!(i<0||i>=r.outHeight||Math.floor(i)!==i))for(let o=0;o<f;o+=h){const l=(S+o)/u;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=d*p*f-1-x.get(a,n,i,l,t),h=e*p*f+s*f+o,m=c===h?1:0;if(0===m)continue;const g=w.get(a,n,i,l,t);C+=g*m}}}y.set(C,a,e,n,s,t)}return y.toTensor()}cast(t,e){return a["F"].castTensor(t,e,this)}reshape(t,e){return a["F"].reshapeTensor(t,e)}avgPool(t,e){ho(t,"avgPool"),ho(t,"maxPool");const n=this.readSync(t.dataId);return po(n,t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){ho(t,"resizeBilinear");const[s,i,o,u]=t.shape,l=this.readSync(t.dataId),c=new Float32Array(a["zd"].sizeFromShape([s,e,n,u])),h=[r&&e>1?i-1:i,r&&n>1?o-1:o],d=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const f=h[0]/d[0],m=h[1]/d[1];for(let a=0;a<s;a++)for(let r=0;r<e;r++){const e=f*r,s=Math.floor(e),h=e-s,d=Math.min(i-1,Math.ceil(e)),g=a*t.strides[0]+s*t.strides[1],b=a*t.strides[0]+d*t.strides[1];for(let r=0;r<n;r++){const e=m*r,n=Math.floor(e),s=e-n,a=Math.min(o-1,Math.ceil(e)),i=g+n*t.strides[2],d=b+n*t.strides[2],f=g+a*t.strides[2],y=b+a*t.strides[2];for(let t=0;t<u;t++){const e=l[i+t],n=l[d+t],r=l[f+t],a=l[y+t],o=e+(r-e)*s,u=n+(a-n)*s,m=o+(u-o)*h;c[p++]=m}}}return a["md"](c,[s,e,n,u])}resizeBilinearBackprop(t,e,n){ho([t,e],"resizeBilinearBackprop");const[r,s,i,o]=e.shape,[,u,l]=t.shape,c=new Float32Array(r*s*i*o),h=[n&&u>1?s-1:s,n&&l>1?i-1:i],d=[n&&u>1?u-1:u,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],m=this.readSync(t.dataId);let g=0;for(let a=0;a<r;a++){const t=a*e.strides[0];for(let n=0;n<u;n++){const r=n*p,a=Math.floor(r),u=Math.min(Math.ceil(r),s-1),h=t+a*e.strides[1],d=t+u*e.strides[1],b=r-a,y=1-b;for(let t=0;t<l;t++){const n=t*f,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),a=n-r,u=1-a,l=h+r*e.strides[2],p=h+s*e.strides[2],x=d+r*e.strides[2],w=d+s*e.strides[2],v=y*u,O=y*a,S=b*u,C=b*a;for(let t=0;t<o;t++){const e=m[g++];c[l+t]+=e*v,c[p+t]+=e*O,c[x+t]+=e*S,c[w+t]+=e*C}}}}return a["pd"](c,[r,i,s,o],e.dtype)}resizeNearestNeighbor(t,e,n,r){ho(t,"resizeNearestNeighbor");const[s,i,o,u]=t.shape,l=this.readSync(t.dataId),c=new Float32Array(s*e*n*u),h=[r&&e>1?i-1:i,r&&n>1?o-1:o],d=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1];let m=0;for(let a=0;a<s;a++){const s=a*t.strides[0];for(let a=0;a<e;a++){const e=p*a,h=Math.min(i-1,r?Math.round(e):Math.floor(e)),d=s+h*t.strides[1];for(let s=0;s<n;s++){const e=f*s,n=Math.min(o-1,r?Math.round(e):Math.floor(e)),a=d+n*t.strides[2];for(let t=0;t<u;t++){const e=l[a+t];c[m++]=e}}}}return a["md"](c,[s,e,n,u],t.dtype)}resizeNearestNeighborBackprop(t,e,n){ho([t,e],"resizeNearestNeighborBackprop");const[r,s,i,o]=e.shape,[,u,l]=t.shape,c=new Float32Array(r*s*i*o),h=this.readSync(t.dataId),d=[n&&u>1?s-1:s,n&&l>1?i-1:i],p=[n&&u>1?u-1:u,n&&l>1?l-1:l],f=d[0]/p[0],m=d[1]/p[1],g=1/f,b=1/m,y=2*Math.ceil(g)+2,x=2*Math.ceil(b)+2;for(let a=0;a<r;a++){const r=a*e.strides[0];for(let a=0;a<s;a++){const d=r+a*e.strides[1],p=Math.floor(a*g),w=Math.floor(p-y/2);for(let g=0;g<i;g++){const p=d+g*e.strides[2],v=Math.floor(g*b),O=Math.floor(v-x/2);for(let e=0;e<o;e++){let o=0;for(let c=0;c<y;c++){const d=c+w;if(d<0||d>=u)continue;const p=r+d*t.strides[1],b=d*f,y=Math.min(s-1,n?Math.round(b):Math.floor(b));if(a===y)for(let r=0;r<x;r++){const s=r+O;if(s<0||s>=l)continue;const a=p+s*t.strides[2],u=s*m,c=Math.min(i-1,n?Math.round(u):Math.floor(u));g===c&&(o+=h[a+e])}}c[p+e]=o}}}}return a["pd"](c,e.shape,e.dtype)}batchNorm(t,e,n,r,s,i){ho([t,e,n,s,r],"batchNorm");const o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=this.readSync(n.dataId),c=s?this.readSync(s.dataId):new Float32Array([1]),h=r?this.readSync(r.dataId):new Float32Array([0]),d=new Float32Array(o.length),p=h.length,f=c.length,m=l.length,g=u.length;let b=0,y=0,x=0,w=0;for(let a=0;a<o.length;++a)d[a]=h[b++]+(o[a]-u[y++])*c[x++]/Math.sqrt(l[w++]+i),b>=p&&(b=0),y>=g&&(y=0),x>=f&&(x=0),w>=m&&(w=0);return a["pd"](d,t.shape)}localResponseNormalization4D(t,e,n,r,s){ho(t,"localResponseNormalization4D");const i=t.shape[3],o=i-1,u=this.readSync(t.dataId),l=t.size,c=new Float32Array(l);function h(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,o);let a=0;for(;r<=s;r++){const t=u[r];a+=t*t}return a}for(let a=0;a<l;a++){const t=h(a),e=u[a]*Math.pow(n+r*t,-s);c[a]=e}return a["pd"](c,t.shape)}LRNGrad(t,e,n,r,s,i,o){ho(t,"LRNGrad");const u=t.shape[3],l=this.readSync(t.dataId),c=this.readSync(e.dataId),h=this.readSync(n.dataId),d=new Float32Array(t.size),p=t.size;for(let a=0;a<p;a++){const t=a%u,e=a-t+Math.max(0,t-r),n=a-t+Math.min(u,t+r+1);let p=0;for(let r=e;r<n;r++)p+=Math.pow(c[r],2);p=i*p+s;for(let r=e;r<n;r++){let t=-2*i*o*c[r]*h[a]/p;a===r&&(t+=Math.pow(p,-o)),t*=l[a],d[r]+=t}}return a["pd"](d,t.shape)}multinomial(t,e,n,r){ho(t,"multinomial");const s=e?t:a["Wc"](t),i=s.shape[0],o=s.shape[1],u=a["Fd"]([i,n],"int32"),l=this.readSync(u.dataId),c=this.readSync(s.dataId);for(let a=0;a<i;++a){const t=a*o,e=new Float32Array(o-1);e[0]=c[t];for(let n=1;n<e.length;++n)e[n]=e[n-1]+c[t+n];const s=to["alea"](r.toString()),i=a*n;for(let r=0;r<n;++r){const t=s();l[i+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){l[i+r]=n;break}}}return u}oneHot(t,e,n,r){ho(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const i=this.readSync(t.dataId);for(let a=0;a<t.size;++a)i[a]>=0&&i[a]<e&&(s[a*e+i[a]]=n);return a["od"](s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){ho(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return mo(a,i,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],s=a["M"](t.shape,"float32"),i=a["M"](t.shape,"float32"),o=a["vc"](t).as2D(n,r),u=a["Cb"](t).as2D(n,r);for(let c=0;c<n;c++){const t=o.slice([c,0],[1,r]),n=u.slice([c,0],[1,r]),l=a["Q"](t,n),h=this.readSync(this.fftImpl(l,e).dataId);for(let e=0;e<r;e++){const t=a["F"].getComplexWithIndex(h,e);s.values[c*r+e]=t.real,i.values[c*r+e]=t.imag}}const l=a["Q"](s.toTensor(),i.toTensor());return l.as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let s=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(s=a["Q"](a["vc"](s).div(a["Fc"](r)),a["Cb"](s).div(a["Fc"](r)))),s}{const n=this.readSync(t.dataId),s=this.fourierTransformByMatmul(n,r,e),i=a["F"].splitRealAndImagArrays(s);return a["Q"](i.real,i.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0===(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),s=e/2,i=a["F"].complexWithEvenIndex(r);let o=a["Q"](i.real,i.imag).as1D();const u=a["F"].complexWithOddIndex(r);let l=a["Q"](u.real,u.imag).as1D();o=this.fftRadix2(o,s,n),l=this.fftRadix2(l,s,n);const c=a["F"].exponents(e,n),h=a["Q"](c.real,c.imag).mul(l),d=o.add(h),p=o.sub(h),f=a["vc"](d).concat(a["vc"](p)),m=a["Cb"](d).concat(a["Cb"](p));return a["Q"](f,m).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,o=0;for(let r=0;r<e;r++){const u=a["F"].exponent(s*r,e,n),l=a["F"].getComplexWithIndex(t,r);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=e,o/=e),a["F"].assignToTypedArray(r,i,o,s)}return r}depthToSpace(t,e,n){a["zd"].assert("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),a["zd"].assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],s=t.shape[1],i=t.shape[2],o=t.shape[3],u=s*e,l=i*e,c=o/(e*e),h=this.readSync(t.dataId),d=new Float32Array(r*u*l*c);let p=0;for(let a=0;a<r;++a)for(let t=0;t<u;++t){const n=Math.floor(t/e),r=t%e;for(let t=0;t<l;++t){const u=Math.floor(t/e),l=t%e,f=(r*e+l)*c;for(let t=0;t<c;++t){const e=t+f,r=e+o*(u+i*(n+s*a));d[p++]=h[r]}}}return a["pd"](d,[r,u,l,c])}broadcastedBinaryOp(t,e,n,r){const s=a["F"].assertAndGetBroadcastShape(t.shape,e.shape),i=a["M"](s,n),o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=a["F"].getBroadcastDims(t.shape,s),c=a["F"].getBroadcastDims(e.shape,s),h=i.values;if(l.length+c.length===0)for(let a=0;a<h.length;++a)h[a]=r(o[a%o.length],u[a%u.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let a=0;a<h.length;++a){const d=i.indexToLoc(a),p=d.slice(-t.rank);l.forEach(t=>p[t]=0);const f=n.locToIndex(p),m=d.slice(-e.rank);c.forEach(t=>m[t]=0);const g=s.locToIndex(m);h[a]=r(o[f],u[g])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=a["F"].assertAndGetBroadcastShape(t.shape,e.shape),s=a["M"](r,"float32"),i=a["M"](r,"float32"),o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=a["F"].getBroadcastDims(t.shape,r),c=a["F"].getBroadcastDims(e.shape,r),h=s.values,d=i.values;if(l.length+c.length===0)for(let a=0;a<h.length;a++){const t=a%o.length,e=a%u.length,r=n(o[2*t],o[2*t+1],u[2*e],u[2*e+1]);h[a]=r.real,d[a]=r.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),a=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let i=0;i<h.length;i++){const p=s.indexToLoc(i),f=p.slice(-t.rank);l.forEach(t=>f[t]=0);const m=r.locToIndex(f),g=p.slice(-e.rank);c.forEach(t=>g[t]=0);const b=a.locToIndex(g),y=n(o[2*m],o[2*m+1],u[2*b],u[2*b+1]);h[i]=y.real,d[i]=y.imag}}return this.complex(s.toTensor(),i.toTensor())}split(t,e,n){return go(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,i){const[o,u,l,c]=t.shape,h=e.shape[0],[d,p]=r,f=a["M"]([h,d,p,c],"float32"),m=this.readSync(e.dataId),g=this.readSync(n.dataId),b=this.readSync(t.dataId),y=t.strides,x=f.strides;for(let a=0;a<h;a++){const t=4*a,e=m[t],n=m[t+1],r=m[t+2],h=m[t+3],w=g[a];if(w>=o)continue;const v=d>1?(r-e)*(u-1)/(d-1):0,O=p>1?(h-n)*(l-1)/(p-1):0;for(let o=0;o<d;o++){const t=d>1?e*(u-1)+o*v:.5*(e+r)*(u-1);if(t<0||t>u-1)for(let e=0;e<p;e++)for(let t=0;t<c;t++){const n=t+e*x[2]+o*x[1]+a*x[0];f.values[n]=i}else if("bilinear"===s){const e=Math.floor(t),r=Math.ceil(t),s=t-e;for(let t=0;t<p;t++){const u=p>1?n*(l-1)+t*O:.5*(n+h)*(l-1);if(u<0||u>l-1){for(let e=0;e<c;e++){const n=e+t*x[2]+o*x[1]+a*x[0];f.values[n]=i}continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let n=0;n<c;n++){let i=n+d*y[2]+e*y[1]+w*y[0];const u=b[i];i=n+m*y[2]+e*y[1]+w*y[0];const l=b[i];i=n+d*y[2]+r*y[1]+w*y[0];const c=b[i];i=n+m*y[2]+r*y[1]+w*y[0];const h=b[i],p=u+(l-u)*g,v=c+(h-c)*g;i=n+t*x[2]+o*x[1]+a*x[0],f.values[i]=p+(v-p)*s}}}else for(let e=0;e<p;++e){const r=p>1?n*(l-1)+e*O:.5*(n+h)*(l-1);if(r<0||r>l-1){for(let t=0;t<c;t++){const n=t+e*x[2]+o*x[1]+a*x[0];f.values[n]=i}continue}const s=Math.round(r),u=Math.round(t);for(let t=0;t<c;t++){const n=t+s*y[2]+u*y[1]+w*y[0],r=t+e*x[2]+o*x[1]+a*x[0];f.values[r]=b[n]}}}}return f.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,sliceSize:o,strides:u,outputSize:l}=a["F"].calculateShapes(e,t,n),c=!1;return this.scatter(t,e,n,l,o,i,s,u,r,c)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,o,u]=a["F"].prepareAndValidate(t,e);if(0===i)return a["md"]([],s,t.dtype);const l=new a["m"]([i,o],t.dtype),c=this.readSync(e.dataId),h=this.readSync(t.dataId);for(let a=0;a<i;a++){const e=[];let n=0;for(let t=0;t<r;t++){const s=c[a*r+t];n+=s*u[t],e.push(s)}if(n<0||n>=t.size/o)throw new Error(`Invalid indices: ${e} does not index into ${t.shape}`);for(let t=0;t<o;t++)l.values[a*o+t]=h[n*o+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:o,outputSize:u}=a["F"].calculateShapes(e,t,n),l=a["Fc"](0),c=!0;return this.scatter(t,e,n,u,i,s,r,o,l,c)}fill(t,e,n){n=n||a["zd"].inferDtype(e);const r=a["zd"].getArrayFromDType(n,a["zd"].sizeFromShape(t));return r.fill(e),Object(a["kb"])().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=a["zd"].getArrayFromDType(t.dtype,a["zd"].sizeFromShape(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return a["F"].linspaceImpl(t,e,n)}scatter(t,e,n,r,s,i,o,u,l,c){const h=[r/s,s],d=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return a["md"]([],n,e.dtype);const f=new a["m"](h,e.dtype);f.values.fill(this.readSync(l.dataId)[0]);for(let a=0;a<i;a++){const t=[];let i=0;for(let e=0;e<o;e++){const n=d[a*o+e];t.push(n),i+=n*u[e]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[i*s+n]+=p[a*s+n]:f.values[i*s+n]=0===e.rank?p[0]:p[a*s+n]}return f.toTensor().reshape(n)}}
/** @license See the LICENSE file. */const Oo="2.0.0";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:a}=n,i=r;ho([s,a],t);const o=i.data.get(s.dataId).values,u=i.data.get(a.dataId).values,[l,c]=e(s.shape,a.shape,o,u,s.dtype),h=i.write(l,c,s.dtype);return{dataId:h,shape:c,dtype:s.dtype}}}}function Co(t){return(e,n,r,s,i)=>{const o=a["F"].assertAndGetBroadcastShape(e,n),u=o.length,l=a["zd"].computeStrides(o),c=a["zd"].sizeFromShape(o),h=a["zd"].getTypedArrayFromDType(i,c),d=e.length,p=n.length,f=a["zd"].computeStrides(e),m=a["zd"].computeStrides(n),g=a["F"].getBroadcastDims(e,o),b=a["F"].getBroadcastDims(n,o);if(g.length+b.length===0)for(let a=0;a<h.length;++a)h[a]=t(r[a%r.length],s[a%s.length]);else for(let y=0;y<h.length;++y){const e=a["zd"].indexToLoc(y,u,l),n=e.slice(-d);g.forEach(t=>n[t]=0);const i=a["zd"].locToIndex(n,d,f),o=e.slice(-p);b.forEach(t=>o[t]=0);const c=a["zd"].locToIndex(o,p,m);h[y]=t(r[i],s[c])}return[h,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Co((t,e)=>t/e),ko=So(a["b"],Io),No={kernelName:a["e"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s}=e,i=n;let o=r.shape;const u=o.length,l=a["zd"].parseAxisParam(s,o);let c=l;const h=a["F"].getAxesPermutation(c,u);let d=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=co(d,o,r.dtype,h,t),c=a["F"].getInnerMostAxes(c.length,u),o=t}ho(r,"max"),a["F"].assertAxesAreInnerMostDims("max",c,u);const[p,f]=a["F"].computeOutAndReduceShapes(o,c),m=a["zd"].sizeFromShape(f),g=lo(d,m,p,r.dtype),b=i.write(g,p,r.dtype);return{dataId:b,shape:p,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Eo(t,e,n,r,s){const i=a["zd"].computeStrides(e),o=po(t,e,n,i,s,"max"),u=fo(t,e,n,s,!0,r);return[o.values,u.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ao={kernelName:a["f"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=e,l=n;ho(r,"MaxPoolWithArgmax");const c=l.data.get(r.dataId).values,h=a["F"].computePool2DInfo(r.shape,s,i,[1,1],o),[d,p]=Eo(c,r.shape,r.dtype,u,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},$o=a["Hb"].nonMaxSuppressionV5,Ro={kernelName:a["h"],backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;ho(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,d=a,p=i,f=o,m=u,{selectedIndices:g,selectedScores:b}=$o(c,h,d,p,f,m);return[g,b]}},To={kernelName:a["j"],backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;ho(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let o=0;o<s.length;++o){const t=s[o];a[o]=t*t}const i=r.write(a,n.shape,n.dtype);return{dataId:i,shape:n.shape,dtype:n.dtype}}},Do=Co((t,e)=>{const n=t-e;return n*n}),Fo=So(a["k"],Do),_o={kernelName:a["n"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n;ho(r,"transpose");const i=r.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=r.shape[s[h]];const u=a.data.get(r.dataId).values,l=co(u,r.shape,r.dtype,s,o),c=a.write(l,o,r.dtype);return{dataId:c,shape:o,dtype:r.dtype}}},jo=[Ro,To,Fo,ko,_o,Ao,No];
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const vf of jo)Object(a["yc"])(vf);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(a["xc"])("cpu",()=>new vo,1);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zo={},Mo={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Lo(t,e){zo[t]=e}function Bo(t){t in zo||(zo[t]=Wo(t));const e=zo[t];return e.isContextLost()?(delete zo[t],Bo(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),zo[t])}function Po(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Wo(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=Po(t);return e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete zo[t]},!1),1===t?e.getContext("webgl",Mo)||e.getContext("experimental-webgl",Mo):e.getContext("webgl2",Mo)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vo,Uo,Go;function qo(t,e){return[e,t]}function Ho(t,e){return t*e}function Ko(t){const e=a["zd"].sizeFromShape(t),n=Math.ceil(e/4);return a["zd"].sizeToSquarishShape(n)}function Xo(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Jo(t,e){const[n,r]=Xo(t,e);return n*r*4}function Yo(t,e){const n=t;let r,s,i,o,u,l,c,h,d,p;return 2===Object(a["lb"])().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,o=n.RGBA,u=t.RGBA,c=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(t,e,n){const r=n();return e&&Qo(t),r}function Qo(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+ru(t,e))}(function(t){t[t["DENSE"]=0]="DENSE",t[t["SHARED_BATCH"]=1]="SHARED_BATCH"})(Vo||(Vo={})),function(t){t[t["RENDER"]=0]="RENDER",t[t["UPLOAD"]=1]="UPLOAD",t[t["PIXELS"]=2]="PIXELS",t[t["DOWNLOAD"]=3]="DOWNLOAD"}(Uo||(Uo={})),function(t){t[t["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",t[t["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",t[t["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",t[t["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",t[t["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(Go||(Go={}));const tu=5.96e-8,eu=65504;function nu(t){return!!(Object(a["lb"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||tu<Math.abs(t)&&Math.abs(t)<eu)}function ru(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function su(t,e,n){return ku(t,e,()=>t.getExtension(n),'Extension "'+n+'" not supported on this browser.')}function au(t,e,n){const r=ku(t,e,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Zo(t,e,()=>t.shaderSource(r,n)),Zo(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function iu(t,e,n){const r=ku(t,e,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Zo(t,e,()=>t.shaderSource(r,n)),Zo(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw uu(n,t.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}const ou=/ERROR: [0-9]+:([0-9]+):/g;function uu(t,e){const n=ou.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,o=s.map((t,e)=>a["zd"].rightPad((e+1).toString(),i)+t);let u=0;for(let a=0;a<o.length;a++)u=Math.max(o[a].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),h=o.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+a["zd"].rightPad(c[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function lu(t,e){return ku(t,e,()=>t.createProgram(),"Unable to create WebGLProgram.")}function cu(t,e,n){if(Zo(t,e,()=>t.linkProgram(n)),!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function hu(t,e,n){if(Zo(t,e,()=>t.validateProgram(n)),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function du(t,e,n){const r=ku(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Zo(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Zo(t,e,()=>t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)),r}function pu(t,e,n){const r=ku(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Zo(t,e,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)),Zo(t,e,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)),r}function fu(t,e){return ku(t,e,()=>t.createTexture(),"Unable to create WebGLTexture.")}function mu(t,e){const n=Object(a["lb"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n=`[${t}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const r=`[${t}x${e}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function gu(t,e){return ku(t,e,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bu(t,e,n,r,s,a,i,o){const u=t.getAttribLocation(n,r);return-1!==u&&(Zo(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),Zo(t,e,()=>t.vertexAttribPointer(u,a,t.FLOAT,!1,i,o)),Zo(t,e,()=>t.enableVertexAttribArray(u)),!0)}function yu(t,e,n,r){Nu(t,r),Zo(t,e,()=>t.activeTexture(t.TEXTURE0+r)),Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,n))}function xu(t,e,n,r){return ku(t,e,()=>t.getUniformLocation(n,r),'uniform "'+r+'" not present in program.')}function wu(t,e,n){return t.getUniformLocation(e,n)}function vu(t,e,n,r,s,a){Zo(t,e,()=>yu(t,e,r,a)),Zo(t,e,()=>t.uniform1i(s,a))}function Ou(t,e,n,r){Zo(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,r)),Zo(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0))}function Su(t,e,n){Zo(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Zo(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Cu(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Iu(t,e))}function Iu(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function ku(t,e,n,r){const s=Zo(t,e,()=>n());if(null==s)throw new Error(r);return s}function Nu(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const t=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${t}.`)}}function Eu(t,e=2){return a["zd"].sizeFromShape(t.slice(0,t.length-e))}function Au(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function $u(t){let e=[1,1,1];const n=0===t.length||1===t.length&&1===t[0];return n||(e=[Eu(t),...Au(t)]),e}function Ru(t,e=!1){let n=Object(a["lb"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,t=t.map((e,n)=>n>=t.length-2?a["zd"].nearestLargerEven(t[n]):t[n]),1===t.length&&(t=[2,t[0]])),2!==t.length){const e=a["zd"].squeezeShape(t);t=e.newShape}let r=a["zd"].sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Eu(t);let n=2,s=2;return t.length&&([n,s]=Au(t)),r=e*(n/2)*(s/2),a["zd"].sizeToSquarishShape(r).map(t=>2*t)}return a["zd"].sizeToSquarishShape(r)}function Tu(t){return t%2===0}function Du(t,e){if(t=t.slice(-2),e=e.slice(-2),a["zd"].arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Tu(n)&&Tu(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Tu(t[0])&&Tu(e[0])}let Fu,_u;function ju(t){if(null==Fu){const e=Bo(t);Fu=e.getParameter(e.MAX_TEXTURE_SIZE)}return Fu}function zu(t){if(null==_u){const e=Bo(t);_u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_u)}function Mu(t){if(0===t)return 0;let e;const n=Bo(t);return e=Lu(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Lu(n,"EXT_disjoint_timer_query")?1:0,e}function Lu(t,e){const n=t.getExtension(e);return null!=n}function Bu(t){try{const e=Bo(t);if(null!=e)return!0}catch(e){return!1}return!1}function Pu(t){if(0===t)return!1;const e=Bo(t);if(1===t){if(!Lu(e,"OES_texture_float"))return!1}else if(!Lu(e,"EXT_color_buffer_float"))return!1;const n=Vu(e);return n}function Wu(t){if(0===t)return!1;const e=Bo(t);if(1!==t){if(Lu(e,"EXT_color_buffer_float"))return Vu(e);const t="EXT_color_buffer_half_float";if(Lu(e,t)){const n=e.getExtension(t);return Uu(e,n)}return!1}if(!Lu(e,"OES_texture_float"))return!1;if(!Lu(e,"WEBGL_color_buffer_float"))return!1;const n=Vu(e);return n}function Vu(t){const e=Yo(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const r=1,s=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,r,s,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),i}function Uu(t,e){const n=Yo(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const s=1,a=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}function Gu(t){if(2!==t)return!1;const e=Bo(t),n=null!=e.fenceSync;return n}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qu=Object(a["lb"])();qu.registerFlag("HAS_WEBGL",()=>qu.getNumber("WEBGL_VERSION")>0),qu.registerFlag("WEBGL_VERSION",()=>Bu(2)?2:Bu(1)?1:0),qu.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===qu.get("WEBGL_VERSION")),qu.registerFlag("WEBGL_CPU_FORWARD",()=>!0),qu.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),qu.registerFlag("WEBGL_PACK",()=>qu.getBool("HAS_WEBGL")),qu.registerFlag("WEBGL_PACK_NORMALIZATION",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_CLIP",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),qu.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_PACK_REDUCE",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_LAZILY_UNPACK",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_CONV_IM2COL",()=>qu.getBool("WEBGL_PACK")),qu.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>ju(qu.getNumber("WEBGL_VERSION"))),qu.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>zu(qu.getNumber("WEBGL_VERSION"))),qu.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=qu.getNumber("WEBGL_VERSION");return 0===t?0:Mu(t)}),qu.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>qu.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a["eb"].isMobile()),qu.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Pu(qu.getNumber("WEBGL_VERSION"))),qu.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!qu.getBool("WEBGL_FORCE_F16_TEXTURES")&&qu.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),qu.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Wu(qu.getNumber("WEBGL_VERSION"))),qu.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Gu(qu.getNumber("WEBGL_VERSION"))),qu.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{const t=qu.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return t?4:0});
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Hu{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ku{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xu{constructor(t,e,n){this.variableNames=["A"];const r=t.windowSize,s=t.batchSize,a=t.inSize,i=Math.ceil(a/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${u};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ju(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function Yu(t,e){return 1===e?[t]:Ju(t,e)}function Zu(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qu(){let t,e,n,r,s,i,o,u,l,c;return 2===Object(a["lb"])().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tl(t,e,n="index"){const r=a["zd"].computeStrides(e);return r.map((e,s)=>{const a=`int ${t[s]} = ${n} / ${e}`,i=s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`;return`${a}; ${i};`}).join("")}function el(t){const e=a["zd"].computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const nl="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:rl}=a["F"];
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(t,e,n,r){const s=[];t.forEach(t=>{const e=a["zd"].sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))});const i=s.join("\n"),o=t.map(t=>ol(t,e,r)).join("\n"),u=e.texShape,l=Qu(),c=cl(l);let h,d,p=pl(l);e.isPacked?(h=ul(e.logicalShape,u),d=dl(l)):(h=ll(e.logicalShape,u),d=hl(l)),r&&(p+=bl);const f=[p,c,d,i,h,o,n].join("\n");return f}function al(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return Rl(t);case 1:return Dl(t);case 2:return _l(t);case 3:return zl(t);case 4:return Ll(t);case 5:return Bl(t);case 6:return Pl(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function il(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return $l(t);case 1:return Tl(t);case 2:return Fl(t);case 3:return jl(t);default:return Ml(t)}}function ol(t,e,n=!1){let r="";r+=n?il(t):al(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(r+=n?Vl(t,e):Ul(t,e)),r}function ul(t,e){switch(t.length){case 0:return yl();case 1:return xl(t,e);case 2:return Nl(t,e);case 3:return vl(t,e);default:return Sl(t,e)}}function ll(t,e){switch(t.length){case 0:return yl();case 1:return wl(t,e);case 2:return El(t,e);case 3:return Ol(t,e);case 4:return Cl(t,e);case 5:return Il(t,e);case 6:return kl(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}function cl(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}function hl(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}function dl(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}function pl(t){const e=`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${fl}\n    ${ml}\n    ${gl}\n  `;return e}const fl="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ml="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gl="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bl="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function yl(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function xl(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}function wl(t,e){return 1===e[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}function vl(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Ol(t,e){const n=tl(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}function Sl(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let u=2;u<t.length-1;u++)a*=t[t.length-u-1],i=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+i,o=`b${u}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}function Cl(t,e){const n=tl(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Il(t,e){const n=tl(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function kl(t,e){const n=tl(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Nl(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(a["zd"].arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function El(t,e){return a["zd"].arraysEqual(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}function Al(t){return"offset"+t}function $l(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Qu();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}function Rl(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape,o=Al(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}function Tl(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Qu();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}function Dl(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Wl(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Al(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}function Fl(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],o=s[1],u=Qu();if(null!=s&&a["zd"].arraysEqual(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}function _l(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&a["zd"].arraysEqual(e,s)){const t=s[0],e=s[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=a["zd"].squeezeShape(e),u=i;if(u.length<e.length){const e=ql(t,u),n=["row","col"];return`\n      ${al(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${Hl(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Wl(t)}\n      }\n    `;const l=s[0],c=s[1],h=Al(n);return 1===c?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}function jl(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=e.slice(1),s=[1,2],a=ql(t,n),i=["b","row","col"];return`\n        ${il(a)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Hl(i,s)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2),l=u*Math.ceil(e[1]/2),c=Qu();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}function zl(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:o,keptDims:u}=a["zd"].squeezeShape(e),l=o;if(l.length<e.length){const e=ql(t,l),n=["row","col","depth"];return`\n        ${al(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Hl(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Wl(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===i&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=Al(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}function Ml(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let f=2;f<n-1;f++)h=`int b${f}, `+h,c*=e[n-f-1],d=`b${f} * ${c} + `+d;const p=Qu();return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}function Ll(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,o=e[1]*i,{newShape:u,keptDims:l}=a["zd"].squeezeShape(e);if(u.length<e.length){const e=ql(t,u),n=["row","col","depth","depth2"];return`\n      ${al(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Hl(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Wl(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Al(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Bl(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,u=e[1]*o,{newShape:l,keptDims:c}=a["zd"].squeezeShape(e);if(l.length<e.length){const e=ql(t,l),n=["row","col","depth","depth2","depth3"];return`\n      ${al(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Hl(n,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${Wl(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Al(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Pl(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=a["zd"].squeezeShape(e);if(s.length<e.length){const e=ql(t,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${al(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Hl(n,i)});\n      }\n    `}const o=e[5],u=e[4]*o,l=e[3]*u,c=e[2]*l,h=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Wl(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=Al(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Wl(t){const e=t.name,n=a["zd"].sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Vl(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,u=rl(t.shapeInfo.logicalShape,e.logicalShape),l=Gl(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(t=>`coords.${d[t+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+d[e+c]).join(", ");let f="return outputValue;";const m=a["zd"].sizeFromShape(t.shapeInfo.logicalShape),g=1===m,b=a["zd"].sizeFromShape(e.logicalShape),y=1===b;if(1!==i||g||y){if(g&&!y)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=i-2,e=i-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}function Ul(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===l&&null==t.shapeInfo.flatOffset&&a["zd"].arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Gl(l),h=rl(t.shapeInfo.logicalShape,e.logicalShape),d=l-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map(t=>`coords.${f[t+d]} = 0;`).join("\n");let m="";return m=l<2&&u>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+d]).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}function Gl(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function ql(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Hl(t,e){return e.map(e=>t[e]).join(", ")}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kl{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a["zd"].assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=Gl(u),c=Yu("coords",u);let h,d;if(1===i){d=u+1;const t=Gl(d);h=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[u-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[u-2]};`}else d=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(t=>"int "+t),g=Yu("sourceLocR",d-1).concat("inIdx.r"),b=Yu("sourceLocG",d-1).concat("inIdx.g"),y=Yu("sourceLocB",d-1).concat("inIdx.b"),x=Yu("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,O=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${O};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${O};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xl{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jl{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yl{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],a["F"].assertAndGetBroadcastShape(t,e),a["F"].assertAndGetBroadcastShape(t,n);let o="0.0";null!=r&&(a["F"].assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=s&&(a["F"].assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zl{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a["F"].assertAndGetBroadcastShape(t,e),a["F"].assertAndGetBroadcastShape(t,n);let o="vec4(0.0)";null!=r&&(a["F"].assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(a["F"].assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ql={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class tc{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a["F"].assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ec="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",nc="return a + b;",rc="return a - b;",sc="return a * b;",ac="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",ic="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",oc="\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",uc="return float(a == b);",lc="return float(a != b);",cc="return float(a < b);",hc="return float(a <= b);",dc="return float(a > b);",pc="return float(a >= b);",fc="return float(a >= 1.0 && b >= 1.0);",mc="return float(a >= 1.0 || b >= 1.0);",gc=ec+"\n  return max(a, b);\n",bc=ec+"\n  return min(a, b);\n",yc="if (b == 0.0) return NAN;\n  return mod(a, b);",xc=ec+"\n  return atan(a, b);\n",wc="return (b >= 1.0) ? a : a * (b + 1.0);",vc="return (a < 0.) ? b * a : a;";class Oc{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=a["F"].assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",Cc="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",Ic="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",kc="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+Sc+"\n  return result;\n",Nc="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Ec="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",Ac="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Sc+"\n  return result;\n",$c="\n  return vec4(equal(a, b));\n",Rc="\n  return vec4(notEqual(a, b));\n",Tc="\n  return vec4(lessThan(a, b));\n",Dc="\n  return vec4(lessThanEqual(a, b));\n",Fc="\n  return vec4(greaterThan(a, b));\n",_c="\n  return vec4(greaterThanEqual(a, b));\n",jc="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",zc="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",Mc="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Sc+"\n  return result;\n",Lc="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Sc+"\n  return result;\n",Bc="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+Sc+"\n  return result;\n";class Pc{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a["F"].assertAndGetBroadcastShape(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===a["zd"].sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Gl(s);if(i=`\n          ${t} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Yu("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wc{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vc{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uc{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gc{constructor(t){this.outputShape=[],this.outputShape=a["F"].computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){const t=e[a-1];n.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${t}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qc{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a["F"].computeOutShape(t,e);const n=this.outputShape,r=n.length,s=Gl(r),i=Yu("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const u=new Array(t.length-1);u[0]=t[0][e];for(let a=1;a<u.length;a++)u[a]=u[a-1]+t[a][e];const l=o[e],c=o.slice(-2),h=o.join();let d=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let a=1;a<u.length;a++){const t=u[a-1];d+=`\n        if (${l} < ${u[a]}  && ${l} >= ${u[a-1]}) {\n          return getChannel(\n            getT${a}(${Hc(o,l,t)}),\n            vec2(${Hc(c,l,t)}));\n        }`}const p=u.length,f=u[u.length-1];d+=`\n        return getChannel(\n          getT${p}(${Hc(o,l,f)}),\n          vec2(${Hc(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map(t=>"int "+t)}) {\n        ${d}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Hc(t,e,n){const r=t.indexOf(e),s=t.map((t,e)=>e===r?`${t} - ${n}`:t);return s.join()}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kc{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xc{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jc{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yc{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zc{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qc{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class th{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,b=f?3:1;let y="",x="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class eh{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let a=0;a<p;a++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${a}C${2*t} = vec4(0.);\n          vec4 wR${a}C${t} = vec4(0.);\n          vec4 xR${a}C${t} = vec4(0.);`;for(let w=0;w<p;w++)for(let t=0;t<m;t++){const e=2*t;if(g+=`\n          xR = xRCorner + ${w*h};\n          xC = xCCorner + ${e*d};\n        `,1===c){if(e<f&&(g+=u%2===1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${w}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${e} = vec4(previous.zw, xTexelR${w}C${e}.xy);\n                } else {\n                  xR${w}C${e} = vec4(0, 0, xTexelR${w}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xR${w}C${e} = xTexelR${w}C${e};\n              `,e+1<f)){const t=u%2===0?a["zd"].nearestLargerEven(d):d;d%2===0&&u%2===1||d%2!==0&&u%2!==1?(g+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${e} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${w}C${e+1} = vec4(\n                    xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${e+1} = xTexelR${w}C${e+2};\n                `}}else e<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,u%2===1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${w}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${e+2} = vec4(0.);\n                }\n\n                xR${w}C${e} = vec4(\n                  xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.zw);\n              `,e+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${e+1} = vec4(xTexelR${w}C${e+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${e+2} = vec4(0.);\n                }\n\n                xR${w}C${e} = vec4(\n                  xTexelR${w}C${e}.xy, xTexelR${w}C${e+2}.xy);\n              `,e+1<f&&(g+=`\n                  xR${w}C${e+1} = vec4(\n                    xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.zw);\n                `)),g+="}");e<f&&(g+=`\n            vec4 wTexelR${w}C${e} = getW(${w}, ${e}, d1, q);\n            wR${w}C${e} = vec4(wTexelR${w}C${e}.xz, wTexelR${w}C${e}.xz);\n          `,e+1<f&&(g+=`\n              vec4 wTexelR${w}C${e+1} = getW(${w}, ${e+1}, d1, q);\n              wR${w}C${e+1} =\n                vec4(wTexelR${w}C${e+1}.xz, wTexelR${w}C${e+1}.xz);`))}for(let a=0;a<p;a++)for(let t=0;t<f;t++)g+=`dotProd += xR${a}C${t} * wR${a}C${t};`;let b="",y="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sh{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ah{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=t[t.length-1],a=n?"<":">";this.userCode=`\n      int getIndex(int i) {\n        ${n?`return ${s} -i - 1;`:"return i;"}\n      }\n\n      void main() {\n        ${Gl(r)} coords = getOutputCoords();\n        int end = ${oh(r,"coords")};\n        float val = 0.0;\n        for (int i = ${s} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${a} end) {\n            continue;\n          }\n          if (idx == end && ${e}) {\n            continue;\n          }\n          ${oh(r,"coords")} = idx;\n          val += getX(${ih(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function ih(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function oh(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uh{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Vo.DENSE;const e=Ko(t),n=Qu();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${tl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lh{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Vo.DENSE;const e=Ko(t),n=Qu();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${tl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ch{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hh{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dh{constructor(t){this.variableNames=["A"],this.outTexUsage=Uo.DOWNLOAD;const e=Qu();this.outputShape=t,this.userCode=`\n      ${nl}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ph{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Uo.DOWNLOAD;const e=Qu();this.outputShape=t,this.userCode=`\n      ${nl}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fh{constructor(t,e,n=!1){this.variableNames=["A"];const r=Qu(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${el(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mh{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Qu(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${el(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gh={REAL:"return real * expR - imag * expI;",IMAG:"return real * expI + imag * expR;"};class bh{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yh{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xh{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=Gl(this.rank),a=wh(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function wh(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<t.length;a++)a===e?s.push(`int(getIndices(${r[a]}))`):s.push(""+r[a]);return s.join()}class vh{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Gl(e.length),s=Gl(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(t,e){const n=Qu(),r=`${n.version}\n    precision highp float;\n    ${n.attribute} vec3 clipSpacePos;\n    ${n.attribute} vec2 uv;\n    ${n.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return au(t,e,r)}function Sh(t,e){const n=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return du(t,e,n)}function Ch(t,e){const n=new Uint16Array([0,1,2,2,1,3]);return pu(t,e,n)}function Ih(t,e,n,r,s,a,i){mu(n,r);const o=fu(t,e),u=t.TEXTURE_2D;return Zo(t,e,()=>t.bindTexture(u,o)),Zo(t,e,()=>t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Zo(t,e,()=>t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Zo(t,e,()=>t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST)),Zo(t,e,()=>t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST)),Zo(t,e,()=>t.texImage2D(u,0,s,n,r,0,a,i,null)),Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,null)),o}function kh(t,e,n,r,s){const[a,i]=qo(n,r);return Ih(t,e,a,i,s.internalFormatFloat,s.textureFormatFloat,t.FLOAT)}function Nh(t,e,n,r,s){const[a,i]=qo(n,r);return Ih(t,e,a,i,s.internalFormatHalfFloat,s.textureFormatFloat,s.textureTypeHalfFloat)}function Eh(t,e,n,r,s){const[a,i]=qo(n,r);return Ih(t,e,a,i,t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}function Ah(t,e,n,r,s){const[a,i]=Xo(n,r);return Ih(t,e,a,i,s.internalFormatPackedFloat,t.RGBA,t.FLOAT)}function $h(t,e,n,r,s){const[a,i]=Xo(n,r);return Ih(t,e,a,i,s.internalFormatPackedHalfFloat,t.RGBA,s.textureTypeHalfFloat)}function Rh(t,e,n,r){const s=0,a=12,i=20;Zo(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r));const o=bu(t,e,n,"clipSpacePos",r,3,i,s);return o&&bu(t,e,n,"uv",r,2,i,a)}function Th(t,e,n,r,s,a,i){let o,u,l;Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),a instanceof Uint8Array?(o=new Uint8Array(r*s*4),u=t.UNSIGNED_BYTE,l=t.RGBA):(o=new Float32Array(r*s*4),u=t.FLOAT,l=i.internalFormatPackedFloat),o.set(a),Zo(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,l,r,s,0,t.RGBA,u,o)),Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}function Dh(t,e,n,r){Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),r.data instanceof Uint8Array?Zo(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)):Zo(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)),Zo(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}function Fh(t,e,n,r,s){const a=t.createBuffer();Zo(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const i=4,o=4,u=i*o*n*r;return Zo(t,e,()=>t.bufferData(t.PIXEL_PACK_BUFFER,u,t.STREAM_READ)),Zo(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)),Zo(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}function _h(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function jh(t,e,n,r,s){const[a,i]=qo(n,r),o=4,u=new Uint8Array(Ho(n*r,o));return Zo(t,e,()=>t.readPixels(0,0,a,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,u)),new Float32Array(u.buffer)}function zh(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(Jo(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function Mh(t,e,n,r){const s=new Float32Array(n*r*4);return Zo(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,s)),s}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lh{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(a["lb"])().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,Lo(e,t)):this.gl=Bo(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(a["lb"])().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=su(this.gl,this.debug,t),Lu(this.gl,e))this.textureHalfFloatExtension=su(this.gl,this.debug,e);else if(Object(a["lb"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Lu(this.gl,r))this.colorBufferHalfFloatExtension=su(this.gl,this.debug,r);else if(Object(a["lb"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Lu(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Lu(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Sh(this.gl,this.debug),this.indexBuffer=Ch(this.gl,this.debug),this.framebuffer=gu(this.gl,this.debug),this.textureConfig=Yo(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(a["lb"])().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Zo(t,this.debug,()=>t.finish()),Zo(t,this.debug,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Zo(t,this.debug,()=>t.deleteFramebuffer(this.framebuffer)),Zo(t,this.debug,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Zo(t,this.debug,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Zo(t,this.debug,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),kh(this.gl,this.debug,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),Nh(this.gl,this.debug,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),Eh(this.gl,this.debug,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),Dh(this.gl,this.debug,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),Th(this.gl,this.debug,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),$h(this.gl,this.debug,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),Ah(this.gl,this.debug,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Su(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Zo(this.gl,this.debug,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>jh(this.gl,this.debug,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return zh(this.gl,t,e,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return _h(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=Fh(this.gl,this.debug,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(a["lb"])().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>Mh(this.gl,this.debug,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=iu(e,this.debug,t),r=Oh(e,this.debug),s=lu(e,this.debug);return Zo(e,this.debug,()=>e.attachShader(s,r)),Zo(e,this.debug,()=>e.attachShader(s,n)),cu(e,this.debug,s),this.debug&&hu(e,this.debug,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=Rh(e,this.debug,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Zo(this.gl,this.debug,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&hu(this.gl,this.debug,this.program),Zo(this.gl,this.debug,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?xu(this.gl,this.debug,t,e):wu(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Zo(this.gl,this.debug,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),vu(this.gl,this.debug,this.program,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=Xo(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&hu(this.gl,this.debug,this.program),Cu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Zo(t,this.debug,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Zo(this.gl,this.debug,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=su(this.gl,this.debug,2===Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await a["zd"].repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl,n=e.getQueryParameter(t,e.QUERY_RESULT);return n/1e6}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=Bh(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||a["zd"].repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ou(this.gl,this.debug,t,this.framebuffer),this.debug&&Cu(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ou(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Cu(this.gl)):Su(this.gl,this.debug,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Ou(r,this.debug,t,this.framebuffer),this.debug&&Cu(r),this.outputTexture=t,Zo(r,this.debug,()=>r.viewport(0,0,e,n)),Zo(r,this.debug,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Zo(this.gl,this.debug,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Bh(t){let e=0;for(;e<t.length;++e){const n=t[e]();if(!n)break}return e-1}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ph(t,e,n,r){const s=e.userCode,i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),o=i.map(t=>t.shapeInfo),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=sl(i,u,s,e.packedInputs),c=t.createProgram(l);let h=null;const d=t.getUniformLocation(c,"NAN",!1);1===Object(a["lb"])().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let a=0;a<e.variableNames.length;a++){const n=e.variableNames[a],r=!1;p[n]=t.getUniformLocation(c,n,r),p["offset"+n]=t.getUniformLocation(c,"offset"+n,r)}return{program:e,source:l,webGLProgram:c,uniformLocations:p,inShapeInfos:o,outShapeInfo:u,infLoc:h,nanLoc:d}}function Wh(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!a["zd"].arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!a["zd"].arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function Vh(t,e,n,r,s){Wh(e.inShapeInfos,n),Wh([e.outShapeInfo],[r]);const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,o[0],o[1]):t.setOutputMatrixTexture(i,o[0],o[1]),t.setProgram(e.webGLProgram),1===Object(a["lb"])().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],o=e.uniformLocations["offset"+s];if(null!=i)if(n.isUniform)if(a["zd"].sizeFromShape(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)}),null!=s&&s(t,e.webGLProgram),t.executeProgram()}function Uh(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gh{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=Qu(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let w=0;w<=1;w++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${w};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*w+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*w+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qh{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hh{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kh{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xh{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jh{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,d=l-1-t.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yh{constructor(t,e,n=!1,r=!1,s=!1,a=null,i=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";a&&(p=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,f="result = activation(result);");const m=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          vec4 a = getMatrixA(rc.x, ${l});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${m}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zh{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qh{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class td{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Yu("rc",e),r=Gl(e),s=nd(e,t,n),a=rd(e,t[t.length-1],t[t.length-2],n),i=sd(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}function ed(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=e[e.length-1-n]+","+a;n.push(a)}return n}function nd(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}function rd(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}function sd(t,e){const n=t.length,r=ed(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ad{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=Gl(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class id{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=Gl(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=Yu("rc",r),u=Yu("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class od{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const w=4*Math.floor(a/4),v=a%4,O=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${O}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${O}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class ud{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const w="max";let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const O=4*Math.floor(a/4),S=a%4,C=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${w}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${O}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${O};\n            if (${1===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ld{constructor(t,e){this.variableNames=["x"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=Math.ceil(s/n);this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cd{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let r=0;r<4;r++){let t="thisRC = rc;";r%2===1&&(t+="thisRC.z += 1;"),r>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${hd(e)}\n      ${el(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function hd(t){const e=tl(["r","c","d"],t);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${e}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dd{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pd{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fd{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class md{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gd{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bd{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`,s=t.map((t,e)=>r(e)).join(","),a=Gl(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yd{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Yu("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Gl(n);function o(t){return h(t)}function u(t){return t[n-1]="("+t[n-1]+" + 1)",h(t)}function l(t){return t[n-2]="("+t[n-2]+" + 1)",h(t)}function c(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",h(t)}function h(e){const n=t.map((t,n)=>d(n,e)),r=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${s}))`}function d(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${s}){\n            result.g = ${u(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${l(r.slice())};\n            if(${s}) {\n              result.a = ${c(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xd{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=Gl(s.length),u=Gl(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wd{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o="0.0",u="sumValue",l=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vd{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=Gl(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Od{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Gl(this.rank),n=`uniform int start[${this.rank}];`,r=Cd(this.rank);let s;const a=t.map((t,e)=>`sourceLoc.${Sd[e]} = start[${e}] + coords.${Sd[e]};`);s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Sd=["x","y","z","w","u","v"];function Cd(t){if(1===t)return"sourceLoc";if(t<=6)return Sd.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Id{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Gl(this.rank),n=Yu("coords",this.rank),r=Yu("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kd{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=Gl(n.length),a=Gl(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nd{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Ad(e,n),s=$d(t,r,n);if(s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]),this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return this.numUsedTextures++,this.log(),r===Go.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Go.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Go.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Go.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Go.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=Ad(n,r),a=$d(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(t),this.numFreeTextures++,this.numUsedTextures--;const i=this.usedTextures[a],o=i.indexOf(t);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`)}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}}}function Ed(t){return Object(a["lb"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Go.PACKED_2X2_FLOAT32:Go.UNPACKED_FLOAT32:t?Go.PACKED_2X2_FLOAT16:Go.UNPACKED_FLOAT16}function Ad(t,e){if(t===Uo.UPLOAD)return Go.PACKED_2X2_FLOAT32;if(t===Uo.RENDER||null==t)return Ed(e);if(t===Uo.DOWNLOAD||t===Uo.PIXELS)return Go.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function $d(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rd{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*e[a];this.outputShape=n,this.rank=n.length;const r=Gl(this.rank),s=Td(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Td(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dd{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Fd="if (isnan(x)) return x;",_d="return x;",jd="return abs(x);",zd=Fd+"\n  return (x < 0.0) ? 0.0 : x;\n",Md=Fd+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Ld="return (x >= 0.0) ? x : (exp(x) - 1.0);",Bd=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a["F"].SELU_SCALEALPHA};\n  float scale = ${a["F"].SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;function Pd(t=0){return Fd+`\n    return x > 0.0 ? 1.0 : float(${t});\n  `}const Wd="return -x;",Vd="return ceil(x);",Ud="return floor(x);",Gd="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",qd="return float(isnan(x));",Hd="return float(isinf(x));",Kd="return float(!isnan(x) && !isinf(x));",Xd="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",Jd="return exp(x);",Yd="return exp(x) - 1.0;",Zd="if (x < 0.0) return NAN;\n  return log(x);",Qd="return log(1.0 + x);",tp="return sqrt(x);",ep="return inversesqrt(x);",np="return 1.0 / (1.0 + exp(-1.0 * x));",rp="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",sp=Fd+"\n  return sin(x);\n",ap=Fd+"\n  return cos(x);\n",ip="return tan(x);",op=Fd+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",up=Fd+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",lp=Fd+"\n  return atan(x);\n",cp="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",hp="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",dp="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",pp=Fd+"return log(x + sqrt(x * x + 1.0));",fp=Fd+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",mp=Fd+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",gp=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a["F"].ERF_P};\n  float a1 = ${a["F"].ERF_A1};\n  float a2 = ${a["F"].ERF_A2};\n  float a3 = ${a["F"].ERF_A3};\n  float a4 = ${a["F"].ERF_A4};\n  float a5 = ${a["F"].ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,bp="return x * x;",yp="return 1.0 / x;",xp="return float(!(x >= 1.0));",wp="return float(int(x));",vp="return x;",Op="return x;",Sp="\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",Cp="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ip="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",kp="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Np{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ep{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Yu("rc",e),r=Gl(e),s=Zu(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{segment_util:Ap}=a["F"],$p=a["Hb"].split,Rp=a["Hb"].tile,Tp=a["Hb"].topkImpl,Dp=a["Hb"].whereImpl,Fp=1e-7,_p=1e-4,jp={};function zp(t){return t in jp||(jp[t]={}),jp[t]}function Mp(t,e=!1){if("linear"===t)return e?Op:_d;if("relu"===t)return e?Cp:zd;if("elu"===t)return e?kp:Ld;if("relu6"===t)return e?Ip:Md;if("prelu"===t)return e?Nc:vc;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}const Lp=128,Bp=600;function Pp(){return null==Object(a["lb"])().global.screen?1024:Object(a["lb"])().global.screen.height*Object(a["lb"])().global.screen.width*window.devicePixelRatio*Bp/1024/1024}const Wp=1e3;class Vp extends a["d"]{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(a["lb"])().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Bo(Object(a["lb"])().getNumber("WEBGL_VERSION"));this.binaryCache=zp(Object(a["lb"])().getNumber("WEBGL_VERSION")),this.gpgpu=new Lh(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new Nd(this.gpgpu),this.numMBBeforeWarning=Pp(),this.texData=new a["a"](this,Object(a["kb"])())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(Object(a["lb"])().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Uo.UPLOAD}),r}move(t,e,n,r){if(Object(a["lb"])().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Uo.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:s,slice:i,shape:o,isPacked:u}=e;if(null!=i){let e;e=u?new Np(o,vp):new Dd(o,vp);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=a["zd"].now()),"complex64"===r){const t=s.real.dataSync(),e=s.imag.dataSync();h=a["F"].mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=a["zd"].now()-c),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensors:o,isPacked:u}=e;if(null!=s){let e;e=u?new Np(r,vp):new Dd(r,vp);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(a["lb"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(a["lb"])().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==i&&Object(a["lb"])().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...Ko(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([o.real.data(),o.imag.data()]),e=t[0],n=t[1];c=a["F"].mergeRealAndImagArrays(e,n)}else if(null==h)c=this.getValuesFromTexture(t);else{const t=a["zd"].sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=l&&this.disposeData(l.dataId);const d=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!nu(n)){if(Object(a["lb"])().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=a["zd"].sizeFromShape(e);if(Object(a["lb"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Ko(e)).subarray(0,s);return this.disposeData(n.dataId),a}const i=Object(a["lb"])().getBool("WEBGL_PACK")&&!0===r,o=i?$u(e):e,u=i?new ph(o):new dh(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:t}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeData(l.dataId),h}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=a["zd"].flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),i=a["zd"].flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);o["kernelMs"]=a["zd"].sum(t),o["getExtraProfileInfo"]=()=>t.map((t,e)=>({name:i[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}}startTimer(){return Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a["zd"].now(),endMs:null}}endTimer(t){return Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=a["zd"].now(),t)}async getQueryTime(t){if(Object(a["lb"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(a["lb"])().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(a["kb"])().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=Lp){return null!=this.getCPUBackend()&&t.every(t=>null==this.texData.get(t.dataId).texture&&a["zd"].sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64"),r=this.texData.get(n.dataId);return r.complexTensors={real:Object(a["kb"])().keep(t.clone()),imag:Object(a["kb"])().keep(e.clone())},n}real(t){const e=this.texData.get(t.dataId);return e.complexTensors.real.clone()}imag(t){const e=this.texData.get(t.dataId);return e.complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===a["zd"].sizeFromShape(n))return Object(a["md"])([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=a["Vc"].isSliceContinous(t.shape,e,n);if(r||!s){const r=Object(a["lb"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Id(n):new Od(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),i=this.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let o=a["Vc"].computeFlatOffset(e,t.strides);r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const u=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,u+1),s}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const s=a["Vc"].computeOutShape(e,n,r);if(s.some(t=>0===t))return Object(a["md"])([],s);const i=new kd(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yd(t.shape,e):new bd(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>Object(a["vc"])(t)),r=t.map(t=>Object(a["Cb"])(t));return Object(a["Q"])(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>Object(a["lb"])().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(Object(a["lb"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new qc(t.map(t=>t.shape),e);return this.compileAndRun(n,t)}const n=a["F"].computeOutShape(t.map(t=>t.shape),e),r=t.map(t=>t.as2D(-1,a["zd"].sizeFromShape(t.shape.slice(e)))),s=new Gc(r.map(t=>t.shape)),i=this.compileAndRun(s,r);return i.reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Wd,t.dtype);const e=new Dd(t.shape,Wd);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],o=n?t.shape[1]:t.shape[2],[u,,]=t.shape;if((1===s||1===i)&&o>Wp){n&&(t=Object(a["vd"])(t,[0,2,1])),r&&(e=Object(a["vd"])(e,[0,2,1]));const s=1===i?t:t.as3D(u,o,1),l=1===i?2:1,c=1===i?e.as3D(u,1,o):e;return this.multiply(s,c).sum(l,!0)}const l=Object(a["yd"])(t.dtype,e.dtype),c=new Yh(t.shape,[u,s,i],n,r);return this.compileAndRun(c,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){const u=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[c,,]=t.shape,h=Object(a["yd"])(t.dtype,e.dtype),d=null!=s,p=null!=o,f=i?Mp(i,!0):null,m=new Yh(t.shape,[c,u,l],n,r,d,f,p),g=[t,e];return s&&g.push(s),o&&g.push(o),this.compileAndRun(m,g,h)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new tc(Ql.REAL,t.shape,e.shape),a=new tc(Ql.IMAG,t.shape,e.shape),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],o=this.compileAndRun(s,i),u=this.compileAndRun(a,i),l=this.complex(o,u);return o.dispose(),u.dispose(),l}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,sc,t.dtype);const n=new Oc(sc,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,s,i){const o=[t,e,n];let u=null;null!=r&&(u=r.shape,o.push(r));let l=null;if(null!=s&&(l=s.shape,o.push(s)),Object(a["lb"])().getBool("WEBGL_PACK_NORMALIZATION")){const r=new Zl(t.shape,e.shape,n.shape,u,l,i);return this.compileAndRun(r,o)}const c=new Yl(t.shape,e.shape,n.shape,u,l,i);return this.compileAndRun(c,o)}localResponseNormalization4D(t,e,n,r,s){const i=Object(a["lb"])().getBool("WEBGL_PACK_NORMALIZATION")?new Kh(t.shape,e,n,r,s):new qh(t.shape,e,n,r,s);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new Hh(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId),r=n.map(t=>a["zd"].decodeString(t)),s=Object(a["M"])(t.shape,t.dtype,r);return Rp(s,e)}const n=new Rd(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(a["lb"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new id(t.shape,e,n):new ad(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new xh(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){a["zd"].assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=a["F"].getReshaped(t.shape,e,r),i=a["F"].getPermuted(s.length,e.length),o=a["F"].getReshapedPermuted(t.shape,e,r),u=a["F"].getSliceBeginCoords(n,e.length),l=a["F"].getSliceSize(o,n,e.length);return Object(a["vd"])(t.reshape(s),i).reshape(o).slice(u,l)}spaceToBatchND(t,e,n){a["zd"].assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let a=1+e.length;a<t.shape.length;++a)s.push([0,0]);const i=t.pad(s),o=a["F"].getReshaped(i.shape,e,r,!1),u=a["F"].getPermuted(o.length,e.length,!1),l=a["F"].getReshapedPermuted(i.shape,e,r,!1);return Object(a["vd"])(i.reshape(o),u).reshape(l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],i=a["F"].computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r},u=new ld(o,e),l=this.compileAndRun(u,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const i=a["F"].computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r},u=new Xu(o,e,null==n),l=[t];null!=n&&l.push(n);const c=this.compileAndRun(u,l,"int32");return 1===c.shape[1]?c:this.argReduce(t,e,c)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=r[r.length-1],i=a["F"].computeOptimalWindowSize(s),o=new Kl(r,i,e,null==n),u=null==n?[t]:[t,n],l=this.compileAndRun(o,u,"int32");return l.rank===t.rank?this.argReducePacked(t,e,l):l}sum(t,e){a["F"].assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["zd"].sizeFromShape(r),i=t.as2D(-1,s),o=a["jd"](t.dtype);return this.reduce(i,"sum",o).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["zd"].sizeFromShape(r),i=t.as2D(-1,s),o=a["jd"](t.dtype);return this.reduce(i,"prod",o).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const s=a["F"].getAxesPermutation([r],t.rank);let i=t;null!=s&&(i=Object(a["vd"])(t,s),r=a["F"].getInnerMostAxes(1,t.rank)[0]);const o=Ap.computeOutShape(i.shape,r,n),u=a["zd"].sizeFromShape([i.shape[r]]),l=i.as2D(-1,u),c=a["jd"](t.dtype);let h=this.segOpCompute(l,"unsortedSegmentSum",e,c,n).reshape(o);return null!=s&&(h=Object(a["vd"])(h,a["F"].getUndoAxesPermutation(s))),h}segOpCompute(t,e,n,r,s){const i=t.shape[0],o=t.shape[1],u=Ap.segOpComputeOptimalWindowSize(o,s),l={windowSize:u,inSize:o,batchSize:i,numSegments:s},c=new wd(l,e),h=this.compileAndRun(c,[t,n],r);return h.shape[1]===s?h:(n=Object(a["uc"])(0,s).tile([o/u]),this.segOpCompute(h,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(a["F"].assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(a["lb"])().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=a["F"].computeOutAndReduceShapes(t.shape,r),i=a["zd"].sizeFromShape(s),o=t.as2D(-1,i);return this.argReduce(o,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=new ah(t.shape,n,r);return this.compileAndRun(s,[t])}equal(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,$c,"bool");const n=new Oc(uc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Rc,"bool");const n=new Oc(lc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Tc,"bool");const n=new Oc(cc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Dc,"bool");const n=new Oc(hc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Fc,"bool");const n=new Oc(dc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,_c,"bool");const n=new Oc(pc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new Dd(t.shape,xp);return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,jc,"bool");const n=new Oc(fc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,zc,"bool");const n=new Oc(mc,t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new vd(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Object(a["yd"])(e.dtype,n.dtype))}where(t){a["F"].warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Dp(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Tp(r,t.shape,t.dtype,e,n)}min(t,e){a["F"].assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["zd"].sizeFromShape(r),i=t.as2D(-1,s);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Lc,t.shape,e.shape):new Oc(bc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Bc,t.shape,e.shape):new Oc(yc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Mc,t.shape,e.shape):new Oc(gc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){a["F"].assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["zd"].sizeFromShape(r),i=t.as2D(-1,s);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){a["F"].assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=a["F"].computeOutAndReduceShapes(t.shape,e),s=a["zd"].sizeFromShape(r),i=t.as2D(-1,s);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n=ic,r="int32";if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Ic,r);const s=new Oc(n,t.shape,e.shape);return this.compileAndRun(s,[t,e],r)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,nc);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=Object(a["yd"])(t.dtype,e.dtype);if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,nc,n);const r=new Oc(nc,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new Np(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new Pc(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),s=this.texData.get(e.dataId),[i,o]=[[r.complexTensors.real,s.complexTensors.real],[r.complexTensors.imag,s.complexTensors.imag]].map(r=>{const[s,i]=r,o=this.makeComplexComponentTensorInfo(t,s),u=this.makeComplexComponentTensorInfo(e,i),l=new Oc(n,t.shape,e.shape);return this.compileAndRun(l,[o,u],Object(a["yd"])(s.dtype,i.dtype))}),u=this.complex(i,o);return i.dispose(),o.dispose(),u}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(a["lb"])().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(a["yd"])(t,e)),n=t.map(t=>t.shape),r=Object(a["lb"])().getBool("WEBGL_PACK"),s=r?new Ku(t[0].shape,n):new Hu(t[0].shape,n);return this.compileAndRun(s,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,rc);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=Object(a["yd"])(t.dtype,e.dtype);if(Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,rc,t.dtype);const r=new Oc(rc,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS"),r=n?new Pc(kc,t.shape,e.shape):new Oc(oc,t.shape,e.shape),s=Object(a["yd"])(t.dtype,e.dtype);return this.compileAndRun(r,[t,e],s)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Vd,t.dtype);const e=new Dd(t.shape,Vd);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ud,t.dtype);const e=new Dd(t.shape,Ud);return this.compileAndRun(e,[t])}sign(t){const e=new Dd(t.shape,Gd);return this.compileAndRun(e,[t])}isNaN(t){const e=new Dd(t.shape,qd);return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Dd(t.shape,Hd);return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Dd(t.shape,Kd);return this.compileAndRun(e,[t],"bool")}round(t){const e=new Dd(t.shape,Xd);return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Jd,t.dtype);const e=new Dd(t.shape,Jd);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Yd,t.dtype);const e=new Dd(t.shape,Yd);return this.compileAndRun(e,[t])}softmax(t,e){const n=a["zd"].parseAxisParam([e],t.shape),r=Object(a["Vb"])(t,n),s=a["F"].expandShapeToKeepDim(r.shape,n),i=this.subtract(t,r.reshape(s)),o=this.exp(i),u=this.sum(o,n).reshape(s);return Object(a["gb"])(o,u)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Sp,t.dtype);const e=new Dd(t.shape,Zd);return this.compileAndRun(e,[t])}log1p(t){const e=new Dd(t.shape,Qd);return this.compileAndRun(e,[t])}sqrt(t){const e=new Dd(t.shape,tp);return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new Dd(t.shape,ep);return this.compileAndRun(e,[t])}reciprocal(t){const e=new Dd(t.shape,yp);return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(a["lb"])().getBool("WEBGL_PACK")?new Np(t.shape,Cp):new Dd(t.shape,zd),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(a["lb"])().getBool("WEBGL_PACK")?new Np(t.shape,Ip):new Dd(t.shape,Md),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Nc,t.shape,e.shape):new Oc(vc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,kp,t.dtype);const e=new Dd(t.shape,Ld);return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Ec,t.shape,e.shape):new Oc(wc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Dd(t.shape,Bd);return this.compileAndRun(e,[t])}int(t){const e=new Dd(t.shape,wp);return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=Object(a["lb"])().getBool("WEBGL_PACK_CLIP")?new Vc(t.shape):new Wc(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(Object(a["lb"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,jd,t.dtype);const e=new Dd(t.shape,jd);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Uc(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new Dd(t.shape,np);return this.compileAndRun(e,[t])}softplus(t){const e=new Dd(t.shape,rp);return this.compileAndRun(e,[t])}sin(t){const e=new Dd(t.shape,sp);return this.compileAndRun(e,[t])}cos(t){const e=new Dd(t.shape,ap);return this.compileAndRun(e,[t])}tan(t){const e=new Dd(t.shape,ip);return this.compileAndRun(e,[t])}asin(t){const e=new Dd(t.shape,op);return this.compileAndRun(e,[t])}acos(t){const e=new Dd(t.shape,up);return this.compileAndRun(e,[t])}atan(t){const e=new Dd(t.shape,lp);return this.compileAndRun(e,[t])}atan2(t,e){const n=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(Ac,t.shape,e.shape):new Oc(xc,t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new Dd(t.shape,cp);return this.compileAndRun(e,[t])}cosh(t){const e=new Dd(t.shape,hp);return this.compileAndRun(e,[t])}tanh(t){const e=new Dd(t.shape,dp);return this.compileAndRun(e,[t])}asinh(t){const e=new Dd(t.shape,pp);return this.compileAndRun(e,[t])}acosh(t){const e=new Dd(t.shape,fp);return this.compileAndRun(e,[t])}atanh(t){const e=new Dd(t.shape,mp);return this.compileAndRun(e,[t])}erf(t){const e=new Dd(t.shape,gp);return this.compileAndRun(e,[t])}step(t,e){const n=new Dd(t.shape,Pd(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,i){const o=t.shape,u=this.texData.get(t.dataId),l=n.inChannels,c=o[0]*o[1]*o[2],h=n.outChannels,d="channelsLast"===n.dataFormat,p=!1,f=!1,m=(1===c||1===h)&&l>Wp,g=o[2]%2!==0&&!!u.isPacked;if(m||!Object(a["lb"])().getBool("WEBGL_LAZILY_UNPACK")||!Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!g){const a=d?o[0]*o[1]*o[2]:o[0]*o[2]*o[3],u=this.reshape(t,[1,a,n.inChannels]),l=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:u,b:l,transposeA:p,transposeB:f,bias:r,activation:s,preluActivationWeights:i}),n.outShape)}const b=d?o[0]*o[1]*(o[2]+1):o[0]*o[2]*(o[3]+1),y={dataId:t.dataId,shape:[1,b,n.inChannels],dtype:t.dtype},x=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,a["zd"].assert(Du(u.shape,y.shape),()=>`packed reshape ${u.shape} to ${y.shape} isn't free`);const w=this.reshape(e,[1,n.inChannels,n.outChannels]),v=this.fusedBatchMatMul({a:y,b:w,transposeA:p,transposeB:f,bias:r,activation:s,preluActivationWeights:i}),O=this.texData.get(v.dataId);return a["zd"].assert(O.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=x,O.shape=n.outShape,Object(a["kb"])().makeTensorFromDataId(v.dataId,n.outShape,v.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=i*o*u,f=c*l,m=[p,f],g=!0,b=!1,y=t.squeeze([0]),x=e.reshape([1,p,-1]),w=new Gh(m,y.shape,n),v=this.compileAndRun(w,[y]).reshape([1,m[0],m[1]]),O=null!=r,S=null!=a,C=s?Mp(s,!0):null,I=new Yh(v.shape,[1,f,n.outChannels],g,b,O,C,S),k=[v,x];r&&k.push(r),S&&k.push(a);const N=this.compileAndRun(I,k);return d?N.reshape([1,c,l,n.outChannels]):N.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,i);if(Object(a["lb"])().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,i);const o=null!=r,u=null!=i,l=s?Mp(s,!1):null,c=new th(n,o,l,u),h=[t,e];return r&&h.push(r),i&&h.push(i),this.compileAndRun(c,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Object(a["lb"])().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new th(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Xc(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new Kc(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){const o=Object(a["lb"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1,u=s?Mp(s,o):null,l=[t,e],c=null!=r,h=null!=i;let d;return c&&l.push(r),h&&l.push(i),o?(d=new rh(n,c,u,h),this.compileAndRun(d,l)):(d=new nh(n,c,u,h),this.compileAndRun(d,l))}depthwiseConv2D(t,e,n){let r;return Object(a["lb"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1?(r=new rh(n),this.compileAndRun(r,[t,e])):(r=new nh(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Qc(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new Zc(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new eh(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Yc(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Jc(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new od(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new od(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=!0,a=new od(r,"max",s),i=this.compileAndRun(a,[e]),o=new Xh(r),u=this.compileAndRun(o,[t,i],e.dtype);return i.dispose(),u}avgPoolBackprop(t,e,n){const r=new Xl(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return a["F"].castTensor(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let u=0;u<t.rank;u++)u!==e&&(r[s++]=t.shape[u]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)a[e]=u,o[u]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new ud(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Jl(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new ud(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=!0,a=new ud(r,"max",s),i=this.compileAndRun(a,[e]),o=new Jh(r),u=this.compileAndRun(o,[t,i],e.dtype);return i.dispose(),u}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!Du(t.shape,e)&&(null===n.texture||!Du(n.shape,e))){const n=this.packedReshape(t,e);return Object(a["kb"])().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return a["F"].reshapeTensor(t,e)}resizeBilinear(t,e,n,r){const s=Object(a["lb"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fd(t.shape,e,n,r):new pd(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new dd(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new gd(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new md(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:Object(a["Wc"])(t),i=s.shape[0],o=s.shape[1],u=new Zh(i,o,n),l=u.getCustomSetupFunc(r);return this.compileAndRun(u,[s],"int32",l)}oneHot(t,e,n,r){const s=new Qh(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new hh(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new sh(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){a["zd"].assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],o="NHWC"===n?t.shape[3]:t.shape[1],u=s*e,l=i*e,c=o/(e*e),h="NHWC"===n?[r,u,l,c]:[r,c,u,l],d=new ch(h,e,n);return this.compileAndRun(d,[t])}split(t,e,n){return $p(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:o,outputSize:u}=a["F"].calculateShapes(e,t,n),l=[u/i,i],c=t.reshape([s,r]),h=e.reshape([s,i]);if(0===u)return a["F"].reshapeTensor(Object(a["md"])([]),n);const d=Object(a["Fc"])(0),p=new xd(s,r,c.rank,h.rank,o,l),f=this.compileAndRun(p,[h,c,d]);return f.reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,strides:o,outputSize:u}=a["F"].calculateShapes(e,t,n),l=!1,c=new xd(i,s,t.rank,e.rank,o,[u,1],l),h=this.compileAndRun(c,[e,t,r]);return h.reshape(n)}fft(t){const e=!1;return this.fftImpl(t,e)}ifft(t){const e=!0;return this.fftImpl(t,e)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new bh(gh.REAL,t.shape,e),s=new bh(gh.IMAG,t.shape,e),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],i=this.compileAndRun(r,a),o=this.compileAndRun(s,a),u=this.complex(i,o).as2D(t.shape[0],t.shape[1]);return i.dispose(),o.dispose(),u}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,o,u]=a["F"].prepareAndValidate(t,e),l=e.reshape([i,r]),c=t.reshape([t.size/o,o]),h=new vh(r,u,[i,o]),d=this.compileAndRun(h,[c,l]);return d.reshape(s)}fill(t,e,n){if(n=n||a["zd"].inferDtype(e),"string"===n){const r=a["zd"].getArrayFromDType(n,a["zd"].sizeFromShape(t));return r.fill(e),Object(a["kb"])().makeTensor(r,t,n,this)}{const r=new yh(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return a["F"].linspaceImpl(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return Object(a["kb"])().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new Ep(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new td(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[Eu(t.shape),...Au(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Eu(e),...Au(e)],a=new cd(s,n),i=!0,o=this.runWebGLProgram(a,[r],t.dtype,null,i);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=$u(r);let i;i=n?new lh(a):new uh(a);const o=!0,u=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,o);return{dtype:s,shape:r,dataId:u.dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===Vo.DENSE){const e=Ko(t.outputShape);o.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===a["zd"].sizeFromShape(i.shape))return o.values=a["zd"].getTypedArrayFromDType(i.dtype,0),i;const u=[],l=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&a["zd"].sizeFromShape(e.shape)<=Object(a["lb"])().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Du(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=Uh(t,l,c),d=this.getAndSaveBinary(h,()=>Ph(this.gpgpu,t,l,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),Vh(this.gpgpu,d,l,c,r),u.forEach(t=>this.disposeData(t.dataId)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(a["lb"])().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,r,s);return Object(a["kb"])().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(a["lb"])().getBool("IS_TEST")){const t=Object.keys(this.binaryCache);t.forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(a["rd"])(()=>{if(!Object(a["lb"])().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(a["lb"])().getBool("DEBUG");Object(a["lb"])().set("DEBUG",!1);const e=this.abs(Object(a["Fc"])(1e-8)).dataSync()[0];if(Object(a["lb"])().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?Fp:_p}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:u}=e;if(null!=i)return;const l=null!=this.activeTimers;let c;l&&(c=a["zd"].now());let h=e.texShape;if(null==h&&(h=Ru(n,u),e.texShape=h),null!=s){const t=$u(n);let i,o=h[1],d=h[0];const p=s instanceof Uint8Array;u?([o,d]=Xo(h[0],h[1]),i=new mh(t,[d,o],p)):i=new fh(t,[d,o],p);const f=this.makeTensorInfo([d,o],r);this.texData.get(f.dataId).usage=p?Uo.PIXELS:Uo.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,s);const m=!0,g=this.runWebGLProgram(i,[f],r,null,m),b=this.texData.get(g.dataId);e.texture=b.texture,e.texShape=b.texShape,e.isPacked=b.isPacked,e.usage=b.usage,this.disposeData(f.dataId),this.texData.delete(g.dataId),e.values=null,l&&(this.uploadWaitMs+=a["zd"].now()-c)}else{const t=this.acquireTexture(h,o,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=Up(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*a["zd"].bytesPerElement(e)}}function Up(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}
/** @license See the LICENSE file. */const Gp="2.0.0";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(t,e,n){let r=new Oc(ac,t.shape,e.shape);Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new Pc(Cc,t.shape,e.shape,!0));const s=n.runWebGLProgram(r,[t,e],"float32");return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hp={kernelName:a["b"],backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s=e;return qp(n,r,s)}};
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kp{constructor(t){this.variableNames=["A"];const e=Qu(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xp{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Qu(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jp={kernelName:a["c"],backendName:"webgl",kernelFunc:Zp};let Yp;function Zp(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,o="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,l],d=[c,l,i];(u||o)&&(null==Yp&&(Yp=document.createElement("canvas").getContext("2d")),Yp.canvas.width=l,Yp.canvas.height=c,Yp.drawImage(s,0,0,l,c),s=Yp.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Uo.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=Object(a["lb"])().getBool("WEBGL_PACK")?new Xp(d):new Kp(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{maxImpl:Qp,transposeImpl:tf}=s;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ef(t,e,n,r){const[s,i]=t.shape,o=a["F"].computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:s},l=new ld(u,n),c=r.runWebGLProgram(l,[t],e);return 1===c.shape[1]?c:ef(c,e,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(t,e,n){const r=[Eu(t.shape),...Au(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[Eu(e),...Au(e)],i=new cd(a,r),o=!0,u=n.runWebGLProgram(i,[s],t.dtype,null,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}function rf(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||Du(t.shape,e)||null!==r.texture&&Du(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:nf(t,e,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(t,e,n,r){const s=a["zd"].sizeFromShape(e),i=a["zd"].sizeFromShape(t.shape),o=i/s,u=rf(t,[o,s],r),l=ef(u,t.dtype,"max",r);return u.dataId!==t.dataId&&r.disposeData(u.dataId),rf(l,n,r)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class af{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[e[a]];this.outputShape=n,this.rank=n.length;const r=Gl(this.rank),s=of(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}function of(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uf{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Gl(this.rank),s=Ju("rc",this.rank),a=new Array(this.rank);for(let l=0;l<e.length;l++)a[e[l]]=s[l];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lf(t,e,n){const r=Object(a["lb"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uf(t.shape,e):new af(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cf={kernelName:a["e"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s}=e,i=n,o=r.shape.length,u=a["zd"].parseAxisParam(s,r.shape);let l=u;const c=a["F"].getAxesPermutation(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=i.texData.get(p.dataId),e=t.values,n=new Array(o);for(let i=0;i<n.length;i++)n[i]=r.shape[c[i]];const s=tf(e,r.shape,r.dtype,c,n);p=i.makeTensorInfo(n,r.dtype);const a=i.texData.get(p.dataId);a.values=s}else p=lf(r,c,i);l=a["F"].getInnerMostAxes(l.length,o)}a["F"].assertAxesAreInnerMostDims("max",l,o);const[f,m]=a["F"].computeOutAndReduceShapes(p.shape,l);let g;if(d){const t=i.texData.get(p.dataId),e=t.values,n=Qp(e,a["zd"].sizeFromShape(m),f,r.dtype);g=i.makeTensorInfo(f,r.dtype);const s=i.texData.get(g.dataId);s.values=n}else g=sf(p,m,f,i);return h&&i.disposeData(p.dataId),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hf(t,e,n,r){let s=new od(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");s=new od(n,"max",!0,!0,e);const i=r.runWebGLProgram(s,[t],"float32");return[a,i]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const df={kernelName:a["f"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=e,l=n;a["zd"].assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];a["zd"].assert(a["F"].eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=a["F"].computePool2DInfo(r.shape,s,i,c,o),[d,p]=hf(r,u,h,l);return[d,p]}},pf={kernelName:a["g"],backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{a["F"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),d=i,p=o,f=u;return a["Hb"].nonMaxSuppressionV3(c,h,d,p,f)}},ff=a["Hb"].nonMaxSuppressionV5,mf={kernelName:a["h"],backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{a["F"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=n,c=e,h=c.readSync(r.dataId),d=c.readSync(s.dataId),p=i,f=o,m=u,g=l,{selectedIndices:b,selectedScores:y}=ff(h,d,p,f,m,g);return[b,y]}},gf={kernelName:a["j"],backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new Dd(n.shape,bp);return r.runWebGLProgram(s,[n],n.dtype)}},bf={kernelName:a["k"],backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s="return (a - b) * (a - b);",i=e,o=Object(a["lb"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pc(s,n.shape,r.shape):new Oc(s,n.shape,r.shape);return i.compileAndRun(o,[n,r])}},yf={kernelName:a["n"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let l=0;l<o.length;l++)o[l]=r.shape[s[l]];let u;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId),e=t.values,n=tf(e,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype);const i=a.texData.get(u.dataId);i.values=n}else u=lf(r,s,a);return u}},xf=[cf,Jp,Hp,pf,mf,gf,bf,yf,df];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const vf of xf)Object(a["yc"])(vf);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["eb"].isBrowser()&&Object(a["xc"])("webgl",()=>new Vp,2);const wf="2.0.0";
/** @license See the LICENSE file. */a["Cd"]},d28b:function(t,e,n){var r=n("746f");r("iterator")},d303:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function s(t){return r[t]}},d556:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]},d81d:function(t,e,n){"use strict";var r=n("23e7"),s=n("b727").map,a=n("1dde"),i=n("ae40"),o=a("map"),u=i("map");r({target:"Array",proto:!0,forced:!o||!u},{map:function(t){return s(this,t,arguments.length>1?arguments[1]:void 0)}})},dbf3:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},dc14:function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n("fa11"),s=n("c388"),a=n("4cfc");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class i extends s["a"]{decodeUTF8(){return new o(this)}}class o extends a["a"]{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends s["b"]{constructor(t){if(super(),this.upstream=t,Object(r["lb"])().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(4);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,s;return!e.done&&(n=e.value,s=Object(r["lb"])().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(s),!0)}}}).call(this,n("b639").Buffer)},ddb0:function(t,e,n){var r=n("da84"),s=n("fdbc"),a=n("e260"),i=n("9112"),o=n("b622"),u=o("iterator"),l=o("toStringTag"),c=a.values;for(var h in s){var d=r[h],p=d&&d.prototype;if(p){if(p[u]!==c)try{i(p,u,c)}catch(m){p[u]=c}if(p[l]||i(p,l,h),s[h])for(var f in a)if(p[f]!==a[f])try{i(p,f,a[f])}catch(m){p[f]=a[f]}}}},df7c:function(t,e,n){(function(t){function n(t,e){for(var n=0,r=t.length-1;r>=0;r--){var s=t[r];"."===s?t.splice(r,1):".."===s?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function r(t){"string"!==typeof t&&(t+="");var e,n=0,r=-1,s=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!s){n=e+1;break}}else-1===r&&(s=!1,r=e+1);return-1===r?"":t.slice(n,r)}function s(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}e.resolve=function(){for(var e="",r=!1,a=arguments.length-1;a>=-1&&!r;a--){var i=a>=0?arguments[a]:t.cwd();if("string"!==typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,r="/"===i.charAt(0))}return e=n(s(e.split("/"),(function(t){return!!t})),!r).join("/"),(r?"/":"")+e||"."},e.normalize=function(t){var r=e.isAbsolute(t),i="/"===a(t,-1);return t=n(s(t.split("/"),(function(t){return!!t})),!r).join("/"),t||r||(t="."),t&&i&&(t+="/"),(r?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(s(t,(function(t,e){if("string"!==typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},e.relative=function(t,n){function r(t){for(var e=0;e<t.length;e++)if(""!==t[e])break;for(var n=t.length-1;n>=0;n--)if(""!==t[n])break;return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var s=r(t.split("/")),a=r(n.split("/")),i=Math.min(s.length,a.length),o=i,u=0;u<i;u++)if(s[u]!==a[u]){o=u;break}var l=[];for(u=o;u<s.length;u++)l.push("..");return l=l.concat(a.slice(o)),l.join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){if("string"!==typeof t&&(t+=""),0===t.length)return".";for(var e=t.charCodeAt(0),n=47===e,r=-1,s=!0,a=t.length-1;a>=1;--a)if(e=t.charCodeAt(a),47===e){if(!s){r=a;break}}else s=!1;return-1===r?n?"/":".":n&&1===r?"/":t.slice(0,r)},e.basename=function(t,e){var n=r(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){"string"!==typeof t&&(t+="");for(var e=-1,n=0,r=-1,s=!0,a=0,i=t.length-1;i>=0;--i){var o=t.charCodeAt(i);if(47!==o)-1===r&&(s=!1,r=i+1),46===o?-1===e?e=i:1!==a&&(a=1):-1!==e&&(a=-1);else if(!s){n=i+1;break}}return-1===e||-1===r||0===a||1===a&&e===r-1&&e===n+1?"":t.slice(e,r)};var a="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,n("4362"))},e01a:function(t,e,n){"use strict";var r=n("23e7"),s=n("83ab"),a=n("da84"),i=n("5135"),o=n("861d"),u=n("9bf2").f,l=n("e893"),c=a.Symbol;if(s&&"function"==typeof c&&(!("description"in c.prototype)||void 0!==c().description)){var h={},d=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new c(t):void 0===t?c():c(t);return""===t&&(h[e]=!0),e};l(d,c);var p=d.prototype=c.prototype;p.constructor=d;var f=p.toString,m="Symbol(test)"==String(c("test")),g=/^Symbol\((.*)\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var t=o(this)?this.valueOf():this,e=f.call(t);if(i(h,t))return"";var n=m?e.slice(7,-1):e.replace(g,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:d})}},e3db:function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},e538:function(t,e,n){var r=n("b622");e.f=r},e8b5:function(t,e,n){var r=n("c6b6");t.exports=Array.isArray||function(t){return"Array"==r(t)}},eb7e:function(t,e,n){"use strict";n.r(e),n.d(e,"shuffle",(function(){return s})),n.d(e,"clamp",(function(){return a})),n.d(e,"nearestLargerEven",(function(){return i})),n.d(e,"sum",(function(){return o})),n.d(e,"randUniform",(function(){return u})),n.d(e,"distSquared",(function(){return l})),n.d(e,"assert",(function(){return c})),n.d(e,"assertShapesMatch",(function(){return h})),n.d(e,"assertNonNull",(function(){return d})),n.d(e,"flatten",(function(){return p})),n.d(e,"sizeFromShape",(function(){return f})),n.d(e,"isScalarShape",(function(){return m})),n.d(e,"arraysEqual",(function(){return g})),n.d(e,"isInt",(function(){return b})),n.d(e,"tanh",(function(){return y})),n.d(e,"sizeToSquarishShape",(function(){return x})),n.d(e,"createShuffledIndices",(function(){return w})),n.d(e,"rightPad",(function(){return v})),n.d(e,"repeatedTry",(function(){return O})),n.d(e,"inferFromImplicitShape",(function(){return S})),n.d(e,"parseAxisParam",(function(){return C})),n.d(e,"squeezeShape",(function(){return I})),n.d(e,"getTypedArrayFromDType",(function(){return k})),n.d(e,"getArrayFromDType",(function(){return N})),n.d(e,"checkConversionForErrors",(function(){return E})),n.d(e,"isValidDtype",(function(){return A})),n.d(e,"hasEncodingLoss",(function(){return $})),n.d(e,"isTypedArray",(function(){return R})),n.d(e,"bytesPerElement",(function(){return T})),n.d(e,"bytesFromStringArray",(function(){return D})),n.d(e,"isString",(function(){return F})),n.d(e,"isBoolean",(function(){return _})),n.d(e,"isNumber",(function(){return j})),n.d(e,"inferDtype",(function(){return z})),n.d(e,"isFunction",(function(){return M})),n.d(e,"nearestDivisor",(function(){return L})),n.d(e,"computeStrides",(function(){return B})),n.d(e,"toTypedArray",(function(){return P})),n.d(e,"toNestedArray",(function(){return V})),n.d(e,"makeOnesTypedArray",(function(){return G})),n.d(e,"makeZerosTypedArray",(function(){return q})),n.d(e,"now",(function(){return H})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return K})),n.d(e,"fetch",(function(){return X})),n.d(e,"encodeString",(function(){return J})),n.d(e,"decodeString",(function(){return Y})),n.d(e,"locToIndex",(function(){return Z})),n.d(e,"indexToLoc",(function(){return Q}));var r=n("b333");
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t){let e=t.length,n=0,r=0;while(e>0)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2===0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function u(t,e){const n=Math.random();return e*n+(1-n)*t}function l(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function c(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function h(t,e,n=""){c(g(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||R(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t){return 0===t.length}function g(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function y(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function x(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return s(e),e}function v(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function O(t,e=(t=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function S(t,e){let n=1,r=-1;for(let a=0;a<t.length;++a)if(t[a]>=0)n*=t[a];else if(-1===t[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(t[a]<0)throw Error(`Shapes can not be < 0. Found ${t[a]} at dim ${a}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function C(t,e){const n=e.length;return t=null==t?e.map((t,e)=>e):[].concat(t),c(t.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function I(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:C(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(null!=a){if(a[i]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),a[i]<=o&&i++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function k(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function E(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function A(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function $(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function R(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function T(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function D(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function F(t){return"string"===typeof t||t instanceof String}function _(t){return"boolean"===typeof t}function j(t){return"number"===typeof t}function z(t){return Array.isArray(t)?z(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":j(t)?"float32":F(t)?"string":_(t)?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function B(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function P(t,e,n){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=p(t)),n&&E(t,e),U(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function W(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],a=e.slice(1),i=a.reduce((t,e)=>t*e);for(let e=0;e<s;e++)r[e]=W(t+e*i,a,n)}return r}function V(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size.`);return W(0,t,e)}function U(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}function G(t,e){const n=q(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function q(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function H(){return Object(r["b"])().platform.now()}function K(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function X(t,e){return Object(r["b"])().platform.fetch(t,e)}function J(t,e="utf-8"){return e=e||"utf-8",Object(r["b"])().platform.encode(t,e)}function Y(t,e="utf-8"){return e=e||"utf-8",Object(r["b"])().platform.decode(t,e)}function Z(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function Q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}},f011:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},f490:function(t,e,n){"use strict";(function(t,r){
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let s;function a(){if(null==s){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function i(){const t=a();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}function o(t,e){const n=i();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return o}))}).call(this,n("c8ba"),n("4362"))},f8bb:function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return S})),n.d(e,"i",(function(){return k})),n.d(e,"c",(function(){return N})),n.d(e,"f",(function(){return E})),n.d(e,"e",(function(){return $})),n.d(e,"d",(function(){return R})),n.d(e,"k",(function(){return D})),n.d(e,"g",(function(){return F})),n.d(e,"h",(function(){return _})),n.d(e,"j",(function(){return j})),n.d(e,"b",(function(){return z}));var r=n("fa11"),s=n("46cc"),a=n("d303"),i=n("526c"),o=n("aeab"),u=n("c8ad"),l=n("5874"),c=n("9489"),h=n("04b8"),d=n("f011"),p=n("d556"),f=n("3d50"),m=n("29d8"),g=n("a80f"),b=n("673d"),y=n("3bfc"),x=n("31bb"),w=n("dbf3"),v=n("113e"),O=n("9e7b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class S{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[o,u,l,c,h,d,p,g,m,f,b,y,x,w,v,O],e=[].concat(...t.map(t=>t.json));this.opMappers=e.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")&&r.push(t[e.name]),"Const"===e.op&&s.push(t[e.name]),t),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(a);return h.forEach(t=>{const e=a[t];e.inputNames.forEach(t=>{const[n]=Object(i["a"])(t);e.inputs.push(a[n]),a[n].children.push(e)})}),0===Object.keys(c).length?h.forEach(t=>{const e=a[t];0===e.children.length&&u.push(e)}):Object.keys(c).forEach(t=>{const[e]=Object(i["a"])(t),n=a[e];null!=n&&(n.signatureKey=c[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i["a"])(t),n=a[e];n&&(n.signatureKey=l[t],o.push(n))}):o=r,{nodes:a,inputs:o,outputs:u,weights:s,placeholders:r,signature:e}}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(a["a"])(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let s=void 0;switch(n.type){case"string":s=k(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=k(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=_(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=E(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=F(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=N(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=N(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=z(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=D(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=j(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=$(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=R(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e},{})),n}}function C(e){const n=Object(r["lb"])().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function I(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):C(t);return e?n:n.toLowerCase()}function k(t,e,n,r=!1){const s=t[e];return null!=s?I(s.s,r):n}function N(t,e,n){const r=t[e];return r?r.b:n}function E(t,e,n){const r=t[e]||{},s=null!=r["i"]?r["i"]:null!=r["f"]?r["f"]:n;return"number"===typeof s?s:parseInt(s,10)}function A(t){switch("string"===typeof t&&(t=s["a"][t]),t){case s["a"].DT_FLOAT:return"float32";case s["a"].DT_INT32:case s["a"].DT_INT64:case s["a"].DT_INT8:case s["a"].DT_UINT8:return"int32";case s["a"].DT_BOOL:return"bool";case s["a"].DT_DOUBLE:return"float32";case s["a"].DT_STRING:return"string";default:return null}}function $(t,e,n){const r=t[e];return r&&r.type?A(r.type):n}function R(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>A(t)):n}function T(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function D(t,e,n){const r=t[e];return r&&r.shape?T(r.shape):n}function F(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function _(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(t=>I(t,r)):n}function j(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>T(t)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("b639").Buffer)},fa11:function(t,e,n){"use strict";n.d(e,"i",(function(){return Xh})),n.d(e,"l",(function(){return ft["a"]})),n.d(e,"m",(function(){return ft["b"]})),n.d(e,"jd",(function(){return rd["a"]})),n.d(e,"yd",(function(){return rd["b"]})),n.d(e,"r",(function(){return yn})),n.d(e,"s",(function(){return _i})),n.d(e,"K",(function(){return Ts})),n.d(e,"G",(function(){return Li})),n.d(e,"H",(function(){return Pi})),n.d(e,"I",(function(){return Vi})),n.d(e,"J",(function(){return Gi})),n.d(e,"R",(function(){return Et})),n.d(e,"S",(function(){return Yi})),n.d(e,"T",(function(){return Qi})),n.d(e,"U",(function(){return eo})),n.d(e,"V",(function(){return ro})),n.d(e,"W",(function(){return ao})),n.d(e,"X",(function(){return Ke})),n.d(e,"Y",(function(){return oo})),n.d(e,"Z",(function(){return lo})),n.d(e,"cb",(function(){return fo})),n.d(e,"db",(function(){return go})),n.d(e,"gb",(function(){return ds})),n.d(e,"hb",(function(){return Do})),n.d(e,"mb",(function(){return zo})),n.d(e,"rb",(function(){return Lo})),n.d(e,"zb",(function(){return Po})),n.d(e,"Ab",(function(){return Vo})),n.d(e,"Jb",(function(){return Go})),n.d(e,"Kb",(function(){return Ho})),n.d(e,"Nb",(function(){return Xo})),n.d(e,"Ub",(function(){return Kt})),n.d(e,"Vb",(function(){return Yo})),n.d(e,"hc",(function(){return Qo})),n.d(e,"kc",(function(){return eu})),n.d(e,"lc",(function(){return wi})),n.d(e,"oc",(function(){return Ls})),n.d(e,"sc",(function(){return vu})),n.d(e,"tc",(function(){return Su})),n.d(e,"Ic",(function(){return Iu})),n.d(e,"Yc",(function(){return Yt})),n.d(e,"ad",(function(){return Ce})),n.d(e,"cd",(function(){return fs})),n.d(e,"dd",(function(){return Nu})),n.d(e,"hd",(function(){return bs})),n.d(e,"sd",(function(){return xs})),n.d(e,"wd",(function(){return Au})),n.d(e,"Q",(function(){return Uu["a"]})),n.d(e,"vc",(function(){return Uu["c"]})),n.d(e,"Cb",(function(){return Uu["b"]})),n.d(e,"Bc",(function(){return Ju})),n.d(e,"Wb",(function(){return ml})),n.d(e,"C",(function(){return gl})),n.d(e,"Xb",(function(){return yl})),n.d(e,"D",(function(){return xl})),n.d(e,"Yb",(function(){return wl})),n.d(e,"Qc",(function(){return Zs})),n.d(e,"Rc",(function(){return Qs})),n.d(e,"Sc",(function(){return ta})),n.d(e,"Tc",(function(){return ea})),n.d(e,"Uc",(function(){return na})),n.d(e,"o",(function(){return Qn})),n.d(e,"p",(function(){return tr})),n.d(e,"q",(function(){return er})),n.d(e,"x",(function(){return nr})),n.d(e,"y",(function(){return rr})),n.d(e,"z",(function(){return sr})),n.d(e,"B",(function(){return ar})),n.d(e,"O",(function(){return ir})),n.d(e,"P",(function(){return or})),n.d(e,"ab",(function(){return ur})),n.d(e,"bb",(function(){return lr})),n.d(e,"nb",(function(){return cr})),n.d(e,"ob",(function(){return hr})),n.d(e,"qb",(function(){return dr})),n.d(e,"ub",(function(){return pr})),n.d(e,"Ob",(function(){return fr})),n.d(e,"Pb",(function(){return mr})),n.d(e,"ic",(function(){return br})),n.d(e,"wc",(function(){return yr})),n.d(e,"Dc",(function(){return xr})),n.d(e,"Ec",(function(){return wr})),n.d(e,"Mc",(function(){return vr})),n.d(e,"Nc",(function(){return Or})),n.d(e,"Oc",(function(){return kr})),n.d(e,"Pc",(function(){return Nr})),n.d(e,"Xc",(function(){return Er})),n.d(e,"bd",(function(){return Ar})),n.d(e,"kd",(function(){return Rr})),n.d(e,"ld",(function(){return Tr})),n.d(e,"t",(function(){return de})),n.d(e,"u",(function(){return pe})),n.d(e,"v",(function(){return fe})),n.d(e,"w",(function(){return me})),n.d(e,"ac",(function(){return be})),n.d(e,"cc",(function(){return ye})),n.d(e,"fc",(function(){return xe})),n.d(e,"id",(function(){return we})),n.d(e,"rc",(function(){return ve})),n.d(e,"A",(function(){return Jr})),n.d(e,"vb",(function(){return Zr})),n.d(e,"Zb",(function(){return Qr})),n.d(e,"dc",(function(){return es})),n.d(e,"ec",(function(){return rs})),n.d(e,"gc",(function(){return as})),n.d(e,"pc",(function(){return os})),n.d(e,"jb",(function(){return Pl})),n.d(e,"Ib",(function(){return Wl})),n.d(e,"qc",(function(){return Vl})),n.d(e,"zc",(function(){return Ul})),n.d(e,"Hc",(function(){return ql})),n.d(e,"Rb",(function(){return ko})),n.d(e,"Sb",(function(){return No})),n.d(e,"Tb",(function(){return Eo})),n.d(e,"Dd",(function(){return $o})),n.d(e,"Ed",(function(){return Ro})),n.d(e,"M",(function(){return zt})),n.d(e,"N",(function(){return Lt})),n.d(e,"pb",(function(){return Pt})),n.d(e,"Ac",(function(){return Wt})),n.d(e,"ed",(function(){return Vt})),n.d(e,"fd",(function(){return Ut})),n.d(e,"xd",(function(){return Gt})),n.d(e,"Lc",(function(){return qt})),n.d(e,"tb",(function(){return kt["a"]})),n.d(e,"Mb",(function(){return kt["b"]})),n.d(e,"mc",(function(){return kt["c"]})),n.d(e,"uc",(function(){return kt["e"]})),n.d(e,"Fc",(function(){return kt["f"]})),n.d(e,"md",(function(){return kt["g"]})),n.d(e,"nd",(function(){return kt["h"]})),n.d(e,"od",(function(){return kt["i"]})),n.d(e,"pd",(function(){return kt["k"]})),n.d(e,"Ad",(function(){return kt["n"]})),n.d(e,"Fd",(function(){return kt["o"]})),n.d(e,"nc",(function(){return kt["d"]})),n.d(e,"Gd",(function(){return kt["p"]})),n.d(e,"vd",(function(){return Ns})),n.d(e,"Wc",(function(){return Xl})),n.d(e,"Qb",(function(){return Jl})),n.d(e,"xb",(function(){return Bu})),n.d(e,"gd",(function(){return oc})),n.d(e,"td",(function(){return lc})),n.d(e,"Gc",(function(){return hc})),n.d(e,"sb",(function(){return gc})),n.d(e,"Bb",(function(){return bc})),n.d(e,"Cc",(function(){return yc})),n.d(e,"Fb",(function(){return xc})),n.d(e,"Zc",(function(){return Oc})),n.d(e,"yb",(function(){return Cc})),n.d(e,"ib",(function(){return Nc})),n.d(e,"Db",(function(){return d})),n.d(e,"Lb",(function(){return h})),n.d(e,"wb",(function(){return p})),n.d(e,"ud",(function(){return ad})),n.d(e,"kb",(function(){return ln})),n.d(e,"bc",(function(){return cn})),n.d(e,"rd",(function(){return hn})),n.d(e,"fb",(function(){return dn})),n.d(e,"Gb",(function(){return pn})),n.d(e,"Kc",(function(){return fn})),n.d(e,"xc",(function(){return mn})),n.d(e,"E",(function(){return gn})),n.d(e,"yc",(function(){return aa["e"]})),n.d(e,"Bd",(function(){return Qt})),n.d(e,"lb",(function(){return on["b"]})),n.d(e,"Cd",(function(){return Di})),n.d(e,"jc",(function(){return od})),n.d(e,"L",(function(){return a})),n.d(e,"Eb",(function(){return s})),n.d(e,"Jc",(function(){return i})),n.d(e,"zd",(function(){return pt})),n.d(e,"F",(function(){return m})),n.d(e,"qd",(function(){return ht})),n.d(e,"Vc",(function(){return r})),n.d(e,"eb",(function(){return Td})),n.d(e,"Hb",(function(){return g})),n.d(e,"d",(function(){return Ld})),n.d(e,"a",(function(){return Md})),n.d(e,"b",(function(){return _})),n.d(e,"f",(function(){return G})),n.d(e,"g",(function(){return H})),n.d(e,"h",(function(){return K})),n.d(e,"e",(function(){return X})),n.d(e,"k",(function(){return tt})),n.d(e,"j",(function(){return et})),n.d(e,"n",(function(){return st})),n.d(e,"c",(function(){return at}));var r={};n.r(r),n.d(r,"assertParamsValid",(function(){return Bs})),n.d(r,"maskToAxes",(function(){return Ps})),n.d(r,"computeOutShape",(function(){return Ws})),n.d(r,"startForAxis",(function(){return Vs})),n.d(r,"stopForAxis",(function(){return Us})),n.d(r,"isSliceContinous",(function(){return Gs})),n.d(r,"computeFlatOffset",(function(){return qs}));var s={};n.r(s),n.d(s,"copyModel",(function(){return wa})),n.d(s,"listModels",(function(){return ya})),n.d(s,"moveModel",(function(){return va})),n.d(s,"removeModel",(function(){return xa})),n.d(s,"browserFiles",(function(){return ei})),n.d(s,"browserHTTPRequest",(function(){return fi})),n.d(s,"concatenateArrayBuffers",(function(){return ua["d"]})),n.d(s,"decodeWeights",(function(){return ua["e"]})),n.d(s,"encodeWeights",(function(){return ua["f"]})),n.d(s,"fromMemory",(function(){return bi})),n.d(s,"getLoadHandlers",(function(){return pa})),n.d(s,"getModelArtifactsInfoForJSON",(function(){return ua["g"]})),n.d(s,"getSaveHandlers",(function(){return da})),n.d(s,"http",(function(){return pi})),n.d(s,"isHTTPScheme",(function(){return hi})),n.d(s,"loadWeights",(function(){return ai})),n.d(s,"registerLoadRouter",(function(){return ha})),n.d(s,"registerSaveRouter",(function(){return ca})),n.d(s,"weightsLoaderFactory",(function(){return ii})),n.d(s,"withSaveHandler",(function(){return yi}));var a={};n.r(a),n.d(a,"toPixels",(function(){return Ci})),n.d(a,"fromPixels",(function(){return Ii}));var i={};n.r(i),n.d(i,"Serializable",(function(){return $i})),n.d(i,"SerializationMap",(function(){return Ri})),n.d(i,"registerClass",(function(){return Ti}));var o={};n.r(o),n.d(o,"segOpComputeOptimalWindowSize",(function(){return Tu})),n.d(o,"computeOutShape",(function(){return Du})),n.d(o,"collectGatherOpShapeInfo",(function(){return Fu}));var u={};n.r(u),n.d(u,"fft",(function(){return gc})),n.d(u,"ifft",(function(){return bc})),n.d(u,"rfft",(function(){return yc})),n.d(u,"irfft",(function(){return xc}));var l={};n.r(l),n.d(l,"hannWindow",(function(){return Fc})),n.d(l,"hammingWindow",(function(){return _c})),n.d(l,"frame",(function(){return jc})),n.d(l,"stft",(function(){return zc}));var c={};n.r(c),n.d(c,"Reduction",(function(){return Bc})),n.d(c,"absoluteDifference",(function(){return Zc})),n.d(c,"computeWeightedLoss",(function(){return Qc})),n.d(c,"cosineDistance",(function(){return th})),n.d(c,"hingeLoss",(function(){return eh})),n.d(c,"huberLoss",(function(){return nh})),n.d(c,"logLoss",(function(){return rh})),n.d(c,"meanSquaredError",(function(){return sh})),n.d(c,"sigmoidCrossEntropy",(function(){return ah})),n.d(c,"softmaxCrossEntropy",(function(){return ih}));var h={};n.r(h),n.d(h,"bandPart",(function(){return hh})),n.d(h,"gramSchmidt",(function(){return dh})),n.d(h,"qr",(function(){return ph}));var d={};n.r(d),n.d(d,"nonMaxSuppression",(function(){return kh})),n.d(d,"resizeBilinear",(function(){return Dh})),n.d(d,"resizeNearestNeighbor",(function(){return Fh})),n.d(d,"nonMaxSuppressionAsync",(function(){return _h})),n.d(d,"nonMaxSuppressionWithScore",(function(){return jh})),n.d(d,"nonMaxSuppressionWithScoreAsync",(function(){return zh})),n.d(d,"cropAndResize",(function(){return Mh}));var p={};n.r(p),n.d(p,"matMul",(function(){return qh})),n.d(p,"conv2d",(function(){return Hh})),n.d(p,"depthwiseConv2d",(function(){return Kh}));var f={};n.r(f),n.d(f,"add",(function(){return yn})),n.d(f,"addN",(function(){return _i})),n.d(f,"batchToSpaceND",(function(){return Ts})),n.d(f,"batchNorm",(function(){return Li})),n.d(f,"batchNorm2d",(function(){return Pi})),n.d(f,"batchNorm3d",(function(){return Vi})),n.d(f,"batchNorm4d",(function(){return Gi})),n.d(f,"broadcastTo",(function(){return Xi})),n.d(f,"clone",(function(){return Hi})),n.d(f,"concat",(function(){return Et})),n.d(f,"concat1d",(function(){return Yi})),n.d(f,"concat2d",(function(){return Qi})),n.d(f,"concat3d",(function(){return eo})),n.d(f,"concat4d",(function(){return ro})),n.d(f,"conv1d",(function(){return ao})),n.d(f,"conv2d",(function(){return Ke})),n.d(f,"conv2dTranspose",(function(){return oo})),n.d(f,"conv3d",(function(){return lo})),n.d(f,"conv3dTranspose",(function(){return ho})),n.d(f,"depthToSpace",(function(){return fo})),n.d(f,"depthwiseConv2d",(function(){return go})),n.d(f,"diag",(function(){return yo})),n.d(f,"div",(function(){return ds})),n.d(f,"divNoNan",(function(){return Do})),n.d(f,"dot",(function(){return _o})),n.d(f,"equal",(function(){return zo})),n.d(f,"eye",(function(){return Lo})),n.d(f,"greater",(function(){return Po})),n.d(f,"greaterEqual",(function(){return Vo})),n.d(f,"less",(function(){return Go})),n.d(f,"lessEqual",(function(){return Ho})),n.d(f,"localResponseNormalization",(function(){return Xo})),n.d(f,"matMul",(function(){return Kt})),n.d(f,"max",(function(){return Yo})),n.d(f,"multinomial",(function(){return Qo})),n.d(f,"notEqual",(function(){return eu})),n.d(f,"oneHot",(function(){return wi})),n.d(f,"outerProduct",(function(){return ru})),n.d(f,"pad",(function(){return Ls})),n.d(f,"pad1d",(function(){return au})),n.d(f,"pad2d",(function(){return ou})),n.d(f,"pad3d",(function(){return lu})),n.d(f,"pad4d",(function(){return hu})),n.d(f,"rand",(function(){return pu})),n.d(f,"randomGamma",(function(){return xu})),n.d(f,"randomNormal",(function(){return vu})),n.d(f,"randomUniform",(function(){return Su})),n.d(f,"separableConv2d",(function(){return Iu})),n.d(f,"spaceToBatchND",(function(){return Yt})),n.d(f,"split",(function(){return Ce})),n.d(f,"square",(function(){return fs})),n.d(f,"squaredDifference",(function(){return Nu})),n.d(f,"sub",(function(){return bs})),n.d(f,"tile",(function(){return xs})),n.d(f,"truncatedNormal",(function(){return Au})),n.d(f,"booleanMaskAsync",(function(){return Vu})),n.d(f,"complex",(function(){return Uu["a"]})),n.d(f,"real",(function(){return Uu["c"]})),n.d(f,"imag",(function(){return Uu["b"]})),n.d(f,"reverse",(function(){return Ju})),n.d(f,"reverse1d",(function(){return Yu})),n.d(f,"reverse2d",(function(){return Zu})),n.d(f,"reverse3d",(function(){return Qu})),n.d(f,"reverse4d",(function(){return tl})),n.d(f,"maxPool",(function(){return ml})),n.d(f,"avgPool",(function(){return gl})),n.d(f,"pool",(function(){return bl})),n.d(f,"maxPool3d",(function(){return yl})),n.d(f,"avgPool3d",(function(){return xl})),n.d(f,"maxPoolWithArgmax",(function(){return wl})),n.d(f,"slice",(function(){return Zs})),n.d(f,"slice1d",(function(){return Qs})),n.d(f,"slice2d",(function(){return ta})),n.d(f,"slice3d",(function(){return ea})),n.d(f,"slice4d",(function(){return na})),n.d(f,"abs",(function(){return Qn})),n.d(f,"acos",(function(){return tr})),n.d(f,"acosh",(function(){return er})),n.d(f,"asin",(function(){return nr})),n.d(f,"asinh",(function(){return rr})),n.d(f,"atan",(function(){return sr})),n.d(f,"atanh",(function(){return ar})),n.d(f,"ceil",(function(){return ir})),n.d(f,"clipByValue",(function(){return or})),n.d(f,"cos",(function(){return ur})),n.d(f,"cosh",(function(){return lr})),n.d(f,"erf",(function(){return cr})),n.d(f,"exp",(function(){return hr})),n.d(f,"expm1",(function(){return dr})),n.d(f,"floor",(function(){return pr})),n.d(f,"log",(function(){return fr})),n.d(f,"log1p",(function(){return mr})),n.d(f,"logSigmoid",(function(){return gr})),n.d(f,"neg",(function(){return br})),n.d(f,"reciprocal",(function(){return yr})),n.d(f,"round",(function(){return xr})),n.d(f,"rsqrt",(function(){return wr})),n.d(f,"sigmoid",(function(){return vr})),n.d(f,"sign",(function(){return Or})),n.d(f,"isNaN",(function(){return Sr})),n.d(f,"isInf",(function(){return Cr})),n.d(f,"isFinite",(function(){return Ir})),n.d(f,"sin",(function(){return kr})),n.d(f,"sinh",(function(){return Nr})),n.d(f,"softplus",(function(){return Er})),n.d(f,"sqrt",(function(){return Ar})),n.d(f,"step",(function(){return $r})),n.d(f,"tan",(function(){return Rr})),n.d(f,"tanh",(function(){return Tr})),n.d(f,"all",(function(){return de})),n.d(f,"any",(function(){return pe})),n.d(f,"argMax",(function(){return fe})),n.d(f,"argMin",(function(){return me})),n.d(f,"logSumExp",(function(){return ge})),n.d(f,"mean",(function(){return be})),n.d(f,"min",(function(){return ye})),n.d(f,"moments",(function(){return xe})),n.d(f,"sum",(function(){return we})),n.d(f,"prod",(function(){return ve})),n.d(f,"equalStrict",(function(){return Nl})),n.d(f,"greaterEqualStrict",(function(){return El})),n.d(f,"greaterStrict",(function(){return Al})),n.d(f,"lessEqualStrict",(function(){return $l})),n.d(f,"lessStrict",(function(){return Rl})),n.d(f,"notEqualStrict",(function(){return Tl})),n.d(f,"addStrict",(function(){return Xr})),n.d(f,"atan2",(function(){return Jr})),n.d(f,"divStrict",(function(){return Yr})),n.d(f,"floorDiv",(function(){return Zr})),n.d(f,"maximum",(function(){return Qr})),n.d(f,"maximumStrict",(function(){return ts})),n.d(f,"minimum",(function(){return es})),n.d(f,"minimumStrict",(function(){return ns})),n.d(f,"mod",(function(){return rs})),n.d(f,"modStrict",(function(){return ss})),n.d(f,"mul",(function(){return as})),n.d(f,"mulStrict",(function(){return is})),n.d(f,"pow",(function(){return os})),n.d(f,"powStrict",(function(){return us})),n.d(f,"squaredDifferenceStrict",(function(){return ls})),n.d(f,"subStrict",(function(){return cs})),n.d(f,"elu",(function(){return Pl})),n.d(f,"leakyRelu",(function(){return Wl})),n.d(f,"prelu",(function(){return Vl})),n.d(f,"relu",(function(){return Ul})),n.d(f,"relu6",(function(){return Gl})),n.d(f,"selu",(function(){return ql})),n.d(f,"logicalAnd",(function(){return ko})),n.d(f,"logicalNot",(function(){return No})),n.d(f,"logicalOr",(function(){return Eo})),n.d(f,"logicalXor",(function(){return Ao})),n.d(f,"where",(function(){return $o})),n.d(f,"whereAsync",(function(){return Ro})),n.d(f,"buffer",(function(){return zt})),n.d(f,"print",(function(){return Mt})),n.d(f,"cast",(function(){return Lt})),n.d(f,"cumsum",(function(){return Bt})),n.d(f,"expandDims",(function(){return Pt})),n.d(f,"reshape",(function(){return Wt})),n.d(f,"squeeze",(function(){return Vt})),n.d(f,"stack",(function(){return Ut})),n.d(f,"unstack",(function(){return Gt})),n.d(f,"setdiff1dAsync",(function(){return qt})),n.d(f,"fill",(function(){return kt["a"]})),n.d(f,"linspace",(function(){return kt["b"]})),n.d(f,"ones",(function(){return kt["c"]})),n.d(f,"range",(function(){return kt["e"]})),n.d(f,"scalar",(function(){return kt["f"]})),n.d(f,"tensor",(function(){return kt["g"]})),n.d(f,"tensor1d",(function(){return kt["h"]})),n.d(f,"tensor2d",(function(){return kt["i"]})),n.d(f,"tensor3d",(function(){return kt["j"]})),n.d(f,"tensor4d",(function(){return kt["k"]})),n.d(f,"tensor5d",(function(){return kt["l"]})),n.d(f,"tensor6d",(function(){return kt["m"]})),n.d(f,"variable",(function(){return kt["n"]})),n.d(f,"zeros",(function(){return kt["o"]})),n.d(f,"onesLike",(function(){return kt["d"]})),n.d(f,"zerosLike",(function(){return kt["p"]})),n.d(f,"transpose",(function(){return Ns})),n.d(f,"softmax",(function(){return Xl})),n.d(f,"logSoftmax",(function(){return Jl})),n.d(f,"norm",(function(){return Ql})),n.d(f,"gather",(function(){return Bu})),n.d(f,"unsortedSegmentSum",(function(){return Pu})),n.d(f,"basicLSTMCell",(function(){return nc})),n.d(f,"multiRNNCell",(function(){return rc})),n.d(f,"movingAverage",(function(){return ac})),n.d(f,"stridedSlice",(function(){return oc})),n.d(f,"topk",(function(){return lc})),n.d(f,"scatterND",(function(){return hc})),n.d(f,"fft",(function(){return gc})),n.d(f,"ifft",(function(){return bc})),n.d(f,"rfft",(function(){return yc})),n.d(f,"irfft",(function(){return xc})),n.d(f,"sparseToDense",(function(){return Oc})),n.d(f,"gatherND",(function(){return Cc})),n.d(f,"dropout",(function(){return Nc})),n.d(f,"hannWindow",(function(){return Fc})),n.d(f,"hammingWindow",(function(){return _c})),n.d(f,"frame",(function(){return jc})),n.d(f,"stft",(function(){return zc})),n.d(f,"inTopKAsync",(function(){return Lc})),n.d(f,"op",(function(){return It["a"]})),n.d(f,"image",(function(){return d})),n.d(f,"linalg",(function(){return h})),n.d(f,"losses",(function(){return c})),n.d(f,"spectral",(function(){return u})),n.d(f,"fused",(function(){return p})),n.d(f,"signal",(function(){return l}));var m={};n.r(m),n.d(m,"axesAreInnerMostDims",(function(){return mt})),n.d(m,"combineLocations",(function(){return gt})),n.d(m,"computeOutAndReduceShapes",(function(){return bt})),n.d(m,"expandShapeToKeepDim",(function(){return yt})),n.d(m,"assertAxesAreInnerMostDims",(function(){return xt})),n.d(m,"getAxesPermutation",(function(){return wt})),n.d(m,"getUndoAxesPermutation",(function(){return vt})),n.d(m,"getInnerMostAxes",(function(){return Ot})),n.d(m,"getBroadcastDims",(function(){return it})),n.d(m,"getReductionAxes",(function(){return ot})),n.d(m,"assertAndGetBroadcastShape",(function(){return ut})),n.d(m,"assertParamsConsistent",(function(){return St})),n.d(m,"computeOutShape",(function(){return Ct})),n.d(m,"computePool2DInfo",(function(){return ke})),n.d(m,"computePool3DInfo",(function(){return Ne})),n.d(m,"computeConv2DInfo",(function(){return Ee})),n.d(m,"computeConv3DInfo",(function(){return Ae})),n.d(m,"computeDefaultPad",(function(){return Te})),n.d(m,"tupleValuesAreOne",(function(){return Le})),n.d(m,"eitherStridesOrDilationsAreOne",(function(){return Be})),n.d(m,"convertConv2DDataFormat",(function(){return Pe})),n.d(m,"PARALLELIZE_THRESHOLD",(function(){return $u})),n.d(m,"computeOptimalWindowSize",(function(){return Ru})),n.d(m,"nonMaxSuppressionV3",(function(){return yh})),n.d(m,"nonMaxSuppressionV5",(function(){return xh})),n.d(m,"upcastType",(function(){return rd["b"]})),n.d(m,"getReshaped",(function(){return ud})),n.d(m,"getPermuted",(function(){return ld})),n.d(m,"getReshapedPermuted",(function(){return cd})),n.d(m,"getSliceBeginCoords",(function(){return hd})),n.d(m,"getSliceSize",(function(){return dd})),n.d(m,"prepareAndValidate",(function(){return ki})),n.d(m,"validateUpdateShape",(function(){return Ni})),n.d(m,"validateInput",(function(){return Ei})),n.d(m,"calculateShapes",(function(){return Ai})),n.d(m,"SELU_SCALEALPHA",(function(){return Dl})),n.d(m,"SELU_SCALE",(function(){return Fl})),n.d(m,"shouldFuse",(function(){return Lh})),n.d(m,"ERF_P",(function(){return pd})),n.d(m,"ERF_A1",(function(){return fd})),n.d(m,"ERF_A2",(function(){return md})),n.d(m,"ERF_A3",(function(){return gd})),n.d(m,"ERF_A4",(function(){return bd})),n.d(m,"ERF_A5",(function(){return yd})),n.d(m,"warn",(function(){return xd})),n.d(m,"log",(function(){return wd})),n.d(m,"mergeRealAndImagArrays",(function(){return vd})),n.d(m,"splitRealAndImagArrays",(function(){return Od})),n.d(m,"complexWithEvenIndex",(function(){return Sd})),n.d(m,"complexWithOddIndex",(function(){return Cd})),n.d(m,"getComplexWithIndex",(function(){return Id})),n.d(m,"assignToTypedArray",(function(){return kd})),n.d(m,"exponents",(function(){return Nd})),n.d(m,"exponent",(function(){return Ed})),n.d(m,"segment_util",(function(){return o})),n.d(m,"castTensor",(function(){return Ad})),n.d(m,"reshapeTensor",(function(){return $d})),n.d(m,"linspaceImpl",(function(){return Rd}));var g={};n.r(g),n.d(g,"nonMaxSuppressionV3",(function(){return yh})),n.d(g,"nonMaxSuppressionV5",(function(){return xh})),n.d(g,"split",(function(){return Dd})),n.d(g,"tile",(function(){return Fd})),n.d(g,"topkImpl",(function(){return _d})),n.d(g,"whereImpl",(function(){return xo}));var b=n("6ae2");n("29a8");const y="Add",x="AddN",w="BatchMatMul",v="BatchToSpaceND",O="BroadcastTo",S="Concat",C="Conv2D",I="Conv2DBackpropFilter",k="Conv2DBackpropInput",N="Conv3D",E="Conv3DBackpropFilterV2",A="Conv3DBackpropInputV2",$="DepthToSpace",R="DepthwiseConv2dNative",T="DepthwiseConv2dNativeBackpropFilter",D="DepthwiseConv2dNativeBackpropInput",F="Diag",_="Div",j="Equal",z="FusedBatchNorm",M="Greater",L="GreaterEqual",B="Identity",P="Less",W="LessEqual",V="LRN",U="LRNBackprop",G="MaxPoolWithArgmax",q="NotEqual",H="NonMaxSuppressionV3",K="NonMaxSuppressionV5",X="Max",J="OneHot",Y="PadV2",Z="SpaceToBatchND",Q="SplitV",tt="SquaredDifference",et="Square",nt="Sub",rt="Tile",st="Transpose",at="FromPixels";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function it(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1,o=e[e.length-1-s]||1;o>1&&1===i&&r.unshift(a)}return r}function ot(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ut(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){const n=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(n)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lt={kernelName:y,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=ut(n.shape,r.shape),a=()=>{let e=t;const r=ot(n.shape,s);return r.length>0&&(e=e.sum(r)),e.reshape(n.shape)},i=()=>{let e=t;const n=ot(r.shape,s);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)};return{a:a,b:i}}},ct={kernelName:x,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ht=n("76c2"),dt=n("a3f7"),pt=n("eb7e"),ft=n("34d7");
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mt(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function gt(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}function bt(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);const s=e.map(e=>t[e]);return[n,s]}function yt(t,e){const n=e.map(t=>1);return gt(t,n,e)}function xt(t,e,n){pt["assert"](mt(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function wt(t,e){if(mt(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function vt(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Ot(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(t,e){const n=t[0].length;t.forEach((t,e)=>{pt["assert"](t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),pt["assert"](e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let a=0;a<n;a++)pt["assert"](a===e||t[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Ct(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var It=n("54ef"),kt=n("298a");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nt(t,e=0){Object(pt["assert"])(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(dt["b"])(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const r=Object(pt["parseAxisParam"])(e,n[0].shape)[0],s=Ct(n.map(t=>t.shape),r);if(0===Object(pt["sizeFromShape"])(s))return Object(kt["g"])([],s);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];const a=n.map(t=>t.shape);St(a,r);const i=(t,r)=>{const s=Object(pt["parseAxisParam"])(e,n[0].shape)[0],a=t.concat(n,s);return r(n),a},o=n,u={axis:e};return b["a"].runKernelFunc(i,o,null,S,u)}const Et=Object(It["a"])({concat_:Nt});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(t,e){const n=Object(dt["a"])(t,"x","reshape",null);e=pt["inferFromImplicitShape"](e,n.size),pt["assert"](n.size===pt["sizeFromShape"](e),()=>"new shape and old shape must have the same number of elements.");const r=t=>({x:()=>t.reshape(n.shape)}),s={shape:e};return b["a"].runKernelFunc(t=>t.reshape(n,e),{x:n},r,"Reshape",s)}function $t(t,e){const n=Object(dt["a"])(t,"x","squeeze");return Wt(n,pt["squeezeShape"](n.shape,e).newShape)}function Rt(t,e){const n=Object(dt["a"])(t,"x","cast");if(!pt["isValidDtype"](e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r=t=>({x:()=>t.clone()}),s={dtype:e};return b["a"].runKernelFunc(t=>t.cast(n,e),{x:n},r,"Cast",s)}function Tt(t,e=0){const n=Object(dt["b"])(t,"tensors","stack");if(pt["assert"](n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return n[0].expandDims(e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;pt["assert"](e<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{pt["assertShapesMatch"](s,t.shape,"All tensors passed to stack must have matching shapes")}),n.forEach(t=>{pt["assert"](a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=n.map(t=>t.expandDims(e));return Et(i,e)}function Dt(t,e=0){e=e||0;const n=Object(dt["a"])(t,"x","unstack");pt["assert"](e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const r=t=>({x:()=>Ut(t,e)}),s={axis:e};return b["a"].runKernelFunc(t=>t.unstack(n,e),{x:n},r,"Unpack",s)}function Ft(t,e=0,n=!1,r=!1){const s=Object(dt["a"])(t,"x","cumsum");e|=0;const a=wt([e],s.rank);let i=s;null!=a&&(i=s.transpose(a));const o=Ot(1,s.rank)[0],u=t=>({permutedX:()=>t.cumsum(e,n,!r)});let l=b["a"].runKernelFunc(t=>t.cumsum(i,o,n,r),{permutedX:i},u);return null!=a&&(l=l.transpose(a)),l}function _t(t,e=0){const n=null,r=Object(dt["a"])(t,"x","expandDims",n);pt["assert"](e<=r.rank,()=>"Axis must be <= rank of the tensor");const s=r.shape.slice();return e<0&&(pt["assert"](-(r.rank+1)<=e,()=>`Axis must be in the interval [${-(r.rank+1)}, ${r.rank}]`),e=r.rank+e+1),s.splice(e,0,1),Wt(r,s)}async function jt(t,e){const n=Object(dt["a"])(t,"x","setdiff1d"),r=Object(dt["a"])(e,"y","setdiff1d");pt["assert"](n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),pt["assert"](1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),pt["assert"](1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let c=0;c<s.length;c++)i.has(s[c])||o++;const u=new ft["b"]([o],n.dtype),l=new ft["b"]([o],"int32");for(let c=0,h=0;c<s.length;c++)i.has(s[c])||(u.values[h]=s[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]}function zt(t,e="float32",n){return e=e||"float32",pt["assertNonNegativeIntegerDimensions"](t),new ft["b"](t,e,n)}function Mt(t,e=!1){console.log(t.toString(e))}const Lt=Object(It["a"])({cast_:Rt}),Bt=Object(It["a"])({cumsum_:Ft}),Pt=Object(It["a"])({expandDims_:_t}),Wt=Object(It["a"])({reshape_:At}),Vt=Object(It["a"])({squeeze_:$t}),Ut=Object(It["a"])({stack_:Tt}),Gt=Object(It["a"])({unstack_:Dt}),qt=jt;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ht(t,e,n=!1,r=!1){let s=Object(dt["a"])(t,"a","matMul"),a=Object(dt["a"])(e,"b","matMul");[s,a]=Object(ht["makeTypesMatch"])(s,a),pt["assert"](s.rank>=2&&a.rank>=2&&s.rank===a.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${a.rank}.`);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),d=pt["sizeFromShape"](c),p=pt["sizeFromShape"](h);pt["assert"](pt["arraysEqual"](c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and `+a.shape+" must match."),pt["assert"](i===o,()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=s.shape.slice(0,-2).concat([u,l]),m=Wt(s,n?[d,i,u]:[d,u,i]),g=Wt(a,r?[p,l,o]:[p,o,l]),y=(t,e)=>(e([m,g]),t.batchMatMul(m,g,n,r)),x={a:m,b:g},v={transposeA:n,transposeB:r},O=b["a"].runKernelFunc(y,x,null,w,v);return Wt(O,f)}const Kt=Object(It["a"])({matMul_:Ht}),Xt={kernelName:w,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Kt(t,s,!1,!1),b:()=>Kt(t,r,!0,!1)}:a&&!i?{a:()=>Kt(s,t,!1,!0),b:()=>Kt(r,t,!1,!1)}:{a:()=>Kt(s,t,!0,!0),b:()=>Kt(t,r,!0,!0)}:{a:()=>Kt(t,s,!1,!0),b:()=>Kt(r,t,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jt(t,e,n){const r=Object(dt["a"])(t,"x","spaceToBatchND");pt["assert"](r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),pt["assert"](n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),pt["assert"](r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]===0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s=t=>t.spaceToBatchND(r,e,n),a={x:r},i={blockShape:e,paddings:n};return b["a"].runKernelFunc(s,a,null,Z,i)}const Yt=Object(It["a"])({spaceToBatchND_:Jt}),Zt={kernelName:v,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Yt(t,r,s)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(t,e){pt["assert"](pt["isFunction"](t),()=>"The f passed in variableGrads(f) must be a function"),pt["assert"](null==e||Array.isArray(e)&&e.every(t=>t instanceof ft["c"]),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in b["a"].registeredVariables)e.push(b["a"].registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;e=e.filter(t=>t.trainable),pt["assert"](e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const a=!0,{value:i,grads:o}=b["a"].gradients(t,e,null,a);pt["assert"](o.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),pt["assert"](0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return e.forEach((t,e)=>{null!=o[e]&&(u[t.name]=o[e])}),null!=r&&r.forEach(t=>u[t.name]=null),{value:i,grads:u}}function te(t){return b["a"].customGrad(t)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ee(t,e,n,r,s){return e.rank<n.rank&&(e=e.reshape(yt(e.shape,r))),t.rank<n.rank&&(t=t.reshape(yt(t.shape,r))),{x:()=>{const r=t.mul(n.equal(e).cast(t.dtype));return null==s?r:r.transpose(s)}}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ne(t,e=null,n=!1){const r=Object(dt["a"])(t,"x","logSumExp"),s=pt["parseAxisParam"](e,r.shape),a=r.max(s,!0),i=r.sub(a),o=i.exp(),u=o.sum(s),l=u.log(),c=a.reshape(l.shape).add(l);if(n){const t=yt(c.shape,s);return c.reshape(t)}return c}function re(t,e=null,n=!1){let r=Object(dt["a"])(t,"x","sum");"bool"===r.dtype&&(r=r.toInt());const s=pt["parseAxisParam"](e,r.shape),a=te(t=>{const e=wt(s,t.rank);let r=s,a=t;null!=e&&(a=t.transpose(e),r=Ot(r.length,t.rank));const i=e=>{const n=t.shape.slice();s.forEach(t=>{n[t]=1});const r=e.reshape(n),a=r.mul(Object(kt["c"])(t.shape,"float32"));return a},o=t=>({x:()=>i(t)}),u={axes:r};let l=b["a"].runKernelFunc(t=>t.sum(a,r),{x:a},o,"Sum",u);if(n){const t=yt(l.shape,s);l=l.reshape(t)}return{value:l,gradFunc:i}});return a(r)}function se(t,e=null,n=!1){let r=Object(dt["a"])(t,"x","prod");"bool"===r.dtype&&(r=r.toInt());const s=pt["parseAxisParam"](e,r.shape),a=wt(s,r.rank);let i=s,o=r;null!=a&&(o=r.transpose(a),i=Ot(i.length,r.rank));let u=b["a"].runKernelFunc(t=>t.prod(o,i),{permutedX:o});if(n){const t=yt(u.shape,s);u=u.reshape(t)}return u}function ae(t,e=null,n=!1){const r=Object(dt["a"])(t,"x","mean"),s=pt["parseAxisParam"](e,r.shape),a=bt(r.shape,s),i=a[1],o=pt["sizeFromShape"](i),u=te(t=>{const r=Object(kt["f"])(o),a=r.dtype===t.dtype?t:t.cast(r.dtype),i=a.div(r),u=i.sum(e,n),l=e=>{const n=t.shape.slice();s.forEach(t=>{n[t]=1});const r=e.reshape(n),a=r.mul(Object(kt["c"])(t.shape,"float32")).div(o);return a};return{value:u,gradFunc:l}});return u(r)}function ie(t,e=null,n=!1){let r=Object(dt["a"])(t,"x","min");const s=r,a=pt["parseAxisParam"](e,r.shape);let i=a;const o=wt(i,r.rank);null!=o&&(r=r.transpose(o),i=Ot(i.length,r.rank));const u=(t,e)=>ee(t,e[1],e[0],a,o),l=[r],c=[!0];let h=b["a"].runKernelFunc((t,e)=>{const n=t.min(r,i);return e([s,n]),n},{x:r},u,"Min",{axes:i},l,c);if(n){const t=yt(h.shape,a);h=h.reshape(t)}return h}function oe(t,e=0){let n=Object(dt["a"])(t,"x","argMin");null==e&&(e=0);let r=pt["parseAxisParam"](e,n.shape);const s=wt(r,n.rank);null!=s&&(n=n.transpose(s),r=Ot(r.length,n.rank));const a=(t,e)=>{const[n]=e;return{$x:()=>Object(kt["p"])(n)}};return b["a"].runKernelFunc((t,e)=>{const s=t.argMin(n,r[0]);return e([n]),s},{$x:n},a)}function ue(t,e=0){let n=Object(dt["a"])(t,"x","argMax");null==e&&(e=0);let r=pt["parseAxisParam"](e,n.shape);const s=wt(r,n.rank);null!=s&&(n=n.transpose(s),r=Ot(r.length,n.rank));const a=(t,e)=>{const[n]=e;return{x:()=>Object(kt["p"])(n)}},i={axis:r[0]},o=[n];return b["a"].runKernelFunc((t,e)=>{const s=t.argMax(n,r[0]);return e([n]),s},{x:n},a,"ArgMax",i,o)}function le(t,e=null,n=!1){let r=Object(dt["a"])(t,"x","all","bool");const s=pt["parseAxisParam"](e,r.shape);let a=s;const i=wt(a,r.rank);null!=i&&(r=r.transpose(i),a=Ot(a.length,r.rank));const o=b["a"].runKernelFunc(t=>t.all(r,a),{$x:r});if(n){const t=yt(o.shape,s);return o.reshape(t)}return o}function ce(t,e=null,n=!1){let r=Object(dt["a"])(t,"x","any","bool");const s=pt["parseAxisParam"](e,r.shape);let a=s;const i=wt(a,r.rank);null!=i&&(r=r.transpose(i),a=Ot(a.length,r.rank));const o=b["a"].runKernelFunc(t=>t.any(r,a),{$x:r});if(n){const t=yt(o.shape,s);return o.reshape(t)}return o}function he(t,e=null,n=!1){t=Object(dt["a"])(t,"x","moments");const r=pt["parseAxisParam"](e,t.shape),s=t.mean(r,n);let a=s.shape;n||(a=yt(s.shape,r));const i=t.toFloat().sub(s.reshape(a)).square(),o=i.mean(r,n);return{mean:s,variance:o}}const de=Object(It["a"])({all_:le}),pe=Object(It["a"])({any_:ce}),fe=Object(It["a"])({argMax_:ue}),me=Object(It["a"])({argMin_:oe}),ge=Object(It["a"])({logSumExp_:ne}),be=Object(It["a"])({mean_:ae}),ye=Object(It["a"])({min_:ie}),xe=Object(It["a"])({moments_:he}),we=Object(It["a"])({sum_:re}),ve=Object(It["a"])({prod_:se}),Oe={kernelName:O,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])i[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>we(t,o,!0)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Se(t,e,n=0){const r=Object(dt["a"])(t,"x","split"),s=Object(pt["parseAxisParam"])(n,r.shape)[0];let a;"number"===typeof e?(Object(pt["assert"])(r.shape[s]%e===0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(r.shape[s]/e)):(Object(pt["assert"])(r.shape[s]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e);const i=(t,e)=>t.split(r,a,s),o={x:r},u={numOrSizeSplits:e,axis:n};return b["a"].runKernelFunc(i,o,null,Q,u)}const Ce=Object(It["a"])({split_:Se}),Ie={kernelName:S,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:s}=n,a=Object(pt["parseAxisParam"])(s,e[0].shape)[0],i=r.map(t=>t[a]),o=Ce(t,i,a);return o.map(t=>()=>t)}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ke(t,e,n,r,s,a,i="channelsLast"){const[o,u]=De(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,t[1],t[1]]}return Ee(t,l,n,r,s,a,!1,i)}function Ne(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=Fe(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return Ae(t,c,n,r,s,!1,h,a)}function Ee(t,e,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=t}const[d,p,,f]=e,[m,g]=De(n),[b,y]=De(r),x=_e(d,b),w=_e(p,y),{padInfo:v,outHeight:O,outWidth:S}=je(s,l,c,m,g,x,w,a),C=i?f*h:f;let I;return"channelsFirst"===o?I=[u,C,O,S]:"channelsLast"===o&&(I=[u,O,S,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:O,outWidth:S,outChannels:C,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:t,outShape:I,filterShape:e}}function Ae(t,e,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,d,l,c,h]=t}const[p,f,m,,g]=e,[b,y,x]=Fe(n),[w,v,O]=Fe(r),S=_e(p,w),C=_e(f,v),I=_e(m,O),{padInfo:k,outDepth:N,outHeight:E,outWidth:A}=ze(s,l,c,h,b,y,x,S,C,I,o),$=a?g*d:g;let R;return"channelsFirst"===i?R=[u,$,N,E,A]:"channelsLast"===i&&(R=[u,N,E,A,$]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:E,outWidth:A,outChannels:$,padInfo:k,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationDepth:w,dilationHeight:v,dilationWidth:O,inShape:t,outShape:R,filterShape:e}}function $e(t,e,n,r,s){null==r&&(r=Te(t,e,n));const a=t[0],i=t[1],o=Me((a-e+2*r)/n+1,s);pt["assert"](pt["isInt"](o),()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`);const u=Me((i-e+2*r)/n+1,s);return pt["assert"](pt["isInt"](u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[o,u]}function Re(t,e,n,r,s,a){null==s&&(s=Te(t,e,r));const i=t[0],o=t[1],u=t[2],l=Me((i-e+2*s)/r+1,a);pt["assert"](pt["isInt"](l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const c=Me((o-e+2*s)/r+1,a);pt["assert"](pt["isInt"](c),()=>`The output # of rows (${c}) must be an integer. Change the stride and/or zero pad parameters`);const h=Me((u-e+2*s)/r+1,a);return pt["assert"](pt["isInt"](h),()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`),[l,c,h,n]}function Te(t,e,n,r=1){const s=_e(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function De(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Fe(t){return"number"===typeof t?[t,t,t]:t}function _e(t,e){return e<=1?t:t+(t-1)*(e-1)}function je(t,e,n,r,s,a,i,o){let u,l,c;if("number"===typeof t){const s=0===t?"VALID":"NUMBER";u={top:t,bottom:t,left:t,right:t,type:s};const i=$e([e,n],a,r,t,o);l=i[0],c=i[1]}else if("same"===t){l=Math.ceil(e/r),c=Math.ceil(n/s);const t=Math.max(0,(l-1)*r+a-e),o=Math.max(0,(c-1)*s+i-n),h=Math.floor(t/2),d=t-h,p=Math.floor(o/2),f=o-p;u={top:h,bottom:d,left:p,right:f,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-a+1)/r),c=Math.ceil((n-i+1)/s)}return{padInfo:u,outHeight:l,outWidth:c}}function ze(t,e,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("number"===typeof t){const a=0===t?"VALID":"NUMBER";h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:a};const i=Re([e,n,r,1],o,1,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const t=(d-1)*s+o-e,c=(p-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(t/2),b=t-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2),v=m-w;h={top:y,bottom:x,left:w,right:v,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Me(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function Le(t){const[e,n,r]=De(t);return 1===e&&1===n&&1===r}function Be(t,e){return Le(t)||Le(e)}function Pe(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=Wt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2]])),pt["assert"](4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),pt["assert"](4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),pt["assert"](4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];pt["assert"](l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),pt["assert"](c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&pt["assert"](pt["isInt"](s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const h=t=>{const e=1,l=Pe(a),c=Ee(o.shape,n,r,e,s,i,!1,l);return t.conv2dDerFilter(o,u,c)},d={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i};return b["a"].runKernelFunc(h,d,null,I,p)}const Ve=Object(It["a"])({conv2DBackpropFilter_:We});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(t,e,n,r,s,a="NHWC",i){pt["assert"](t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,u=e,l=!1;3===e.rank&&(l=!0,u=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),pt["assert"](4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),pt["assert"](4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),pt["assert"](4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];pt["assert"](c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),pt["assert"](h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&pt["assert"](pt["isInt"](s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d=(t,e)=>{const l=1,c=Pe(a),h=Ee(o,n.shape,r,l,s,i,!1,c),d=t.conv2dDerInput(u,n,h);return e([u,n]),d},p={dy:u,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i},m=b["a"].runKernelFunc(d,p,null,k,f);return l?Wt(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ge=Object(It["a"])({conv2DBackpropInput_:Ue}),qe={kernelName:C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return pt["assert"](Le(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Ge(r.shape,t,s,i,o,u),filter:()=>Ve(r,t,s.shape,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function He(t,e,n,r,s="NHWC",a=[1,1],i){const o=Object(dt["a"])(t,"x","conv2d"),u=Object(dt["a"])(e,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Wt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),pt["assert"](4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),pt["assert"](4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&pt["assert"](pt["isInt"](r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];pt["assert"](h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),pt["assert"](Be(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d=(t,e)=>{const o=Pe(s),c=Ee(l.shape,u.shape,n,a,r,i,!1,o),h=t.conv2d(l,u,c);return e([l,u]),h},p={x:l,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=b["a"].runKernelFunc(d,p,null,C,f);return c?Wt(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ke=Object(It["a"])({conv2d_:He}),Xe={kernelName:k,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Ke(t,s,a,i,o,1,u),filter:()=>Ve(t,r,s.shape,a,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Je(t,e,n,r,s){let a=t;4===t.rank&&(a=Wt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),pt["assert"](5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),pt["assert"](5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),pt["assert"](5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),pt["assert"](a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),pt["assert"](i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o=t=>{const e=1,o=Ae(a.shape,n,r,e,s);return t.conv3dDerFilter(a,i,o)},u={x:a,y:i},l={strides:r,pad:s};return b["a"].runKernelFunc(o,u,null,E,l)}const Ye=Object(It["a"])({conv3DBackpropFilter_:Je});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(t,e,n,r,s){pt["assert"](t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const u=a[4],l=i.shape[4];pt["assert"](5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),pt["assert"](5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),pt["assert"](5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),pt["assert"](u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),pt["assert"](l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c=t=>{const e=1,o=Ae(a,n.shape,r,e,s);return t.conv3dDerInput(i,n,o)},h={dy:i},d={pad:s},p=b["a"].runKernelFunc(c,h,null,A,d);return o?Wt(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Qe=Object(It["a"])({conv3DBackpropInput_:Ze}),tn={kernelName:N,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;pt["assert"](Le(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>Qe(i.shape,t,o,s,a),filter:()=>Ye(i,t,o.shape,s,a)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function en(t,e,n,r){let s=t;3===t.rank&&(s=Wt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let a=e;3===a.rank&&(a=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i=t=>t.depthwiseConv2DDerFilter(s,a,r),o={x:s,dy:a};return b["a"].runKernelFunc(i,o,null,T)}const nn=Object(It["a"])({depthwiseConv2dNativeBackpropFilter_:en});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t,e,n,r){let s=e,a=!1;3===e.rank&&(a=!0,s=Wt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i=t=>t.depthwiseConv2DDerInput(s,n,r),o={dy:s},u=b["a"].runKernelFunc(i,o,null,D);return a?Wt(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const sn=Object(It["a"])({depthwiseConv2dNativeBackpropInput_:rn}),an={kernelName:R,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;pt["assert"](Le(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=e;pt["assert"](4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),pt["assert"](4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),pt["assert"](u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),pt["assert"](Be(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&pt["assert"](pt["isInt"](a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const c=Ee(u.shape,l.shape,s,o,a,i,!0);return{x:()=>sn(u.shape,t,l,c),filter:()=>nn(u,t,l.shape,c)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var on=n("b333");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(t){Object(on["b"])().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ln(){return b["a"]}function cn(){return b["a"].memory()}function hn(t,e){return b["a"].tidy(t,e)}function dn(t){const e=Object(ht["getTensorsInContainer"])(t);e.forEach(t=>t.dispose())}function pn(t){return b["a"].keep(t)}function fn(t){return b["a"].setBackend(t)}function mn(t,e,n=1){return b["a"].registerBackend(t,e,n)}function gn(){return b["a"].backend}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bn(t,e){let n=Object(dt["a"])(t,"a","add"),r=Object(dt["a"])(e,"b","add");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=(t,e)=>{const s=t.add(n,r);return e([n,r]),s},a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,y)}Object(ft["d"])(un);const yn=Object(It["a"])({add_:bn});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(t){const e=Object(dt["a"])(t,"x","neg"),n=t=>({x:()=>t.neg()}),r={},s=[e];return b["a"].runKernelFunc(t=>t.neg(e),{x:e},n,"Neg",r,s)}function wn(t){const e=Object(dt["a"])(t,"x","ceil"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.ceil(e),{$x:e},n)}function vn(t){const e=Object(dt["a"])(t,"x","floor"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.floor(e),{$x:e},n)}function On(t){const e=Object(dt["a"])(t,"x","sign"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.sign(e),{$x:e},n)}function Sn(t){const e=Object(dt["a"])(t,"x","isNaN"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.isNaN(e),{$x:e},n)}function Cn(t){const e=Object(dt["a"])(t,"x","isInf"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.isInf(e),{$x:e},n)}function In(t){const e=Object(dt["a"])(t,"x","isFinite"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.isFinite(e),{$x:e},n)}function kn(t){const e=Object(dt["a"])(t,"x","round"),n=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.round(e),{$x:e},n)}function Nn(t){const e=Object(dt["a"])(t,"x","exp"),n=(t,e)=>({x:()=>t.mul(e[0])}),r={},s=[],a=[!0];return b["a"].runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},{x:e},n,"Exp",r,s,a)}function En(t){const e=Object(dt["a"])(t,"x","expm1"),n=(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.exp())}};return b["a"].runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},{$x:e},n)}function An(t){const e=Object(dt["a"])(t,"x","log"),n=(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat())}},r={},s=[e];return b["a"].runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},{x:e},n,"Log",r,s)}function $n(t){const e=Object(dt["a"])(t,"x","log1p"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(n.add(1))}};return b["a"].runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},{$x:e},n)}function Rn(t){const e=Object(dt["a"])(t,"x","sqrt"),n=(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat().sqrt().mul(2))}};return b["a"].runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},{x:e},n,"Sqrt",{})}function Tn(t){const e=Object(dt["a"])(t,"x","rsqrt"),n=(t,e)=>{const[n]=e;return{x:()=>t.div(n.pow(1.5).mul(2)).neg()}},r=[e];return b["a"].runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},{x:e},n,"Rsqrt",{},r)}function Dn(t){const e=Object(dt["a"])(t,"x","reciprocal"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(n.square().neg())}};return b["a"].runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},{$x:e},n)}function Fn(t){const e=Object(dt["a"])(t,"x","abs");if("complex64"===e.dtype)return b["a"].runKernelFunc(t=>t.complexAbs(e),{$x:e});const n=(t,e)=>{const[n]=e;return{x:()=>t.mul(n.toFloat().step(-1))}};return b["a"].runKernelFunc((t,n)=>{const r=t.abs(e);return n([e]),r},{x:e},n,"Abs")}function _n(t,e,n){const r=Object(dt["a"])(t,"x","clipByValue");pt["assert"](e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const s=(t,r)=>{const[s]=r;return{x:()=>t.where(s.greaterEqual(e).logicalAnd(s.lessEqual(n)),Object(kt["p"])(t))}},a=[r],i={min:e,max:n};return b["a"].runKernelFunc((t,s)=>{const a=t.clip(r,e,n);return s([r]),a},{x:r},s,"ClipByValue",i,a)}function jn(t){const e=Object(dt["a"])(t,"x","sigmoid"),n=(t,e)=>{const[n]=e;return{x:()=>t.mul(n.mul(Object(kt["f"])(1).sub(n)))}};return b["a"].runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},{x:e},n,"Sigmoid")}function zn(t){const e=Object(dt["a"])(t,"x","logSigmoid"),n=(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.neg().sigmoid())}};return b["a"].runKernelFunc((t,n)=>{const r=t.softplus(e.neg()).neg();return n([e]),r},{$x:e},n)}function Mn(t){const e=Object(dt["a"])(t,"x","softplus"),n=(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.sigmoid())}};return b["a"].runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},{$x:e},n)}function Ln(t){const e=Object(dt["a"])(t,"x","sin"),n=(t,e)=>{const[n]=e;return{x:()=>n.toFloat().cos().mul(t)}},r=[e];return b["a"].runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},{x:e},n,"Sin",{},r)}function Bn(t){const e=Object(dt["a"])(t,"x","cos"),n=(t,e)=>{const[n]=e;return{x:()=>n.toFloat().sin().neg().mul(t)}},r=[e];return b["a"].runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},{x:e},n,"Cos",{},r)}function Pn(t){const e=Object(dt["a"])(t,"x","tan"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(n.cos().square())}};return b["a"].runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},{$x:e},n)}function Wn(t){const e=Object(dt["a"])(t,"x","asin"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(Object(kt["f"])(1).sub(n.toFloat().square()).sqrt())}};return b["a"].runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},{$x:e},n)}function Vn(t){const e=Object(dt["a"])(t,"x","acos"),n=(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square(),r=Object(kt["f"])(1).sub(e).sqrt();return t.div(r).neg()}}};return b["a"].runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},{$x:e},n)}function Un(t){const e=Object(dt["a"])(t,"x","atan"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(n.toFloat().square().add(1))}};return b["a"].runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},{$x:e},n)}function Gn(t){const e=Object(dt["a"])(t,"x","sinh"),n=(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().cosh().mul(t)}};return b["a"].runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},{$x:e},n)}function qn(t){const e=Object(dt["a"])(t,"x","cosh"),n=(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().sinh().mul(t)}};return b["a"].runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},{$x:e},n)}function Hn(t){const e=Object(dt["a"])(t,"x","tanh"),n=(t,e)=>{const[n]=e;return{x:()=>Object(kt["f"])(1).sub(n.square()).mul(t)}},r=[!0];return b["a"].runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},{x:e},n,"Tanh",{},null,r)}function Kn(t){const e=Object(dt["a"])(t,"x","asinh"),n=(t,e)=>{const[n]=e;return{$x:()=>{const e=Object(kt["f"])(1).add(n.toFloat().square()).sqrt();return t.div(e)}}};return b["a"].runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},{$x:e},n)}function Xn(t){const e=Object(dt["a"])(t,"x","acosh"),n=(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square().sub(1).sqrt();return t.div(e)}}};return b["a"].runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},{$x:e},n)}function Jn(t){const e=Object(dt["a"])(t,"x","atanh"),n=(t,e)=>{const[n]=e;return{$x:()=>t.div(Object(kt["f"])(1).sub(n.toFloat().square()))}};return b["a"].runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},{$x:e},n)}function Yn(t){let e=Object(dt["a"])(t,"x","erf");pt["assert"]("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=e.toFloat());const n=(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}};return b["a"].runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},{$x:e},n)}function Zn(t,e=0){const n=Object(dt["a"])(t,"x","step"),r=t=>({$x:()=>Object(kt["p"])(t)});return b["a"].runKernelFunc(t=>t.step(n,e),{$x:n},r)}const Qn=Object(It["a"])({abs_:Fn}),tr=Object(It["a"])({acos_:Vn}),er=Object(It["a"])({acosh_:Xn}),nr=Object(It["a"])({asin_:Wn}),rr=Object(It["a"])({asinh_:Kn}),sr=Object(It["a"])({atan_:Un}),ar=Object(It["a"])({atanh_:Jn}),ir=Object(It["a"])({ceil_:wn}),or=Object(It["a"])({clipByValue_:_n}),ur=Object(It["a"])({cos_:Bn}),lr=Object(It["a"])({cosh_:qn}),cr=Object(It["a"])({erf_:Yn}),hr=Object(It["a"])({exp_:Nn}),dr=Object(It["a"])({expm1_:En}),pr=Object(It["a"])({floor_:vn}),fr=Object(It["a"])({log_:An}),mr=Object(It["a"])({log1p_:$n}),gr=Object(It["a"])({logSigmoid_:zn}),br=Object(It["a"])({neg_:xn}),yr=Object(It["a"])({reciprocal_:Dn}),xr=Object(It["a"])({round_:kn}),wr=Object(It["a"])({rsqrt_:Tn}),vr=Object(It["a"])({sigmoid_:jn}),Or=Object(It["a"])({sign_:On}),Sr=Object(It["a"])({isNaN_:Sn}),Cr=Object(It["a"])({isInf_:Cn}),Ir=Object(It["a"])({isFinite_:In}),kr=Object(It["a"])({sin_:Ln}),Nr=Object(It["a"])({sinh_:Gn}),Er=Object(It["a"])({softplus_:Mn}),Ar=Object(It["a"])({sqrt_:Rn}),$r=Object(It["a"])({step_:Zn}),Rr=Object(It["a"])({tan_:Pn}),Tr=Object(It["a"])({tanh_:Hn});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","addStrict"),r=Object(dt["a"])(e,"b","addStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in addStrict: "),n.add(r)}function Fr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","subStrict"),r=Object(dt["a"])(e,"b","subStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in subStrict: "),n.sub(r)}function _r(t,e){let n=Object(dt["a"])(t,"base","pow"),r=Object(dt["a"])(e,"exp","pow");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ut(n.shape,r.shape),a=(t,e)=>{const[n,r,a]=e,i=()=>{const e=r.toFloat();let a=t.mul(e.mul(n.pow(e.sub(Object(kt["f"])(1)))));const i=ot(n.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},o=()=>{const e=n.greater(0),i=n.log().where(e,Object(kt["p"])(n));let o=t.mul(a.mul(i));const u=ot(r.shape,s);return u.length>0&&(o=o.sum(u)),o.reshape(r.shape)};return{a:i,b:o}},i={},o=[n,r],u=[!0];return b["a"].runKernelFunc((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s},{a:n,b:r},a,"Pow",i,o,u)}function jr(t,e){return un("strict variants of ops have been deprecated and will be removed in future"),pt["assertShapesMatch"](t.shape,e.shape,"Error in powStrict: "),t.pow(e)}function zr(t,e){let n=Object(dt["a"])(t,"a","mul"),r=Object(dt["a"])(e,"b","mul");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ut(n.shape,r.shape),a=(t,e)=>{const[n,r]=e,a=()=>{const e=t.mul(r.toFloat()),a=ot(n.shape,s);return a.length>0?e.sum(a).reshape(n.shape):e},i=()=>{const e=t.mul(n.toFloat()),a=ot(r.shape,s);return a.length>0?e.sum(a).reshape(r.shape):e};return{a:a,b:i}};return b["a"].runKernelFunc((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s},{a:n,b:r},a,"Mul")}function Mr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","mul"),r=Object(dt["a"])(e,"b","mul");return pt["assertShapesMatch"](n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}function Lr(t,e){let n=Object(dt["a"])(t,"a","floorDiv"),r=Object(dt["a"])(e,"b","floorDiv");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ut(n.shape,r.shape),a=(t,e)=>{const[n,r]=e,a=()=>{const e=t.div(r.toFloat()),a=ot(n.shape,s);return a.length>0?e.sum(a).reshape(n.shape):e},i=()=>{let e=t.mul(n.toFloat());const a=ot(r.shape,s);a.length>0&&(e=e.sum(a).reshape(r.shape));const i=r.square();return e.div(i.toFloat()).neg()};return{a:a,b:i}};return b["a"].runKernelFunc((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s},{a:n,b:r},a,"FloorDiv")}function Br(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","div"),r=Object(dt["a"])(e,"b","div");return pt["assertShapesMatch"](n.shape,r.shape,"Error in divideStrict: "),n.div(r)}function Pr(t,e){let n=Object(dt["a"])(t,"a","mod"),r=Object(dt["a"])(e,"b","mod");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ut(n.shape,r.shape),a=(t,e)=>{const[n,r]=e,a=()=>{const e=ot(n.shape,s);return e.length>0?t.sum(e).reshape(n.shape):t},i=()=>{const e=t.mul(n.div(r).floor().neg()),a=ot(r.shape,s);return a.length>0?e.sum(a).reshape(r.shape):e};return{$a:a,$b:i}};return b["a"].runKernelFunc((t,e)=>{const s=t.mod(n,r);return e([n,r]),s},{$a:n,$b:r},a)}function Wr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","modStrict"),r=Object(dt["a"])(e,"b","modStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in modStrict: "),n.mod(r)}function Vr(t,e){let n=Object(dt["a"])(t,"a","minimum"),r=Object(dt["a"])(e,"b","minimum");[n,r]=Object(ht["makeTypesMatch"])(n,r),"bool"===n.dtype&&(n=n.toInt(),r=r.toInt()),ut(n.shape,r.shape);const s=(t,e)=>{const[n,r]=e,s=()=>t.mul(n.lessEqual(r).toFloat()),a=()=>t.mul(n.greater(r).toFloat());return{a:s,b:a}};return b["a"].runKernelFunc((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s},{a:n,b:r},s,"Minimum")}function Ur(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","minimumStrict"),r=Object(dt["a"])(e,"b","minimumStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}function Gr(t,e){let n=Object(dt["a"])(t,"a","maximum"),r=Object(dt["a"])(e,"b","maximum");[n,r]=Object(ht["makeTypesMatch"])(n,r),"bool"===n.dtype&&(n=n.toInt(),r=r.toInt()),ut(n.shape,r.shape);const s=(t,e)=>{const[n,r]=e,s=()=>t.mul(n.greaterEqual(r).toFloat()),a=()=>t.mul(n.less(r).toFloat());return{a:s,b:a}};return b["a"].runKernelFunc((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s},{a:n,b:r},s,"Maximum")}function qr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","maximumStrict"),r=Object(dt["a"])(e,"b","maximumStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}function Hr(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","squaredDifferenceStrict"),r=Object(dt["a"])(e,"b","squaredDifferenceStrict");return pt["assertShapesMatch"](n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}function Kr(t,e){let n=Object(dt["a"])(t,"a","atan2"),r=Object(dt["a"])(e,"b","atan2");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ut(n.shape,r.shape),a=(t,e)=>{const[n,r]=e,a=()=>{const e=yn(n.square(),r.square());let a=t.mul(r.div(e));const i=ot(n.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},i=()=>{const e=yn(n.square(),r.square());let a=br(t.mul(n.div(e)));const i=ot(r.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(r.shape)};return{$a:a,$b:i}};return b["a"].runKernelFunc((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s},{$a:n,$b:r},a)}const Xr=Object(It["a"])({addStrict_:Dr}),Jr=Object(It["a"])({atan2_:Kr}),Yr=Object(It["a"])({divStrict_:Br}),Zr=Object(It["a"])({floorDiv_:Lr}),Qr=Object(It["a"])({maximum_:Gr}),ts=Object(It["a"])({maximumStrict_:qr}),es=Object(It["a"])({minimum_:Vr}),ns=Object(It["a"])({minimumStrict_:Ur}),rs=Object(It["a"])({mod_:Pr}),ss=Object(It["a"])({modStrict_:Wr}),as=Object(It["a"])({mul_:zr}),is=Object(It["a"])({mulStrict_:Mr}),os=Object(It["a"])({pow_:_r}),us=Object(It["a"])({powStrict_:jr}),ls=Object(It["a"])({squaredDifferenceStrict_:Hr}),cs=Object(It["a"])({subStrict_:Fr});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hs(t,e){let n=Object(dt["a"])(t,"a","div"),r=Object(dt["a"])(e,"b","div");if([n,r]=Object(ht["makeTypesMatch"])(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Zr(n,r);const s=(t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s},a={a:n,b:r},i={};return b["a"].runKernelFunc(s,a,null,_,i)}const ds=Object(It["a"])({div_:hs});
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(t){const e=Object(dt["a"])(t,"x","square"),n={},r=[e],s=[];return b["a"].runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",n,r,s)}const fs=Object(It["a"])({square_:ps}),ms={kernelName:_,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=ut(n.shape,r.shape),a=()=>{const e=ds(t,r.toFloat()),a=ot(n.shape,s);return a.length>0?we(e,a).reshape(n.shape):e},i=()=>{let e=as(t,n.toFloat());const a=ot(r.shape,s);a.length>0&&(e=Wt(we(e,a),r.shape));const i=fs(r);return br(ds(e,i.toFloat()))};return{a:a,b:i}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gs(t,e){let n=Object(dt["a"])(t,"a","sub"),r=Object(dt["a"])(e,"b","sub");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=(t,e)=>{const s=t.subtract(n,r);return e([n,r]),s},a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,nt)}const bs=Object(It["a"])({sub_:gs});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(t,e){const n=null,r=Object(dt["a"])(t,"x","tile",n);pt["assert"](r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${e}.`);const s=(t,n)=>{const s=t.tile(r,e);return n([r]),s},a=[r],i={x:r},o={reps:e};return b["a"].runKernelFunc(s,i,null,rt,o,a)}const xs=Object(It["a"])({tile_:ys}),ws={kernelName:z,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?Object(kt["f"])(1):o,l=ot(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=bs(s,a),d=as(t,u),p=wr(yn(i,Object(kt["f"])(r))),f=as(as(as(p,p),p),Object(kt["f"])(-.5)),m=()=>1===a.rank?Wt(as(as(t,xs(p.as4D(1,1,1,a.shape[0]),c)),u),s.shape):Wt(as(as(t,p),u),s.shape),g=()=>{let t=as(as(p,Object(kt["f"])(-1)),d);return 1===a.rank&&(t=we(t,l)),Wt(t,a.shape)},b=()=>{let t=as(as(f,h),d);return 1===a.rank&&(t=we(t,l)),Wt(t,a.shape)},y=()=>{const e=as(h,p);let n=as(t,e);return 1===a.rank&&(n=we(n,l)),Wt(n,a.shape)},x=()=>{let e=t;return 1===a.rank&&(e=we(e,l)),Wt(e,a.shape)};return{x:m,mean:g,variance:b,scale:y,offset:x}}},vs={kernelName:L,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(kt["p"])(n),b:()=>Object(kt["p"])(r)}}},Os={kernelName:B,gradFunc:t=>({x:()=>t.toFloat()})};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ss(t,e,n,r=5,s=1,a=1,i=.5){const o=o=>o.LRNGrad(n,t,e,r,s,a,i),u={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return b["a"].runKernelFunc(o,u,null,U,l)}const Cs=Object(It["a"])({localResponseNormalizationBackprop_:Ss}),Is={kernelName:V,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Cs(r,s,t,a,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ks(t,e){const n=Object(dt["a"])(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),pt["assert"](n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{pt["assert"](t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const r={perm:e};return b["a"].runKernelFunc(t=>t.transpose(n,e),{x:n},null,"Transpose",r)}const Ns=Object(It["a"])({transpose_:ks}),Es={kernelName:X,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[a,i]=e,o=pt["parseAxisParam"](s,a.shape),u=wt(o,a.rank),l=ee(t,i,a,o,u);return{x:()=>{let t=l["x"]();return null!=u&&(t=Ns(t)),t}}}},As={kernelName:J,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(kt["o"])(n.shape,"float32")}}},$s={kernelName:Y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map(t=>t[0]);return{x:()=>t.slice(a,r.shape)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rs(t,e,n){const r=Object(dt["a"])(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);pt["assert"](r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),pt["assert"](n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),pt["assert"](r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const a=t=>t.batchToSpaceND(r,e,n),i={x:r},o={blockShape:e,crops:n};return b["a"].runKernelFunc(a,i,null,v,o)}const Ts=Object(It["a"])({batchToSpaceND_:Rs}),Ds={kernelName:Z,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Ts(t,r,s)}}},Fs={kernelName:Q,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Et(t,r)}}},_s={kernelName:et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>as(t,as(n.toFloat(),2))}}},js={kernelName:tt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Object(kt["f"])(2),a=()=>as(t,as(s,bs(n,r))),i=()=>as(t,as(s,bs(r,n)));return{a:a,b:i}}},zs={kernelName:nt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=ut(n.shape,r.shape),a=()=>{let e=t;const r=ot(n.shape,s);return r.length>0&&(e=we(e,r)),Wt(e,n.shape)},i=()=>{let e=t;const n=ot(r.shape,s);return n.length>0&&(e=we(e,n)),Wt(br(e),r.shape)};return{a:a,b:i}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ms(t,e,n=0){const r=Object(dt["a"])(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s=(t,s)=>(s([r]),t.pad(r,e,n)),a={paddings:e,constantValue:n},i={x:r};return b["a"].runKernelFunc(s,i,null,Y,a)}const Ls=Object(It["a"])({pad_:Ms});
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(t,e,n){pt["assert"](t.rank===e.length,()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`),pt["assert"](t.rank===n.length,()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`);for(let r=0;r<t.rank;++r)pt["assert"](e[r]+n[r]<=t.shape[r],()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}function Ps(t){const e=[];let n=0;while(t>0)1&t&&e.push(n),t/=2,n++;return e}function Ws(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Vs(t,e,n,r,s){let a=e[s];const i=n[s]||1;(t&1<<s||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[s];return a<0&&(a+=o),a=pt["clamp"](0,a,o-1),a}function Us(t,e,n,r,s){let a=e[s];const i=n[s]||1;(t&1<<s||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const o=r[s];return a<0&&(a+=o),a=i>0?pt["clamp"](0,a,o):pt["clamp"](-1,a,o-1),a}function Gs(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function qs(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(t,e,n){const r=Object(dt["a"])(t,"x","slice1d");return pt["assert"](1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Zs(r,[e],[n])}function Ks(t,e,n){const r=Object(dt["a"])(t,"x","slice2d");return pt["assert"](2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Zs(r,e,n)}function Xs(t,e,n){const r=Object(dt["a"])(t,"x","slice3d");return pt["assert"](3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Zs(r,e,n)}function Js(t,e,n){const r=Object(dt["a"])(t,"x","slice4d");return pt["assert"](4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Zs(r,e,n)}function Ys(t,e,n){const r=Object(dt["a"])(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");let s,a;s="number"===typeof e?[e,...new Array(r.rank-1).fill(0)]:e.length<r.rank?e.concat(new Array(r.rank-e.length).fill(0)):e.slice(),s.forEach(t=>{pt["assert"](-1!==t,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(r.rank).fill(-1):"number"===typeof n?[n,...new Array(r.rank-1).fill(-1)]:n.length<r.rank?n.concat(new Array(r.rank-n.length).fill(-1)):n,a=a.map((t,e)=>t>=0?t:(pt["assert"](-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${e}.`),r.shape[e]-s[e])),Bs(r,s,a);const i=r.shape,o=t=>{const e=[];for(let n=0;n<t.rank;n++)e.push([s[n],i[n]-s[n]-a[n]]);return{x:()=>Ls(t,e)}},u={begin:s,size:a};return b["a"].runKernelFunc(t=>t.slice(r,s,a),{x:r},o,"Slice",u)}const Zs=Object(It["a"])({slice_:Ys}),Qs=Object(It["a"])({slice1d_:Hs}),ta=Object(It["a"])({slice2d_:Ks}),ea=Object(It["a"])({slice3d_:Xs}),na=Object(It["a"])({slice4d_:Js}),ra={kernelName:rt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n,a=()=>{let e=Object(kt["p"])(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=yn(e,Zs(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=yn(e,Zs(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=yn(e,Zs(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=yn(e,Zs(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e};return{x:a}}},sa={kernelName:st,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=vt(s);return{x:()=>Ns(t,a)}}};var aa=n("73b8");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia=[lt,ct,Xt,Zt,Oe,Ie,qe,Xe,tn,an,ms,ws,vs,Os,Is,As,$s,Fs,Es,Ds,_s,js,ra,sa,zs];for(const Wd of ia)Object(aa["d"])(Wd);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oa{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}Object(on["b"])().get("IS_BROWSER")&&Object(on["b"])().setPlatform("browser",new oa);n("4b05");var ua=n("350f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class la{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==la.instance&&(la.instance=new la),la.instance}static registerSaveRouter(t){la.getInstance().saveRouters.push(t)}static registerLoadRouter(t){la.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return la.getHandlers(t,"save")}static getLoadHandlers(t,e){return la.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[],s="load"===e?la.getInstance().loadRouters:la.getInstance().saveRouters;return s.forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}const ca=t=>la.registerSaveRouter(t),ha=t=>la.registerLoadRouter(t),da=t=>la.getSaveHandlers(t),pa=(t,e)=>la.getLoadHandlers(t,e)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,fa="://";class ma{constructor(){this.managers={}}static getInstance(){return null==ma.instance&&(ma.instance=new ma),ma.instance}static registerManager(t,e){Object(pt["assert"])(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(fa)&&(t=t.slice(0,t.indexOf(fa))),Object(pt["assert"])(t.length>0,()=>"scheme must not be an empty string.");const n=ma.getInstance();Object(pt["assert"])(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ga(t){if(-1===t.indexOf(fa))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ma.getSchemes().join(","));return{scheme:t.split(fa)[0],path:t.split(fa)[1]}}async function ba(t,e,n=!1){Object(pt["assert"])(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=la.getLoadHandlers(t);Object(pt["assert"])(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(pt["assert"])(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],a=la.getSaveHandlers(e);Object(pt["assert"])(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(pt["assert"])(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=a[0],o=ga(t).scheme,u=ga(t).path,l=o===ga(t).scheme,c=await s.load();n&&l&&await ma.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await ma.getManager(o).removeModel(u),h.modelArtifactsInfo}async function ya(){const t=ma.getSchemes(),e={};for(const n of t){const t=await ma.getManager(n).listModels();for(const r in t){const s=n+fa+r;e[s]=t[r]}}return e}async function xa(t){const e=ga(t),n=ma.getManager(e.scheme);return n.removeModel(e.path)}async function wa(t,e){const n=!1;return ba(t,e,n)}async function va(t,e){const n=!0;return ba(t,e,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa="tensorflowjs",Sa=1,Ca="models_store",Ia="model_info_store";function ka(){if(!Object(on["b"])().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=window||self,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Na(t){const e=t.result;e.createObjectStore(Ca,{keyPath:"modelPath"}),e.createObjectStore(Ia,{keyPath:"modelPath"})}class Ea{constructor(t){if(this.indexedDB=ka(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(Oa,Sa);r.onupgradeneeded=()=>Na(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Ca,"readonly"),r=e.objectStore(Ca),a=r.get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(a.result.modelArtifacts)},a.onerror=t=>(s.close(),n(a.error)),e.oncomplete=()=>s.close()}else{const r=Object(ua["g"])(e),a=s.transaction(Ia,"readwrite");let i=a.objectStore(Ia);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Ca,"readwrite");const o=u.objectStore(Ca),l=o.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});l.onsuccess=()=>t({modelArtifactsInfo:r}),l.onerror=t=>{i=a.objectStore(Ia);const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(l.error)),e.onerror=t=>(s.close(),n(l.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}Ea.URL_SCHEME="indexeddb://";const Aa=t=>Object(on["b"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ea.URL_SCHEME)?$a(t.slice(Ea.URL_SCHEME.length)):null;function $a(t){return new Ea(t)}function Ra(t){return t.startsWith(Ea.URL_SCHEME)?t.slice(Ea.URL_SCHEME.length):t}la.registerSaveRouter(Aa),la.registerLoadRouter(Aa);class Ta{constructor(){this.indexedDB=ka()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(Oa,Sa);n.onupgradeneeded=()=>Na(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ia,"readonly"),a=s.objectStore(Ia),i=a.getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){return t=Ra(t),new Promise((e,n)=>{const r=this.indexedDB.open(Oa,Sa);r.onupgradeneeded=()=>Na(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ia,"readwrite"),i=a.objectStore(Ia),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction(Ca,"readwrite");const r=u.objectStore(Ca),a=r.delete(t);a.onsuccess=()=>e(o.result.modelArtifactsInfo),a.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)})}}if(Object(on["b"])().getBool("IS_BROWSER"))try{ma.registerManager(Ea.URL_SCHEME,new Ta)}catch(Pd){}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da="/",Fa="tensorflowjs_models",_a="info",ja="model_topology",za="weight_specs",Ma="weight_data",La="model_metadata";function Ba(t){return{info:[Fa,t,_a].join(Da),topology:[Fa,t,ja].join(Da),weightSpecs:[Fa,t,za].join(Da),weightData:[Fa,t,Ma].join(Da),modelMetadata:[Fa,t,La].join(Da)}}function Pa(t){const e=t.split(Da);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join(Da)}function Wa(t){return t.startsWith(Va.URL_SCHEME)?t.slice(Va.URL_SCHEME.length):t}class Va{constructor(t){if(!Object(on["b"])().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ba(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Object(ua["g"])(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(ua["a"])(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(Pd){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t["format"],e.generatedBy=t["generatedBy"],e.convertedBy=t["convertedBy"],e.userDefinedMetadata=t["userDefinedMetadata"]}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(ua["b"])(a),e}}Va.URL_SCHEME="localstorage://";const Ua=t=>Object(on["b"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Va.URL_SCHEME)?Ga(t.slice(Va.URL_SCHEME.length)):null;function Ga(t){return new Va(t)}la.registerSaveRouter(Ua),la.registerLoadRouter(Ua);class qa{constructor(){Object(pt["assert"])(Object(on["b"])().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(pt["assert"])("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Fa+Da,n=Da+_a;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){const e=Pa(s);t[e]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=Wa(t);const e=Ba(t);if(null==this.LS.getItem(e.info))throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),n}}if(Object(on["b"])().getBool("IS_BROWSER"))try{ma.registerManager(Va.URL_SCHEME,new qa)}catch(Pd){}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ha="model",Ka=".json",Xa=".weights.bin";function Ja(t){return new Promise(t=>setTimeout(t)).then(t)}class Ya{constructor(t){if(!Object(on["b"])().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ya.URL_SCHEME)&&(t=t.slice(Ya.URL_SCHEME.length)),null!=t&&0!==t.length||(t=Ha),this.modelTopologyFileName=t+Ka,this.weightDataFileName=t+Xa}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Ja(()=>a.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Ja(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(ua["g"])(t)}}}}Ya.URL_SCHEME="downloads://";class Za{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(Pd){return void r(Pd)}const l=[],c=[],h=[];o.forEach(t=>{t.paths.forEach(t=>{c.push(t),h.push(null)}),l.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,s=c.indexOf(t);h[s]=r,-1===h.indexOf(null)&&n({modelTopology:i,weightSpecs:l,weightData:Object(ua["d"])(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy,userDefinedMetadata:a.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},s.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(ua["c"])(t.name)),s={};for(const a of t)a.paths.forEach(t=>{const a=Object(ua["c"])(t);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[t]=e[r.indexOf(a)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return s}}const Qa=t=>Object(on["b"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ya.URL_SCHEME)?ti(t.slice(Ya.URL_SCHEME.length)):null;function ti(t="model"){return new Ya(t)}function ei(t){return new Za(t)}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(t,e,n,r){i(t),n=null==n?0:n,r=null==r?1:r,o(n,r);let s=0;const a=a=>(a.then(a=>{const i=n+ ++s/t.length*(r-n);return e(i),a}),a);function i(t){Object(pt["assert"])(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}function o(t,e){Object(pt["assert"])(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(pt["assert"])(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(pt["assert"])(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}return Promise.all(t.map(a))}la.registerSaveRouter(Qa);var ri=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function si(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(on["b"])().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=0,a=.5,i=null==e.onProgress?await Promise.all(r):await ni(r,e.onProgress,s,a),o=i.map(t=>t.arrayBuffer()),u=.5,l=1,c=null==e.onProgress?await Promise.all(o):await ni(o,e.onProgress,u,l);return c}async function ai(t,e="",n,r){const s=t=>si(t,{requestInit:r}),a=ii(s);return a(t,e,n)}function ii(t){return async(e,n="",r)=>{const s=e.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=ri["a"][u]*pt["sizeFromShape"](t.shape),c=()=>{s[e]=!0,null==a[e]&&(a[e]=[]),a[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),i[n]=!0)}):c(),o.push(t.name),n+=l})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=s.reduce((t,e,n)=>(e&&t.push(n),t),[]),l=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)})});const c=await t(l),h={};let d=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);i.set(t,o),o+=t.byteLength}const u=a[t];u.forEach(t=>{const e=s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(ua["e"])(e,[t.manifestEntry]);for(const r in n)h[r]=n[r]}),d+=n}),h}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi="application/octet-stream",ui="application/json";class li{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(Object(pt["assert"])("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(on["b"])().platform.fetch,Object(pt["assert"])(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(pt["assert"])(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:ui}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:oi}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Object(ua["g"])(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(c){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}return{modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=ci(e),s=this.weightPathPrefix||n,a=[];for(const u of t)a.push(...u.weights);const i=[];t.forEach(t=>{t.paths.forEach(t=>{i.push(s+t+r)})});const o=await si(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Object(ua["d"])(o)]}}function ci(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}function hi(t){return null!=t.match(li.URL_SCHEME_REGEX)}li.URL_SCHEME_REGEX=/^https?:\/\//;const di=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>hi(t)):hi(t),n)return pi(t,e)}return null};function pi(t,e){return new li(t,e)}function fi(t,e){return pi(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */la.registerSaveRouter(di),la.registerLoadRouter(di);class mi{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class gi{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function bi(t,e,n,r){if(1===arguments.length){const e=null!=t.modelTopology||null!=t.weightSpecs;return e?new mi(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mi({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mi({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function yi(t){return new gi(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);let s=Object(dt["a"])(t,"indices","oneHot","int32");const a=[...s.shape,e];s=s.flatten();const i=(t,i)=>(i([s]),Wt(t.oneHot(s,e,n,r),a)),o={indices:s},u={depth:e,onValue:n,offValue:r};return b["a"].runKernelFunc(i,o,null,J,u)}const wi=Object(It["a"])({oneHot_:xi});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(t,e,n){const r=Object(dt["a"])(t,"labels","confusionMatrix"),s=Object(dt["a"])(e,"predictions","confusionMatrix");pt["assert"](null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),pt["assert"](1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),pt["assert"](1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),pt["assert"](r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),pt["assert"](n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=wi(r.asType("int32"),n),i=wi(s.asType("int32"),n),o=a.transpose();return o.matMul(i).asType("int32")}Object(It["a"])({confusionMatrix_:vi});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Oi;function Si(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const o=Object(aa["b"])("FromPixels",b["a"].backendName);if(null!=o)return b["a"].runKernel("FromPixels",{pixels:t},{numChannels:e});const[u,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(i?c=t.getContext("2d").getImageData(0,0,u,l).data:r||n?c=t.data:(a||s)&&(null==Oi&&(Oi=document.createElement("canvas").getContext("2d")),Oi.canvas.width=u,Oi.canvas.height=l,Oi.drawImage(t,0,0,u,l),c=Oi.getImageData(0,0,u,l).data),4===e)h=new Int32Array(c);else{const t=u*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}const d=[l,u,e];return Object(kt["j"])(h,d,"int32")}async function Ci(t,e){let n=Object(dt["a"])(t,"img","toPixels");if(!(t instanceof ft["a"])){const t=n;n=t.toInt(),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);const i=await n.data(),o=n.min(),u=n.max(),l=await Promise.all([o.data(),u.data()]),c=l[0],h=l[1],d=c[0],p=h[0];if(o.dispose(),u.dispose(),"float32"===n.dtype){if(d<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [${d} - ${p}].`)}else{if("int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);if(d<0||p>255)throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [${d} - ${p}].`)}const f="float32"===n.dtype?255:1,m=new Uint8ClampedArray(s*r*4);for(let g=0;g<r*s;++g){let t,e,n,r;1===a?(t=i[g]*f,e=i[g]*f,n=i[g]*f,r=255):3===a?(t=i[3*g]*f,e=i[3*g+1]*f,n=i[3*g+2]*f,r=255):4===a&&(t=i[4*g]*f,e=i[4*g+1]*f,n=i[4*g+2]*f,r=i[4*g+3]*f);const s=4*g;m[s+0]=Math.round(t),m[s+1]=Math.round(e),m[s+2]=Math.round(n),m[s+3]=Math.round(r)}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(m,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),m}const Ii=Object(It["a"])({fromPixels_:Si});function ki(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let l=0;l<n.length-1;++l)s*=n[l];const a=t.shape,i=n.slice();i.pop();let o=1;for(let l=r;l<t.rank;++l)o*=a[l],i.push(a[l]);const u=[...Object(pt["computeStrides"])(t.shape).map(t=>t/o),1].slice(0,r);return[i,s,o,u]}function Ni(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==e.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==t[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${t[i+s]})`)}function Ei(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}Ni(n,e,t)}function Ai(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let h=s;h<a;++h)i*=n[h];const o=s<1?1:s,u=Object(pt["sizeFromShape"])(e.shape)/o,l=[...Object(pt["computeStrides"])(n.slice(0,s)),1],c=Object(pt["sizeFromShape"])(n);return{sliceRank:s,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $i{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ri{constructor(){this.classNameMap={}}static getMap(){return null==Ri.instance&&(Ri.instance=new Ri),Ri.instance}static register(t){Ri.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ti(t){Object(pt["assert"])(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(pt["assert"])("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(pt["assert"])(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ri.register(t)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
const Di="2.0.0";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(t){pt["assert"](Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),pt["assert"](t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(dt["a"])(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!pt["arraysEqual"](t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=(t,n)=>{const r=t.addN(e);return n(e),r},s=e;return b["a"].runKernelFunc(r,s,null,x)}const _i=Object(It["a"])({addN_:Fi});function ji(t){let e;return e=0===t.rank||1===t.rank?t.as4D(1,1,1,t.size):2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t,e}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(t,e,n,r,s,a){null==a&&(a=.001);const i=Object(dt["a"])(t,"x","batchNorm"),o=Object(dt["a"])(e,"mean","batchNorm"),u=Object(dt["a"])(n,"variance","batchNorm");let l,c;null!=s&&(l=Object(dt["a"])(s,"scale","batchNorm")),null!=r&&(c=Object(dt["a"])(r,"offset","batchNorm")),pt["assert"](o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),pt["assert"](null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),pt["assert"](null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=ji(i),d=(t,e)=>(e([h,o,u,l]),t.batchNorm(h,Mi(o),Mi(u),Mi(c),Mi(l),a)),p={x:h,scale:l,offset:c,mean:o,variance:u},f={varianceEpsilon:a},m=b["a"].runKernelFunc(d,p,null,z,f);return Wt(m,i.shape)}function Mi(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}const Li=Object(It["a"])({batchNorm_:zi});function Bi(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","batchNorm"),o=Object(dt["a"])(e,"mean","batchNorm"),u=Object(dt["a"])(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(dt["a"])(s,"scale","batchNorm")),null!=r&&(c=Object(dt["a"])(r,"offset","batchNorm")),pt["assert"](2===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),pt["assert"](2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),pt["assert"](2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&pt["assert"](2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&pt["assert"](2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Li(i,o,u,c,l,a)}const Pi=Object(It["a"])({batchNorm2d_:Bi});function Wi(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","batchNorm"),o=Object(dt["a"])(e,"mean","batchNorm"),u=Object(dt["a"])(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(dt["a"])(s,"scale","batchNorm")),null!=r&&(c=Object(dt["a"])(r,"offset","batchNorm")),pt["assert"](3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),pt["assert"](3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),pt["assert"](3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&pt["assert"](3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&pt["assert"](3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Li(i,o,u,c,l,a)}const Vi=Object(It["a"])({batchNorm3d_:Wi});function Ui(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","batchNorm"),o=Object(dt["a"])(e,"mean","batchNorm"),u=Object(dt["a"])(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(dt["a"])(s,"scale","batchNorm")),null!=r&&(c=Object(dt["a"])(r,"offset","batchNorm")),pt["assert"](4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),pt["assert"](4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),pt["assert"](4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&pt["assert"](4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&pt["assert"](4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Li(i,o,u,c,l,a)}const Gi=Object(It["a"])({batchNorm4d_:Ui});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(t){const e=Object(dt["a"])(t,"x","clone",null),n=()=>b["a"].makeTensorFromDataId(e.dataId,e.shape,e.dtype);return b["a"].runKernelFunc(n,{x:e},null,B)}const Hi=Object(It["a"])({clone_:qi});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(t,e){let n=Object(dt["a"])(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();while(t.length<e.length)t.unshift(1);n=Wt(n,t)}const s=n.shape,a=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])a[c]=1;else if(1!==n.shape[c])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);const i=a.map((t,e)=>t>1?e:-1).filter(t=>t>=0);if(0===i.length)return Hi(n);const o=t=>t.tile(n,a),u={x:n},l={shape:e,inputShape:s};return b["a"].runKernelFunc(o,u,null,O,l)}const Xi=Object(It["a"])({broadcastTo_:Ki});function Ji(t){return Et(t,0)}const Yi=Object(It["a"])({concat1d_:Ji});function Zi(t,e){return Et(t,e)}const Qi=Object(It["a"])({concat2d_:Zi});function to(t,e){return Et(t,e)}const eo=Object(It["a"])({concat3d_:to});function no(t,e){return Et(t,e)}const ro=Object(It["a"])({concat4d_:no});function so(t,e,n,r,s="NWC",a=1,i){const o=Object(dt["a"])(t,"x","conv1d"),u=Object(dt["a"])(e,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Wt(o,[1,o.shape[0],o.shape[1]])),pt["assert"](3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),pt["assert"](3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&pt["assert"](pt["isInt"](r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),pt["assert"](l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),pt["assert"](Be(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),pt["assert"]("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=Wt(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Wt(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=[1,n],f=[1,a],m="NHWC",g=Ke(d,h,p,r,m,f,i);return Wt(g,c?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}const ao=Object(It["a"])({conv1d_:so});function io(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","conv2dTranspose"),o=Object(dt["a"])(e,"filter","conv2dTranspose");return Ge(n,i,o,r,s,"NHWC",a)}const oo=Object(It["a"])({conv2dTranspose_:io});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=Object(dt["a"])(t,"x","conv3d"),o=Object(dt["a"])(e,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Wt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),pt["assert"](5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),pt["assert"](5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),pt["assert"](u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),pt["assert"](Be(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),pt["assert"]("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c=(t,e)=>{const s=Ae(u.shape,o.shape,n,a,r),i=t.conv3d(u,o,s);return e([u,o]),i},h={x:u,filter:o},d={strides:n,pad:r,dataFormat:s,dilations:a},p=b["a"].runKernelFunc(c,h,null,N,d);return l?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}const lo=Object(It["a"])({conv3d_:uo});function co(t,e,n,r,s){const a=Object(dt["a"])(t,"x","conv3dTranspose"),i=Object(dt["a"])(e,"filter","conv3dTranspose");return Qe(n,a,i,r,s)}const ho=Object(It["a"])({conv3dTranspose_:co});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function po(t,e,n="NHWC"){const r=Object(dt["a"])(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];pt["assert"](s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),pt["assert"](a*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`),pt["assert"](i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`);const o=t=>t.depthToSpace(r,e,n),u={x:r},l={blockSize:e,dataFormat:n};return b["a"].runKernelFunc(o,u,null,$,l)}const fo=Object(It["a"])({depthToSpace_:po});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(t,e,n,r,s="NHWC",a=[1,1],i){const o=Object(dt["a"])(t,"x","depthwiseConv2d"),u=Object(dt["a"])(e,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Wt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),pt["assert"](4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),pt["assert"](4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),pt["assert"](l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&pt["assert"](pt["isInt"](r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h=(t,e)=>{null==a&&(a=[1,1]),pt["assert"](Be(n,a),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const s=Ee(l.shape,u.shape,n,a,r,i,!0),o=t.depthwiseConv2D(l,u,s);return e([l,u]),o},d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=b["a"].runKernelFunc(h,d,null,R,p);return c?Wt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const go=Object(It["a"])({depthwiseConv2d_:mo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(t){const e=Object(dt["a"])(t,"x","diag").flatten(),n=n=>{const r=n.diag(e),s=[...t.shape,...t.shape];return Wt(r,s)},r={x:e};return b["a"].runKernelFunc(n,r,null,F)}const yo=Object(It["a"])({diag_:bo});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(t,e){const n=[];for(let a=0;a<e.length;a++)e[a]&&n.push(a);const r=zt(t,"int32"),s=zt([n.length,t.length],"int32");for(let a=0;a<n.length;a++){const e=r.indexToLoc(n[a]),i=a*t.length;s.values.set(e,i)}return s.toTensor()}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(t){const e=Object(dt["a"])(t,"x","logicalNot","bool");return b["a"].runKernelFunc(t=>t.logicalNot(e),{$x:e})}function vo(t,e){const n=Object(dt["a"])(t,"a","logicalAnd","bool"),r=Object(dt["a"])(e,"b","logicalAnd","bool");return ut(n.shape,r.shape),b["a"].runKernelFunc(t=>t.logicalAnd(n,r),{a:n,b:r},null,"LogicalAnd")}function Oo(t,e){const n=Object(dt["a"])(t,"a","logicalOr","bool"),r=Object(dt["a"])(e,"b","logicalOr","bool");return ut(n.shape,r.shape),b["a"].runKernelFunc(t=>t.logicalOr(n,r),{$a:n,$b:r})}function So(t,e){const n=Object(dt["a"])(t,"a","logicalXor","bool"),r=Object(dt["a"])(e,"b","logicalXor","bool");return ut(n.shape,r.shape),Eo(t,e).logicalAnd(ko(t,e).logicalNot())}function Co(t,e,n){const r=Object(dt["a"])(e,"a","where"),s=Object(dt["a"])(n,"b","where"),a=Object(dt["a"])(t,"condition","where","bool");Object(pt["assertShapesMatch"])(r.shape,s.shape,"Error in where: "),1===a.rank?Object(pt["assert"])(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."):Object(pt["assertShapesMatch"])(a.shape,s.shape,"Error in where: ");const i=(t,e)=>{const[n]=e;return{$condition:()=>Object(kt["p"])(n).toFloat(),$a:()=>t.mul(n.cast(t.dtype)),$b:()=>t.mul(n.logicalNot().cast(t.dtype))}};return b["a"].runKernelFunc((t,e)=>{const n=t.select(a,r,s);return e([a]),n},{$condition:a,$a:r,$b:s},i)}async function Io(t){const e=Object(dt["a"])(t,"condition","whereAsync","bool"),n=await e.data(),r=xo(e.shape,n);return t!==e&&e.dispose(),r}const ko=Object(It["a"])({logicalAnd_:vo}),No=Object(It["a"])({logicalNot_:wo}),Eo=Object(It["a"])({logicalOr_:Oo}),Ao=Object(It["a"])({logicalXor_:So}),$o=Object(It["a"])({where_:Co}),Ro=Io;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function To(t,e){let n=Object(dt["a"])(t,"a","div"),r=Object(dt["a"])(e,"b","div");[n,r]=Object(ht["makeTypesMatch"])(n,r);const s=ds(n,r),a=Object(kt["p"])(s),i=r.equal(a);return $o(i,a,s)}const Do=Object(It["a"])({divNoNan_:To});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(t,e){const n=Object(dt["a"])(t,"t1","dot"),r=Object(dt["a"])(e,"t2","dot");pt["assert"]((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(pt["assert"](s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const t=Wt(n,[1,-1]),e=Wt(r,[-1,1]),s=Kt(t,e);return Wt(s,[])}if(1===n.rank&&2===r.rank){const t=Wt(n,[1,-1]),e=Wt(r,[r.shape[0],r.shape[1]]),s=Kt(t,e);return Wt(s,[s.size])}if(2===n.rank&&1===r.rank){const t=Wt(r,[-1,1]),e=Kt(n,t);return Wt(e,[e.size])}{const t=Wt(r,[r.shape[0],r.shape[1]]),e=Kt(n,t);return e}}const _o=Object(It["a"])({dot_:Fo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(t,e){let n=Object(dt["a"])(t,"a","equal"),r=Object(dt["a"])(e,"b","equal");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=t=>t.equal(n,r),a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,j)}const zo=Object(It["a"])({equal_:jo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(t,e,n,r="float32"){null==e&&(e=t);const s=zt([t,e],r),a=t<=e?t:e;for(let o=0;o<a;++o)s.set(1,o,o);const i=s.toTensor().as2D(t,e);if(null==n)return i;if(1===n.length)return xs(Pt(i,0),[n[0],1,1]);if(2===n.length)return xs(Pt(Pt(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return xs(Pt(Pt(Pt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Lo=Object(It["a"])({eye_:Mo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(t,e){let n=Object(dt["a"])(t,"a","greater"),r=Object(dt["a"])(e,"b","greater");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=t=>t.greater(n,r),a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,M)}const Po=Object(It["a"])({greater_:Bo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(t,e){let n=Object(dt["a"])(t,"a","greaterEqual"),r=Object(dt["a"])(e,"b","greaterEqual");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=(t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s},a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,L)}const Vo=Object(It["a"])({greaterEqual_:Wo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(t,e){let n=Object(dt["a"])(t,"a","less"),r=Object(dt["a"])(e,"b","less");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=t=>t.less(n,r),a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,P)}const Go=Object(It["a"])({less_:Uo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(t,e){let n=Object(dt["a"])(t,"a","lessEqual"),r=Object(dt["a"])(e,"b","lessEqual");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=(t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s},a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,W)}const Ho=Object(It["a"])({lessEqual_:qo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(t,e=5,n=1,r=1,s=.5){const a=Object(dt["a"])(t,"x","localResponseNormalization");pt["assert"](4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),pt["assert"](pt["isInt"](e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=Wt(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u=(t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o},l={x:i},c={depthRadius:e,bias:n,alpha:r,beta:s},h=b["a"].runKernelFunc(u,l,null,V,c);return o?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}const Xo=Object(It["a"])({localResponseNormalization_:Ko});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(t,e=null,n=!1){const r=Object(dt["a"])(t,"x","max"),s=(t,n)=>{const s=pt["parseAxisParam"](e,r.shape);let a=s;const i=wt(a,r.rank);let o=r;null!=i&&(o=Ns(r,i),a=Ot(a.length,o.rank));const u=t.max(o,a);return n([r,u]),null!=i&&t.disposeData(o.dataId),u},a={x:r},i={reductionIndices:e,keepDims:n},o=b["a"].runKernelFunc(s,a,null,X,i);return n?Wt(o,yt(o.shape,pt["parseAxisParam"](e,r.shape))):o}const Yo=Object(It["a"])({max_:Jo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(t,e,n,r=!1){const s=Object(dt["a"])(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?s.as2D(1,-1):s,u=b["a"].runKernelFunc(t=>t.multinomial(o,r,e,n),{logits2D:o});return 1===i?u.as1D():u}const Qo=Object(It["a"])({multinomial_:Zo});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(t,e){let n=Object(dt["a"])(t,"a","notEqual"),r=Object(dt["a"])(e,"b","notEqual");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=t=>t.notEqual(n,r),a={a:n,b:r};return b["a"].runKernelFunc(s,a,null,q)}const eu=Object(It["a"])({notEqual_:tu});function nu(t,e){const n=Object(dt["a"])(t,"v1","outerProduct"),r=Object(dt["a"])(e,"v2","outerProduct");pt["assert"](1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=Wt(n,[-1,1]),a=Wt(r,[1,-1]);return Kt(s,a)}const ru=Object(It["a"])({outerProduct_:nu});function su(t,e,n=0){return Object(pt["assert"])(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Ls(t,[e],n)}const au=Object(It["a"])({pad1d_:su});function iu(t,e,n=0){return Object(pt["assert"])(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ls(t,e,n)}const ou=Object(It["a"])({pad2d_:iu});function uu(t,e,n=0){return Object(pt["assert"])(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ls(t,e,n)}const lu=Object(It["a"])({pad3d_:uu});function cu(t,e,n=0){return Object(pt["assert"])(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ls(t,e,n)}const hu=Object(It["a"])({pad4d_:cu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(t,e,n){const r=Object(pt["sizeFromShape"])(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=e();return b["a"].makeTensor(s,t,n)}const pu=Object(It["a"])({rand_:du});var fu=n("6125");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mu{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=fu["alea"](a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;while(!n){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class gu{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=fu["alea"](s.toString()),this.randn=new mu(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,a;while(1){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class bu{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=fu["alea"](r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yu(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new gu(e,n,r,s),i=zt(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const xu=Object(It["a"])({randomGamma_:yu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new mu(e,n,r,!1,s),i=zt(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const vu=Object(It["a"])({randomNormal_:wu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou(t,e=0,n=1,r="float32",s){const a=zt(t,r),i=new bu(e,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Su=Object(It["a"])({randomUniform_:Ou});function Cu(t,e,n,r,s,a=[1,1],i="NHWC"){const o=Object(dt["a"])(t,"x","separableConv2d"),u=Object(dt["a"])(e,"depthwiseFilter","separableConv2d"),l=Object(dt["a"])(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");pt["assert"](4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),pt["assert"](4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),pt["assert"](4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),pt["assert"](1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),pt["assert"](1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];pt["assert"](l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=go(c,u,r,s,i,a),m=1,g=Ke(f,l,m,"valid",i);return h?g.as3D(g.shape[1],g.shape[2],g.shape[3]):g}const Iu=Object(It["a"])({separableConv2d_:Cu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(t,e){let n=Object(dt["a"])(t,"a","squaredDifference"),r=Object(dt["a"])(e,"b","squaredDifference");[n,r]=Object(ht["makeTypesMatch"])(n,r),ut(n.shape,r.shape);const s=(t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s},a={a:n,b:r},i={};return b["a"].runKernelFunc(s,a,null,tt,i)}const Nu=Object(It["a"])({squaredDifference_:ku});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new mu(e,n,r,!0,s),i=zt(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const Au=Object(It["a"])({truncatedNormal_:Eu}),$u=30;
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(t){return t<=$u?t:Object(pt["nearestDivisor"])(t,Math.floor(Math.sqrt(t)))}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(t,e){let n,r=!1;t<=$u?(n=t,r=!0):n=Object(pt["nearestDivisor"])(t,Math.floor(Math.sqrt(t)));while(!r)n>e||n===t?r=!0:n=Object(pt["nearestDivisor"])(t,n+1);return n}function Du(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}function Fu(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let o=0;o<n;o++)s.push(t.shape[o]),a*=t.shape[o];for(let o=0;o<e.rank;o++)s.push(e.shape[o]);for(let o=n+1;o<t.rank;o++)s.push(t.shape[o]),i*=t.shape[o];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(t,e,n){const r=Object(dt["a"])(t,"x","unsortedSegmentSum"),s=Object(dt["a"])(e,"segmentIds","unsortedSegmentSum","int32");Object(pt["assert"])(Object(pt["isInt"])(n),()=>"numSegments must be of dtype int");const a=(t,e)=>{const[n]=e,r=()=>Lu(t,n);return{$x:r}};return b["a"].runKernelFunc((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a},{$x:r},a)}function ju(t,e,n=0){const r=Object(dt["a"])(t,"x","gather"),s=Object(dt["a"])(e,"indices","gather","int32");n=Object(pt["parseAxisParam"])(n,r.shape)[0];const a=Fu(r,s,n),i=(t,e)=>{const[s]=e,a=()=>{const e=r.shape,a=s.size,i=e.slice(0,n),o=i.length,u=e.slice(n,e.length).slice(1),l=u.length,c=zu(0,o),h=zu(o+1,o+1+l),d=Mu([i,[a],u]),p=t.reshape(d),f=s.reshape([a]),m=Mu([[o],c,h]),g=p.transpose(m);let b=Pu(g,f,r.shape[n]);const y=vt(m);return b=b.transpose(y),b};return{x:a,indices:()=>s}};return b["a"].runKernelFunc((t,e)=>{const a=t.gather(r,s.flatten(),n);return e([s]),a},{x:r,indices:s},i,"Gather",{axis:n}).reshape(a.outputShape)}function zu(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Mu(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}function Lu(t,e){const n=Qr(e,Object(kt["p"])(e)),r=Bu(t,n);let s=Vo(e,Object(kt["f"])(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=Pt(s,o+1);s=ko(s,Object(kt["c"])(r.shape,"bool"));const i=Object(kt["p"])(r);return $o(s,r,i)}const Bu=Object(It["a"])({gather_:ju}),Pu=Object(It["a"])({unsortedSegmentSum_:_u});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Wu(t,e,n){const r=Object(dt["a"])(t,"tensor","boolMask"),s=Object(dt["a"])(e,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;pt["assert"](i>0,()=>"mask cannot be scalar"),pt["assertShapesMatch"](o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=r.reshape(l),h=s.reshape([-1]),d=await Ro(h),p=d.squeeze([1]),f=Bu(c,p,a);return t!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const Vu=Wu;var Uu=n("a677");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(t){const e=Object(dt["a"])(t,"x","reverse");return pt["assert"](1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Ju(e,0)}function qu(t,e){const n=Object(dt["a"])(t,"x","reverse");return pt["assert"](2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ju(n,e)}function Hu(t,e){const n=Object(dt["a"])(t,"x","reverse");return pt["assert"](3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ju(n,e)}function Ku(t,e){const n=Object(dt["a"])(t,"x","reverse");return pt["assert"](4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ju(n,e)}function Xu(t,e){const n=Object(dt["a"])(t,"x","reverse");if(0===n.rank)return n.clone();const r=pt["parseAxisParam"](e,n.shape),s=t=>({$x:()=>t.reverse(r)}),a=b["a"].runKernelFunc(t=>t.reverse(n,r),{$x:n},s);return a.reshapeAs(n)}const Ju=Object(It["a"])({reverse_:Xu}),Yu=Object(It["a"])({reverse1d_:Gu}),Zu=Object(It["a"])({reverse2d_:qu}),Qu=Object(It["a"])({reverse3d_:Hu}),tl=Object(It["a"])({reverse4d_:Ku});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function el(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),null==r&&(r=[1,1]),pt["assert"](4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),pt["assert"](Be(n,r),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),null!=a&&pt["assert"](pt["isInt"](s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const l=ke(o.shape,e,n,r,s,a);if(1===l.filterWidth&&1===l.filterHeight&&pt["arraysEqual"](l.inShape,l.outShape))return i.clone();const c=(t,a)=>{const[i,o]=a;return{x:()=>il(t,i,o,e,n,r,s)}},h=[o],d=b["a"].runKernelFunc((t,e)=>{const n=t.maxPool(o,l);return e([o,n]),n},{x:o},c,"MaxPool",l,h);return u?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function nl(t,e,n,r,s){return el(t,e,n,1,r,s)}function rl(t,e,n,r,s,a){const i=Object(dt["a"])(t,"x","avgPool","float32");null==r&&(r=[1,1]),pt["assert"](Be(n,r),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);let o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),pt["assert"](4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),null!=a&&pt["assert"](pt["isInt"](s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const l=ke(o.shape,e,n,r,s,a);if(1===l.filterWidth&&1===l.filterHeight&&pt["arraysEqual"](l.inShape,l.outShape))return i.clone();const c=t=>({x:()=>ol(t,o,e,n,r,s)});let h=b["a"].runKernelFunc(t=>t.avgPool(o,l),{x:o},c,"AvgPool",l);return h=h.cast(i.dtype),u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function sl(t,e,n,r,s){return rl(t,e,n,1,r,s)}function al(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Object(dt["a"])(t,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),pt["assert"](Be(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const l=ke(o.shape,e,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?ll([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=ul([l.inHeight,l.inWidth],c,h),m=d?r:"valid",g=d?o:Yt(o,c,p),b="avg"===n?()=>rl(g,e,a,1,m):()=>el(g,e,a,1,m),y=b(),x=d?y:Ts(y,c,f);return u?x.as3D(x.shape[1],x.shape[2],x.shape[3]):x}function il(t,e,n,r,s,a,i,o){const u=Object(dt["a"])(t,"dy","maxPoolBackprop"),l=Object(dt["a"])(e,"input","maxPoolBackprop"),c=Object(dt["a"])(n,"output","maxPoolBackprop");pt["assert"](l.rank===u.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`),null==a&&(a=[1,1]),pt["assert"](Be(s,a),()=>`Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),pt["assert"](4===u.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),pt["assert"](4===l.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."),null!=o&&pt["assert"](pt["isInt"](i),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const h=ke(l.shape,r,s,a,i,o),d=b["a"].runKernelFunc(t=>t.maxPoolBackprop(u,l,c,h),{$dy:u,$input:l});return d}function ol(t,e,n,r,s,a){const i=Object(dt["a"])(t,"dy","avgPoolBackprop"),o=Object(dt["a"])(e,"input","avgPoolBackprop");pt["assert"](o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`),null==s&&(s=[1,1]),pt["assert"](Be(r,s),()=>`Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let u=o,l=i,c=!1;3===o.rank&&(c=!0,u=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]),l=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),pt["assert"](4===l.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."),pt["assert"](4===u.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+".");const h=ke(u.shape,n,r,s,a),d=b["a"].runKernelFunc(t=>t.avgPoolBackprop(l,u,h),{dy4D:l,input4D:u});return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}function ul(t,e,n){const r=n.map(t=>t[0]),s=n.map(t=>t[1]),a=t.concat(r,s),i=e.map((t,e)=>(t-a[e]%t)%t),o=s.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),l=e.map((t,e)=>[0,i[e]]);return[u,l]}function ll(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)),r=n.map(t=>t-1),s=r.map(t=>Math.floor(t/2)),a=r.map((t,e)=>t-s[e]);return r.map((t,e)=>[s[e],a[e]])}function cl(t,e,n,r,s,a="NDHWC",i){const o=Object(dt["a"])(t,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==i&&(i=[1,1,1]),pt["assert"](5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),pt["assert"]("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),pt["assert"](Be(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&pt["assert"](pt["isInt"](r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c=Ne(u.shape,e,n,i,r,s,a),h=t=>({x:()=>hl(t,u,e,n,i,r,s)});let d=b["a"].runKernelFunc(t=>t.avgPool3d(u,c),{x:u},h);return d=d.cast(u.dtype),l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}function hl(t,e,n,r,s,a,i){const o=Object(dt["a"])(t,"dy","avgPool3dBackprop"),u=Object(dt["a"])(e,"input","avgPool3dBackprop");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),pt["assert"](5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),pt["assert"](5===c.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."),null==s&&(s=[1,1,1]),pt["assert"](Be(r,s),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=i&&pt["assert"](pt["isInt"](a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d=Ne(c.shape,n,r,s,a,i),p=b["a"].runKernelFunc(t=>t.avgPool3dBackprop(l,c,d),{dy5D:l,input5D:c});return h?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}function dl(t,e,n,r,s,a="NDHWC",i){const o=Object(dt["a"])(t,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==i&&(i=[1,1,1]),pt["assert"](5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),pt["assert"]("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),pt["assert"](Be(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&pt["assert"](pt["isInt"](r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c=Ne(u.shape,e,n,i,r,s,a),h=(t,a)=>{const[o,u]=a;return{x:()=>pl(t,o,u,e,n,i,r,s)}},d=b["a"].runKernelFunc((t,e)=>{const n=t.maxPool3d(u,c);return e([u,n]),n},{x:u},h);return l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}function pl(t,e,n,r,s,a,i,o){const u=Object(dt["a"])(t,"dy","maxPool3dBackprop"),l=Object(dt["a"])(e,"input","maxPool3dBackprop"),c=Object(dt["a"])(n,"output","maxPool3dBackprop");let h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),p=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),pt["assert"](5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),pt["assert"](5===d.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),pt["assert"](5===p.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."),null==a&&(a=[1,1,1]),pt["assert"](Be(s,a),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),null!=o&&pt["assert"](pt["isInt"](i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const m=Ne(d.shape,r,s,a,i,o),g=b["a"].runKernelFunc(t=>t.maxPool3dBackprop(h,d,p,m),{dy5D:h,input5D:d});return f?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}function fl(t,e,n,r,s=!1){const a=Object(dt["a"])(t,"x","maxPoolWithArgmax"),i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=b["a"].runKernel("MaxPoolWithArgmax",{x:a},i);return{result:o[0],indexes:o[1]}}const ml=Object(It["a"])({maxPool_:nl}),gl=Object(It["a"])({avgPool_:sl}),bl=Object(It["a"])({pool_:al}),yl=Object(It["a"])({maxPool3d_:dl}),xl=Object(It["a"])({avgPool3d_:cl}),wl=Object(It["a"])({maxPoolWithArgmax_:fl});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vl(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","notEqualStrict"),r=Object(dt["a"])(e,"b","notEqualStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}function Ol(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","lessStrict"),r=Object(dt["a"])(e,"b","lessStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}function Sl(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","equalStrict"),r=Object(dt["a"])(e,"b","equalStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}function Cl(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","lessEqualStrict"),r=Object(dt["a"])(e,"b","lessEqualStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}function Il(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","greaterStrict"),r=Object(dt["a"])(e,"b","greaterStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}function kl(t,e){un("strict variants of ops have been deprecated and will be removed in future");const n=Object(dt["a"])(t,"a","greaterEqualStrict"),r=Object(dt["a"])(e,"b","greaterEqualStrict");return Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}const Nl=Object(It["a"])({equalStrict_:Sl}),El=Object(It["a"])({greaterEqualStrict_:kl}),Al=Object(It["a"])({greaterStrict_:Il}),$l=Object(It["a"])({lessEqualStrict_:Cl}),Rl=Object(It["a"])({lessStrict_:Ol}),Tl=Object(It["a"])({notEqualStrict_:vl}),Dl=1.7580993408473768,Fl=1.0507009873554805;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _l(t){const e=Object(dt["a"])(t,"x","relu");if("bool"===e.dtype)return e.toInt();const n=(t,e)=>{const[n]=e;return{x:()=>as(t,n.step().toFloat())}};return b["a"].runKernelFunc((t,n)=>{const r=t.relu(e);return n([e]),r},{x:e},n,"Relu")}function jl(t){const e=Object(dt["a"])(t,"x","relu6");if("bool"===e.dtype)return e.toInt();const n=(t,e)=>{const[n]=e,r=n.lessEqual(6).mul(n.step());return{x:()=>as(t,r.toFloat())}};return b["a"].runKernelFunc((t,n)=>{const r=t.relu6(e);return n([e]),r},{x:e},n,"Relu6")}function zl(t){const e=Object(dt["a"])(t,"x","elu"),n=(t,e)=>{const[n]=e;return{$x:()=>b["a"].runKernelFunc(e=>e.eluDer(t,n),{dy:t,y:n})}};return b["a"].runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},{$x:e},n)}function Ml(t){const e=Object(dt["a"])(t,"x","selu"),n=(t,e)=>{const[n]=e;return{$x:()=>{const e=n.greater(Object(kt["f"])(0)),r=Object(kt["f"])(Dl),s=Object(kt["f"])(Fl),a=t.mul(s),i=t.mul(r).mul(n.toFloat().exp());return $o(e,a,i)}}};return b["a"].runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},{$x:e},n)}function Ll(t,e=.2){const n=Object(dt["a"])(t,"x","leakyRelu");return Qr(Object(kt["f"])(e).mul(n),n)}function Bl(t,e){const n=Object(dt["a"])(t,"x","prelu"),r=Object(dt["a"])(e,"alpha","prelu"),s=(t,e)=>{const[n,r]=e,s=n.greater(0);return{x:()=>$o(s,t,t.mul(r)),alpha:()=>{let e=$o(s,Object(kt["p"])(t),t.mul(n));const a=ot(r.shape,t.shape);return a.length>0&&(e=e.sum(a)),e.reshape(r.shape)}}};return b["a"].runKernelFunc((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s},{x:n,alpha:r},s,"Prelu")}const Pl=Object(It["a"])({elu_:zl}),Wl=Object(It["a"])({leakyRelu_:Ll}),Vl=Object(It["a"])({prelu_:Bl}),Ul=Object(It["a"])({relu_:_l}),Gl=Object(It["a"])({relu6_:jl}),ql=Object(It["a"])({selu_:Ml});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hl(t,e=-1){const n=Object(dt["a"])(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r=[],s=[!0];return b["a"].runKernelFunc((t,r)=>{const s=t.softmax(n,e);return r([s]),s},{logits:n},(t,n)=>{const[r]=n,s=t.mul(r),a=!0;return{logits:()=>s.sub(s.sum([e],a).mul(r))}},"Softmax",{dim:e},r,s)}function Kl(t,e=-1){const n=Object(dt["a"])(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=te((t,n)=>{const r=!0,s=t.max(e,!0),a=t.sub(s),i=a.toFloat().sub(a.exp().sum(e,r).log());n([i]);const o=(t,n)=>{const[s]=n,a=s.exp();return t.sub(t.sum(e,r).mul(a))};return{value:i,gradFunc:o}});return r(n)}const Xl=Object(It["a"])({softmax_:Hl}),Jl=Object(It["a"])({logSoftmax_:Kl});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yl(t,e="euclidean",n=null,r=!1){t=Object(dt["a"])(t,"x","norm");const s=Zl(t,e,n);let a=s.shape;if(r){const e=Object(pt["parseAxisParam"])(n,t.shape);a=yt(s.shape,e)}return s.reshape(a)}function Zl(t,e,n=null){if(0===t.rank)return t.abs();if(1!==t.rank&&null===n)return Zl(t.reshape([-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return t.abs().sum(n);if(e===1/0)return t.abs().max(n);if(e===-1/0)return t.abs().min(n);if("euclidean"===e||2===e)return t.abs().pow(Object(kt["f"])(2,"int32")).sum(n).sqrt();throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return t.abs().sum(n[0]).max(n[1]-1);if(e===1/0)return t.abs().sum(n[1]).max(n[0]);if(e===-1/0)return t.abs().sum(n[1]).min(n[0]);if("fro"===e||"euclidean"===e)return t.square().sum(n).sqrt();throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const Ql=Object(It["a"])({norm_:Yl});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tc(t,e,n,r){const s=Object(dt["a"])(e,"data","multiRNNCell"),a=Object(dt["b"])(n,"c","multiRNNCell"),i=Object(dt["b"])(r,"h","multiRNNCell");let o=s;const u=[];for(let h=0;h<t.length;h++){const e=t[h](o,a[h],i[h]);u.push(e[0]),u.push(e[1]),o=e[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}function ec(t,e,n,r,s,a){const i=Object(dt["a"])(t,"forgetBias","basicLSTMCell"),o=Object(dt["a"])(e,"lstmKernel","basicLSTMCell"),u=Object(dt["a"])(n,"lstmBias","basicLSTMCell"),l=Object(dt["a"])(r,"data","basicLSTMCell"),c=Object(dt["a"])(s,"c","basicLSTMCell"),h=Object(dt["a"])(a,"h","basicLSTMCell"),d=l.concat(h,1),p=d.matMul(o),f=p.add(u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=f.slice([0,0],b),x=f.slice([0,g],b),w=f.slice([0,2*g],b),v=f.slice([0,3*g],b),O=y.sigmoid().mul(x.tanh()).add(c.mul(i.add(w).sigmoid())),S=O.tanh().mul(v.sigmoid());return[O,S]}const nc=Object(It["a"])({basicLSTMCell_:ec}),rc=Object(It["a"])({multiRNNCell_:tc});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sc(t,e,n,r,s=!0){const a=Object(dt["a"])(t,"v","movingAverage"),i=Object(dt["a"])(e,"x","movingAverage"),o=Object(dt["a"])(n,"decay","movingAverage");Object(ht["assertTypesMatch"])(a,i),pt["assert"](pt["arraysEqual"](a.shape,i.shape),()=>"Shape mismatch in v and x");const u=Object(kt["f"])(1),l=u.sub(o);let c=i.sub(a).mul(l);if(s){pt["assert"](null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(dt["a"])(r,"step","movingAverage");c=c.div(u.sub(os(o,t)))}return a.add(c)}const ac=Object(It["a"])({movingAverage_:sc});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ic(t,e,n,r,s=0,a=0,i=0,o=0,u=0){if(null==r&&(r=new Array(e.length)),0!==i)throw new Error("ellipsis mask is not yet supported");let l=Object(dt["a"])(t,"x","stridedSlice");const c=Ps(o),h=l.shape.slice();c.forEach(t=>{e[t]=0,n[t]=1,h.splice(t,0,1)}),l=l.reshape(h);for(let b=0;b<l.rank;b++)e[b]=Vs(s,e,r,l.shape,b),n[b]=Us(a,n,r,l.shape,b),r[b]=r[b]||1;const d=Ps(u);d.forEach(t=>{n[t]=e[t]+1,r[t]=1});const p=Ws(e,n,r),f=p.filter((t,e)=>-1===d.indexOf(e)),m=r.every(t=>1===t);if(m)return Zs(l,e,p).reshape(f);const g=b["a"].runKernelFunc(t=>t.stridedSlice(l,e,n,r),{$x:l});return g.reshape(f)}const oc=Object(It["a"])({stridedSlice_:ic});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uc(t,e=1,n=!0){const r=Object(dt["a"])(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+e);const[a,i]=b["a"].runKernelFunc(t=>t.topk(r,e,n),{$x:r});return{values:a,indices:i}}const lc=Object(It["a"])({topk_:uc});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(t,e,n){const r=Object(dt["a"])(t,"indices","scatterND","int32"),s=Object(dt["a"])(e,"updates","scatterND");return Ei(s,r,n),b["a"].runKernelFunc(t=>t.scatterND(r,s,n),{indices:r,updates:s},null,"ScatterNd",{shape:n})}const hc=Object(It["a"])({scatterND_:cc});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dc(t){Object(pt["assert"])("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e),s=b["a"].runKernelFunc(t=>t.fft(r),{input:t});return s.reshape(t.shape)}function pc(t){Object(pt["assert"])("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e),s=b["a"].runKernelFunc(t=>t.ifft(r),{input:t});return s.reshape(t.shape)}function fc(t,e){Object(pt["assert"])("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,s=t.slice(r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=t.concat(Object(kt["o"])(r),t.shape.length-1),n=e}else s=t;const a=s.zerosLike(),i=Object(Uu["a"])(s,a).as2D(r,n),o=gc(i),u=Math.floor(n/2)+1,l=Object(Uu["c"])(o),c=Object(Uu["b"])(o),h=l.split([u,n-u],l.shape.length-1),d=c.split([u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,Object(Uu["a"])(h[0],d[0]).reshape(p)}function mc(t){const e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){const r=t.as2D(n,e),s=bc(r);return Object(Uu["c"])(s)}{const r=[n,2*(e-1)],s=Object(Uu["c"])(t).as2D(n,e),a=Object(Uu["b"])(t).as2D(n,e),i=s.slice([0,1],[n,e-2]).reverse(1),o=a.slice([0,1],[n,e-2]).reverse(1).mul(Object(kt["f"])(-1)),u=s.concat(i,1),l=a.concat(o,1),c=Object(Uu["a"])(u,l).as2D(r[0],r[1]),h=bc(c);return Object(Uu["c"])(h)}}const gc=Object(It["a"])({fft_:dc}),bc=Object(It["a"])({ifft_:pc}),yc=Object(It["a"])({rfft_:fc}),xc=Object(It["a"])({irfft_:mc});function wc(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(t,e,n,r=0){const s=Object(dt["a"])(t,"sparseIndices","sparseToDense","int32"),a=Object(dt["a"])(e,"sparseValues","sparseToDense"),i=Object(dt["a"])(r,"defaultValue","sparseToDense",a.dtype);return wc(s,a,n,i),b["a"].runKernelFunc(t=>t.sparseToDense(s,a,n,i),{$sparseIndices:s,$sparseValues:a,$defaultValue:i})}const Oc=Object(It["a"])({sparseToDense_:vc});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sc(t,e){const n=Object(dt["a"])(e,"indices","gatherND","int32"),r=Object(dt["a"])(t,"x","gatherND");return b["a"].runKernelFunc(t=>t.gatherND(r,n),{x:r,indices:n},null,"GatherNd")}const Cc=Object(It["a"])({gatherND_:Sc});
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(t,e){if(null==e)return t.shape.slice();if(pt["arraysEqual"](t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(t,e,n,r){const s=Object(dt["a"])(t,"x","dropout");if(pt["assert"]("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),pt["assert"](e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof ft["a"]?s.clone():s;const a=Ic(s,n),i=1-e,o=Su(a,0,1,"float32",r).add(i).floor().div(i);return s.mul(o)}const Nc=Object(It["a"])({dropout_:kc});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(t){return Dc(t,.5,.5)}function Ac(t){return Dc(t,.54,.46)}function $c(t,e,n,r=!1,s=0){let a=0;const i=[];while(a+e<=t.size)i.push(Zs(t,a,e)),a+=n;if(r)while(a<t.size){const r=a+e-t.size,o=Et([Zs(t,a,e-r),Object(kt["a"])([r],s)]);i.push(o),a+=n}return 0===i.length?Object(kt["i"])([],[0,e]):Et(i).as2D(i.length,e)}function Rc(t,e,n,r,s=Fc){null==r&&(r=Tc(e));const a=jc(t,e,n),i=as(a,s(e)),o=[];for(let u=0;u<a.shape[0];u++)o.push(yc(i.slice([u,0],[1,e]),r));return Et(o)}function Tc(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Dc(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return Object(kt["h"])(s,"float32")}const Fc=Object(It["a"])({hannWindow_:Ec}),_c=Object(It["a"])({hammingWindow_:Ac}),jc=Object(It["a"])({frame_:$c}),zc=Object(It["a"])({stft_:Rc});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Mc(t,e,n=1){const r=Object(dt["a"])(t,"predictions","inTopK"),s=Object(dt["a"])(e,"targets","inTopK");Object(pt["assert"])(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(pt["assert"])(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Object(pt["assertShapesMatch"])(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Object(pt["assert"])(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=Object(pt["getTypedArrayFromDType"])("bool",u);for(let h=0;h<u;h++){const t=h*l,e=i.subarray(t,t+l),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===o[h]){c[h]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Object(kt["g"])(c,s.shape,"bool")}const Lc=Mc;
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bc;function Pc(t,e,n=Bc.SUM_BY_NONZERO_WEIGHTS){const r=Object(dt["a"])(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Object(dt["a"])(e,"weights","computeWeightedLoss"));const a=null==s?r:r.mul(s);if(n===Bc.NONE)return a;if(n===Bc.SUM)return a.sum();if(n===Bc.MEAN){if(null==s)return a.mean();{const t=r.size/s.size,e=a.sum().div(s.sum());return t>1?e.div(Object(kt["f"])(t)):e}}if(n===Bc.SUM_BY_NONZERO_WEIGHTS){if(null==s)return a.sum().div(Object(kt["f"])(r.size));{const t=s.mul(Object(kt["c"])(r.shape)),e=t.notEqual(Object(kt["f"])(0)).sum().toFloat();return a.sum().div(e)}}throw Error("Unknown reduction: "+n)}function Wc(t,e,n,r=Bc.SUM_BY_NONZERO_WEIGHTS){const s=Object(dt["a"])(t,"labels","absoluteDifference"),a=Object(dt["a"])(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(dt["a"])(n,"weights","absoluteDifference")),Object(pt["assertShapesMatch"])(s.shape,a.shape,"Error in absoluteDifference: ");const o=s.sub(a).abs();return Qc(o,i,r)}function Vc(t,e,n,r=Bc.SUM_BY_NONZERO_WEIGHTS){const s=Object(dt["a"])(t,"labels","meanSquaredError"),a=Object(dt["a"])(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(dt["a"])(n,"weights","meanSquaredError")),Object(pt["assertShapesMatch"])(s.shape,a.shape,"Error in meanSquaredError: ");const o=s.squaredDifference(a);return Qc(o,i,r)}function Uc(t,e,n,r,s=Bc.SUM_BY_NONZERO_WEIGHTS){const a=Object(dt["a"])(t,"labels","cosineDistance"),i=Object(dt["a"])(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(dt["a"])(r,"weights","cosineDistance")),Object(pt["assertShapesMatch"])(a.shape,i.shape,"Error in cosineDistance: ");const u=Object(kt["f"])(1),l=u.sub(a.mul(i).sum(n,!0));return Qc(l,o,s)}function Gc(t,e,n,r=Bc.SUM_BY_NONZERO_WEIGHTS){let s=Object(dt["a"])(t,"labels","hingeLoss");const a=Object(dt["a"])(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(dt["a"])(n,"weights","hingeLoss")),Object(pt["assertShapesMatch"])(s.shape,a.shape,"Error in hingeLoss: ");const o=Object(kt["f"])(1);s=Object(kt["f"])(2).mul(s).sub(o);const u=o.sub(s.mul(a)).relu();return Qc(u,i,r)}function qc(t,e,n,r=1e-7,s=Bc.SUM_BY_NONZERO_WEIGHTS){const a=Object(dt["a"])(t,"labels","logLoss"),i=Object(dt["a"])(e,"predictions","logLoss");let o=null;null!=n&&(o=Object(dt["a"])(n,"weights","logLoss")),Object(pt["assertShapesMatch"])(a.shape,i.shape,"Error in logLoss: ");const u=Object(kt["f"])(1),l=Object(kt["f"])(r),c=a.mul(i.add(l).log()).neg().sub(u.sub(a).mul(u.sub(i).add(l).log()));return Qc(c,o,s)}function Hc(t,e){const n=Object(dt["a"])(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(dt["a"])(e,"logits","sigmoidCrossEntropyWithLogits");Object(pt["assertShapesMatch"])(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=r.relu(),a=r.mul(n),i=r.abs().neg().exp().log1p();return s.sub(a).add(i)}function Kc(t,e,n,r=0,s=Bc.SUM_BY_NONZERO_WEIGHTS){let a=Object(dt["a"])(t,"multiClassLabels","sigmoidCrossEntropy");const i=Object(dt["a"])(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Object(dt["a"])(n,"weights","sigmoidCrossEntropy")),Object(pt["assertShapesMatch"])(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(kt["f"])(r),e=Object(kt["f"])(1),n=Object(kt["f"])(.5);a=a.mul(e.sub(t)).add(n.mul(t))}const u=Hc(a,i);return Qc(u,o,s)}function Xc(t,e,n,r=1,s=Bc.SUM_BY_NONZERO_WEIGHTS){const a=Object(dt["a"])(t,"labels","huberLoss"),i=Object(dt["a"])(e,"predictions","huberLoss");let o=null;null!=n&&(o=Object(dt["a"])(n,"weights","huberLoss")),Object(pt["assertShapesMatch"])(a.shape,i.shape,"Error in huberLoss: ");const u=Object(kt["f"])(r),l=i.sub(a).abs(),c=es(l,u),h=l.sub(c),d=Object(kt["f"])(.5).mul(c.square()).add(u.mul(h));return Qc(d,o,s)}function Jc(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);const r=te((t,e,r)=>{const s=!0,a=e.logSumExp([n],s),i=e.toFloat().sub(a);r([t,i]);const o=i.mul(t).neg(),u=o.sum([n]),l=(t,e)=>{const[r,s]=e,a=yt(t.shape,[n]);return[t.reshape(a).mul(r.toFloat().sub(s.exp())),t.reshape(a).mul(s.exp().sub(r.toFloat()))]};return{value:u,gradFunc:l}});return r(t,e)}function Yc(t,e,n,r=0,s=Bc.SUM_BY_NONZERO_WEIGHTS){let a=Object(dt["a"])(t,"onehotLabels","softmaxCrossEntropy");const i=Object(dt["a"])(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Object(dt["a"])(n,"weights","softmaxCrossEntropy")),Object(pt["assertShapesMatch"])(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(kt["f"])(r),e=Object(kt["f"])(1),n=Object(kt["f"])(a.shape[1]);a=a.mul(e.sub(t)).add(t.div(n))}const u=Jc(a,i);return Qc(u,o,s)}(function(t){t[t["NONE"]=0]="NONE",t[t["MEAN"]=1]="MEAN",t[t["SUM"]=2]="SUM",t[t["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(Bc||(Bc={}));const Zc=Object(It["a"])({absoluteDifference_:Wc}),Qc=Object(It["a"])({computeWeightedLoss_:Pc}),th=Object(It["a"])({cosineDistance_:Uc}),eh=Object(It["a"])({hingeLoss_:Gc}),nh=Object(It["a"])({huberLoss_:Xc}),rh=Object(It["a"])({logLoss_:qc}),sh=Object(It["a"])({meanSquaredError_:Vc}),ah=Object(It["a"])({sigmoidCrossEntropy_:Kc}),ih=Object(It["a"])({softmaxCrossEntropy_:Yc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oh(t,e,n){if(e%1!==0)throw new Error(`bandPart(): numLower must be an integer, got ${e}.`);if(n%1!==0)throw new Error(`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(dt["a"])(t,"a","bandPart");if(r.rank<2)throw new Error(`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=Object(kt["e"])(0,a,1,"int32").reshape([-1,1]),u=Object(kt["e"])(0,i,1,"int32"),l=bs(o,u),c=ko(l.lessEqual(Object(kt["f"])(+e,"int32")),l.greaterEqual(Object(kt["f"])(-n,"int32"))),h=Object(kt["o"])([a,i],r.dtype);return Ut(Gt(r.reshape([-1,a,i])).map(t=>$o(c,t,h))).reshape(s)}function uh(t){let e;if(Array.isArray(t)){e=!1,Object(pt["assert"])(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(pt["assert"])(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Ce(t,t.shape[0],0).map(t=>Vt(t,[0]));Object(pt["assert"])(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(b["a"].tidy(()=>{let t=r[s];if(s>0)for(let e=0;e<s;++e){const r=we(n[e].mul(t)).mul(n[e]);t=t.sub(r)}return t.div(Ql(t,"euclidean"))}));return e?Ut(n,0):n}function lh(t,e=!1){if(t.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+t.rank);if(2===t.rank)return ch(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Gt(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach(t=>{const[n,r]=ch(t,e);s.push(n),a.push(r)});const i=Ut(s,0).reshape(t.shape),o=Ut(a,0).reshape(t.shape);return[i,o]}}function ch(t,e=!1){return b["a"].tidy(()=>{if(2!==t.shape.length)throw new Error(`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=Lo(n),a=t.clone();const i=Object(kt["i"])([[1]],[1,1]);let o=i.clone();const u=n>=r?r:n;for(let t=0;t<u;++t){const e=a,u=o,l=s;[o,a,s]=b["a"].tidy(()=>{const e=a.slice([t,t],[n-t,1]),u=e.norm(),l=a.slice([t,t],[1,1]),c=Object(kt["i"])([[-1]]).where(l.greater(0),Object(kt["i"])([[1]])),h=l.sub(c.mul(u)),d=e.div(h);o=1===d.shape[0]?i.clone():i.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);const p=c.matMul(h).div(u).neg(),f=a.slice([t,0],[n-t,r]),m=p.mul(o),g=o.transpose();if(0===t)a=f.sub(m.matMul(g.matMul(f)));else{const e=f.sub(m.matMul(g.matMul(f)));a=a.slice([0,0],[t,r]).concat(e,0)}const b=m.transpose(),y=s.slice([0,t],[n,s.shape[1]-t]);if(0===t)s=y.sub(y.matMul(o).matMul(b));else{const e=y.sub(y.matMul(o).matMul(b));s=s.slice([0,0],[n,t]).concat(e,1)}return[o,a,s]}),dn([e,u,l])}return!e&&n>r&&(s=s.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[s,a]})}const hh=Object(It["a"])({bandPart_:oh}),dh=Object(It["a"])({gramSchmidt_:uh}),ph=Object(It["a"])({qr_:lh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fh(t,e,n){const r=mh(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function mh(t,e,n){return bh(t,e,n||gh)}function gh(t,e){return t>e?1:t<e?-1:0}function bh(t,e,n){let r=0,s=t.length,a=0,i=!1;while(r<s){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yh(t,e,n,r,s){const a=0,i=wh(t,e,n,r,s,a);return i.selectedScores.dispose(),i.numValidOutputs.dispose(),i.selectedIndices}function xh(t,e,n,r,s,a){const i=!0,o=wh(t,e,n,r,s,a,i);return o.numValidOutputs.dispose(),{selectedIndices:o.selectedIndices,selectedScores:o.selectedScores}}function wh(t,e,n,r,s,a,i=!1,o=!1){const u=Array.from(e).map((t,e)=>({score:t,boxIndex:e,suppressBeginIndex:0})).filter(t=>t.score>s).sort(Sh),l=a>0?-.5/a:0,c=[],h=[];while(c.length<n&&u.length>0){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let u=c.length-1;u>=i;--u){const n=vh(t,a,c[u]);if(n>=r){o=!0;break}if(e.score=e.score*Oh(r,l,n),e.score<=s)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(a),h.push(e.score)):e.score>s&&fh(u,e,Sh))}const d=c.length;return o&&(c.fill(0,d),h.fill(0,d)),{selectedIndices:Object(kt["h"])(c,"int32"),selectedScores:Object(kt["h"])(h,"float32"),numValidOutputs:Object(kt["f"])(d,"int32")}}function vh(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(u,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Oh(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Sh(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),pt["assert"](0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),pt["assert"](2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),pt["assert"](4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),pt["assert"](1===e.rank,()=>"scores must be a 1D tensor"),pt["assert"](e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),pt["assert"](0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ih(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Object(dt["a"])(t,"boxes","nonMaxSuppression"),i=Object(dt["a"])(e,"scores","nonMaxSuppression"),o=Ch(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return b["a"].runKernelFunc(t=>t.nonMaxSuppression(a,i,n,r,s),{boxes:a,scores:i},null,H,u)}const kh=Object(It["a"])({nonMaxSuppression_:Ih});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(t,e,n=!1){const r=Object(dt["a"])(t,"images","resizeBilinear");pt["assert"](3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),pt["assert"](2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,u=(t,e)=>(e([s]),t.resizeBilinear(s,i,o,n)),l=(t,e)=>({x:()=>b["a"].runKernelFunc(r=>r.resizeBilinearBackprop(t,e[0],n),{})}),c=b["a"].runKernelFunc(u,{x:s},l,"ResizeBilinear",{alignCorners:n,newHeight:i,newWidth:o});return a?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}function Eh(t,e,n=!1){const r=Object(dt["a"])(t,"images","resizeNearestNeighbor");pt["assert"](3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),pt["assert"](2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),pt["assert"]("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,u=(t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n)),l=(t,e)=>({batchImages:()=>b["a"].runKernelFunc(r=>r.resizeNearestNeighborBackprop(t,e[0],n),{})}),c=b["a"].runKernelFunc(u,{batchImages:s},l);return a?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}async function Ah(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Object(dt["a"])(t,"boxes","nonMaxSuppressionAsync"),i=Object(dt["a"])(e,"scores","nonMaxSuppressionAsync"),o=Ch(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],h=yh(l,c,n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),h}function $h(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Object(dt["a"])(t,"boxes","nonMaxSuppression"),o=Object(dt["a"])(e,"scores","nonMaxSuppression"),u=Ch(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},c=b["a"].runKernel("NonMaxSuppressionV5",{boxes:i,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}async function Rh(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Object(dt["a"])(t,"boxes","nonMaxSuppressionAsync"),o=Object(dt["a"])(e,"scores","nonMaxSuppressionAsync"),u=Ch(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],d=xh(c,h,n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),d}function Th(t,e,n,r,s,a){const i=Object(dt["a"])(t,"image","cropAndResize"),o=Object(dt["a"])(e,"boxes","cropAndResize","float32"),u=Object(dt["a"])(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=o.shape[0];pt["assert"](4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),pt["assert"](2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),pt["assert"](1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),pt["assert"](2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),pt["assert"](r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),pt["assert"]("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s);const c=(t,e)=>t.cropAndResize(i,o,u,r,s,a),h=b["a"].runKernelFunc(c,{images:i,boxes:o,boxInd:u},null,"CropAndResize",{method:s,extrapolationValue:a,cropSize:r});return h}const Dh=Object(It["a"])({resizeBilinear_:Nh}),Fh=Object(It["a"])({resizeNearestNeighbor_:Eh}),_h=Ah,jh=Object(It["a"])({nonMaxSuppressionWithScore_:$h}),zh=Rh,Mh=Object(It["a"])({cropAndResize_:Th}),Lh=(t,e)=>{const n=t>0;return!n||"linear"===e},Bh=(t,e,n)=>{if(null==n||"linear"===n)return t;if("relu"===n)return t.mul(e.step());throw new Error(`Gradient for activation ${n} has not been implemented yet.`)},Ph=(t,e)=>{let n=e;const r=ot(t.shape,e.shape);return r.length>0&&(n=n.sum(r)),n.reshape(t.shape)},Wh=(t,e,n)=>{if("linear"===e)return t;if("relu"===e)return Ul(t);if("elu"===e)return Pl(t);if("relu6"===e)return Gl(t);if("prelu"===e)return Vl(t,n);throw new Error(`Unknown fused activation ${e}.`)};function Vh({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Lh(b["a"].state.gradientDepth,a)){let o=Kt(t,e,n,r);return null!=s&&(o=yn(o,s)),Wh(o,a,i)}let o=Object(dt["a"])(t,"a","fused matMul"),u=Object(dt["a"])(e,"b","fused matMul");[o,u]=Object(ht["makeTypesMatch"])(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=o.shape.slice(0,-2),f=u.shape.slice(0,-2),m=pt["sizeFromShape"](p),g=pt["sizeFromShape"](f);pt["assert"](o.rank>=2&&u.rank>=2&&o.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`),pt["assert"](pt["arraysEqual"](p,f),()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and `+u.shape+" must match."),pt["assert"](l===c,()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=o.shape.slice(0,-2).concat([h,d]),x=n?o.as3D(m,l,h):o.as3D(m,h,l),w=r?u.as3D(g,d,c):u.as3D(g,c,d);let v,O;null!=s&&(v=Object(dt["a"])(s,"bias","fused matMul"),[v]=Object(ht["makeTypesMatch"])(v,o),ut(y,v.shape)),null!=i&&(O=Object(dt["a"])(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[i,o,u]=e,l=Bh(t,u,a);let c={};return null!=s&&(c={bias:()=>Ph(v,l)}),n||r?!n&&r?Object.assign({a:()=>l.matMul(o,!1,!1),b:()=>l.matMul(i,!0,!1)},c):n&&!r?Object.assign({a:()=>o.matMul(l,!1,!0),b:()=>i.matMul(l,!1,!1)},c):Object.assign({a:()=>o.matMul(l,!0,!0),b:()=>l.matMul(i,!0,!0)},c):Object.assign({a:()=>l.matMul(o,!1,!0),b:()=>i.matMul(l,!0,!1)},c)},C={a:x,b:w};null!=s&&(C.bias=v),null!=i&&(C.preluActivationWeights=O);const I=[x,w],k=[!0],N=b["a"].runKernelFunc((t,e)=>{const s=t.fusedBatchMatMul({a:x,b:w,transposeA:n,transposeB:r,bias:v,activation:a,preluActivationWeights:O});return e([x,w,s]),s},C,S,"_FusedMatMul",{transposeA:n,transposeB:r,activation:a},I,k);return N.reshape(y)}function Uh({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Lh(b["a"].state.gradientDepth,u)){let c=Ke(t,e,n,r,s,a,i);return null!=o&&(c=yn(c,o)),Wh(c,u,l)}const c=Object(dt["a"])(t,"x","conv2d"),h=Object(dt["a"])(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),pt["assert"](4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),pt["assert"](4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=i&&pt["assert"](pt["isInt"](r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),pt["assert"](d.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`),pt["assert"](Be(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),pt["assert"]("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const f=Ee(d.shape,h.shape,n,a,r,i);let m,g;null!=o&&(m=Object(dt["a"])(o,"bias","fused conv2d"),[m]=Object(ht["makeTypesMatch"])(m,c),ut(f.outShape,m.shape)),null!=l&&(g=Object(dt["a"])(l,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,i,l]=e,c=Bh(t,l,u);pt["assert"](Le(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let h={};return null!=o&&(h={bias:()=>Ph(m,c)}),Object.assign({x:()=>Ge(i.shape,c,s,n,r),filter:()=>Ve(i,c,s.shape,n,r)},h)},x={x:d,filter:h};null!=o&&(x.bias=m),null!=l&&(x.preluActivationWeights=g);const w=[h,d],v=[!0],O=b["a"].runKernelFunc((t,e)=>{const n=t.fusedConv2d({input:d,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g});return e([h,d,n]),n},x,y,"FusedConv2D",{convInfo:f,activation:u},w,v);return p?O.as3D(O.shape[1],O.shape[2],O.shape[3]):O}function Gh({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===Lh(b["a"].state.gradientDepth,u)){let c=go(t,e,n,r,s,a,i);return null!=o&&(c=yn(c,o)),Wh(c,u,l)}const c=Object(dt["a"])(t,"x","depthwiseConv2d"),h=Object(dt["a"])(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),pt["assert"](4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),pt["assert"](4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),pt["assert"](d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==a&&(a=[1,1]),pt["assert"](Be(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&pt["assert"](pt["isInt"](r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const f=Ee(d.shape,h.shape,n,a,r,i,!0);let m,g;null!=o&&(m=Object(dt["a"])(o,"bias","fused conv2d"),[m]=Object(ht["makeTypesMatch"])(m,c),ut(f.outShape,m.shape)),null!=l&&(g=Object(dt["a"])(l,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{pt["assert"](Le(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[n,r,s]=e,i=Bh(t,s,u);let l={};return null!=o&&(l={bias:()=>Ph(m,i)}),Object.assign({x:()=>sn(r.shape,i,n,f),filter:()=>nn(r,i,n.shape,f)},l)},x={x:d,filter:h};null!=o&&(x.bias=m),null!=l&&(x.preluActivationWeights=g);const w=[h,d],v=[!0],O=b["a"].runKernelFunc((t,e)=>{const n=t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g});return e([h,d,n]),n},x,y,"FusedDepthwiseConv2D",{convInfo:f,activation:u},w,v);return p?O.as3D(O.shape[1],O.shape[2],O.shape[3]):O}const qh=Object(It["a"])({fusedMatMul_:Vh}),Hh=Object(It["a"])({fusedConv2d_:Uh}),Kh=Object(It["a"])({fusedDepthwiseConv2d_:Gh});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xh extends $i{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return dn(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Qt(t,e)}dispose(){null!=this.iterations_&&dn(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(kt["f"])(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Xh,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Jh extends Xh{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=b["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=b["a"].registeredVariables[e],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:hn(()=>Object(kt["p"])(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:hn(()=>Object(kt["p"])(r).variable(s))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;hn(()=>{const t=i.mul(this.rho).add(a.square().mul(1-this.rho)),e=o.add(this.epsilon).sqrt().div(i.add(this.epsilon).sqrt()).mul(a),n=o.mul(this.rho).add(e.square().mul(1-this.rho));i.assign(t),o.assign(n);const s=e.mul(-this.learningRate).add(r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(dn(this.accumulatedGrads.map(t=>t.variable)),dn(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e["learningRate"],e["rho"],e["epsilon"])}}Jh.className="Adadelta",Ti(Jh);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Yh extends Xh{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=b["a"].registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:hn(()=>Object(kt["a"])(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;hn(()=>{const t=a.add(s.square());a.assign(t);const e=s.div(t.add(b["a"].backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&dn(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e["learningRate"],e["initialAccumulatorValue"])}}Yh.className="Adagrad",Ti(Yh);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zh extends Xh{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hn(()=>{this.accBeta1=Object(kt["f"])(e).variable(),this.accBeta2=Object(kt["f"])(n).variable()}),null==r&&(this.epsilon=b["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);hn(()=>{const n=bs(1,this.accBeta1),r=bs(1,this.accBeta2);e.forEach((e,s)=>{const a=b["a"].registeredVariables[e],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:hn(()=>Object(kt["p"])(a).variable(i))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:e+"/v",variable:hn(()=>Object(kt["p"])(a).variable(i))});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=u.mul(this.beta1).add(o.mul(1-this.beta1)),h=l.mul(this.beta2).add(o.square().mul(1-this.beta2)),d=c.div(n),p=h.div(r);u.assign(c),l.assign(h);const f=d.div(p.sqrt().add(this.epsilon)).mul(-this.learningRate).add(a);a.assign(f)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&dn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&dn(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),hn(()=>{this.accBeta1.assign(os(this.beta1,this.iterations_+1)),this.accBeta2.assign(os(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e["learningRate"],e["beta1"],e["beta2"],e["epsilon"])}}Zh.className="Adam",Ti(Zh);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Qh extends Xh{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hn(()=>{this.iteration=Object(kt["f"])(0).variable(),this.accBeta1=Object(kt["f"])(e).variable()}),null==r&&(this.epsilon=b["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);hn(()=>{const n=bs(1,this.accBeta1),r=ds(-this.learningRate,this.iteration.mul(this.decay).add(1));e.forEach((e,s)=>{const a=b["a"].registeredVariables[e],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:Object(kt["p"])(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:e+"/v",variable:Object(kt["p"])(a).variable(i)});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=u.mul(this.beta1).add(o.mul(1-this.beta1)),h=l.mul(this.beta2),d=o.abs(),p=h.maximum(d);u.assign(c),l.assign(p);const f=r.div(n).mul(c.div(p.add(this.epsilon))).add(a);a.assign(f)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&dn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&dn(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e["learningRate"],e["beta1"],e["beta2"],e["epsilon"],e["decay"])}}Qh.className="Adamax",Ti(Qh);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class td extends Xh{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=b["a"].registeredVariables[e];hn(()=>{const t=this.c.mul(r).add(s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=pn(Object(kt["f"])(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),0!==t.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e["learningRate"])}}td.className="SGD",Ti(td);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ed extends td{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(kt["f"])(this.momentum)}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=b["a"].registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:hn(()=>Object(kt["p"])(r).variable(t))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&hn(()=>{let t;const e=this.m.mul(s).add(a);t=this.useNesterov?this.c.mul(a.add(e.mul(this.m))).add(r):this.c.mul(e).add(r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&dn(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e["learningRate"],e["momentum"],e["useNesterov"])}}ed.className="Momentum",Ti(ed);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nd extends Xh{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=b["a"].backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=b["a"].registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:hn(()=>Object(kt["p"])(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:hn(()=>Object(kt["p"])(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:hn(()=>Object(kt["p"])(r).variable(s))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hn(()=>{const t=i.mul(this.decay).add(a.square().mul(1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=e.mul(this.decay).add(a.mul(1-this.decay)),u=o.mul(this.momentum).add(a.mul(this.learningRate).div(t.sub(s.square().add(this.epsilon)).sqrt()));i.assign(t),e.assign(s),o.assign(u);const l=r.sub(u);r.assign(l)}else{const t=i.mul(this.decay).add(a.square().mul(1-this.decay)),e=o.mul(this.momentum).add(a.mul(this.learningRate).div(t.add(this.epsilon).sqrt()));i.assign(t),o.assign(e);const n=r.sub(e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&dn(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&dn(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&dn(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e["learningRate"],e["decay"],e["momentum"],e["epsilon"],e["centered"])}}nd.className="RMSProp",Ti(nd);var rd=n("23bf");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sd{static sgd(t){return new td(t)}static momentum(t,e,n=!1){return new ed(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new nd(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Zh(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Jh(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Qh(t,e,n,r,s)}static adagrad(t,e=.1){return new Yh(t,e)}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ad={sgd:sd.sgd,momentum:sd.momentum,adadelta:sd.adadelta,adagrad:sd.adagrad,rmsprop:sd.rmsprop,adamax:sd.adamax,adam:sd.adam},id=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t())();
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function od(){return new Promise(t=>id(()=>t()))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function ld(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function cd(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let a=1;a<t.length;++a)a<=e.length?r?s.push(e[a-1]*t[a]):s.push(t[a]/e[a-1]):s.push(t[a]);return s}function hd(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function dd(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pd=.3275911,fd=.254829592,md=-.284496736,gd=1.421413741,bd=-1.453152027,yd=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xd(...t){Object(on["b"])().getBool("IS_TEST")||console.warn(...t)}function wd(...t){Object(on["b"])().getBool("IS_TEST")||console.log(...t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vd(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Od(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Sd(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function Cd(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function Id(t,e){const n=t[2*e],r=t[2*e+1];return{real:n,imag:r}}function kd(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Nd(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Ed(t,e,n){const r=(n?2:-2)*Math.PI*(t/e),s=Math.cos(r),a=Math.sin(r);return{real:s,imag:a}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(kt["o"])(t.shape),r=t.toFloat(),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!Object(pt["hasEncodingLoss"])(t.dtype,e))return b["a"].makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=r.cast(e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(kt["f"])(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function $d(t,e){return b["a"].makeTensorFromDataId(t.dataId,e,t.dtype)}function Rd(t,e,n){const r=(e-t)/(n-1),s=Object(pt["makeZerosTypedArray"])(n,"float32");s[0]=t;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return Object(kt["h"])(s,"float32")}var Td=n("7ed6");
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dd(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map(e=>{const a=[...s];a[n]=e;const i=t.slice(r,a);return r[n]+=e,i})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=zt(n,t.dtype);for(let s=0;s<r.values.length;++s){const e=r.indexToLoc(s),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const a=t.locToIndex(n);r.values[s]=t.values[a]}return r.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _d(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=Object(pt["getTypedArrayFromDType"])(n,i*r),l=Object(pt["getTypedArrayFromDType"])("int32",i*r);for(let h=0;h<i;h++){const e=h*o,n=t.subarray(e,e+o),s=[];for(let t=0;t<n.length;t++)s.push({value:n[t],index:t});s.sort((t,e)=>e.value-t.value);const a=h*r,i=u.subarray(a,a+r),c=l.subarray(a,a+r);for(let t=0;t<r;t++)i[t]=s[t].value,c[t]=s[t].index}const c=e.slice();return c[c.length-1]=r,[Object(kt["g"])(u,c,n),Object(kt["g"])(l,c,"int32")]}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jd=1e-7,zd=1e-4;class Md{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Ld{time(t){return Bd("time")}read(t){return Bd("read")}readSync(t){return Bd("readSync")}numDataIds(){return Bd("numDataIds")}disposeData(t){return Bd("disposeData")}write(t,e,n){return Bd("write")}move(t,e,n,r){return Bd("move")}memory(){return Bd("memory")}floatPrecision(){return Bd("floatPrecision")}epsilon(){return 32===this.floatPrecision()?jd:zd}batchMatMul(t,e,n,r){return Bd("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return Bd("fusedBatchMatMul")}slice(t,e,n){return Bd("slice")}stridedSlice(t,e,n,r){return Bd("stridedSlice")}unstack(t,e){return Bd("unstack")}reverse(t,e){return Bd("reverse")}concat(t,e){return Bd("concat")}neg(t){return Bd("neg")}add(t,e){return Bd("add")}addN(t){return Bd("addN")}subtract(t,e){return Bd("subtract")}multiply(t,e){return Bd("multiply")}realDivide(t,e){return Bd("realDivide")}floorDiv(t,e){return Bd("floorDiv")}sum(t,e){return Bd("sum")}prod(t,e){return Bd("prod")}unsortedSegmentSum(t,e,n){return Bd("unsortedSegmentSum")}argMin(t,e){return Bd("argMin")}argMax(t,e){return Bd("argMax")}equal(t,e){return Bd("equal")}notEqual(t,e){return Bd("notEqual")}less(t,e){return Bd("less")}lessEqual(t,e){return Bd("lessEqual")}greater(t,e){return Bd("greater")}greaterEqual(t,e){return Bd("greaterEqual")}logicalNot(t){return Bd("logicalNot")}logicalAnd(t,e){return Bd("logicalAnd")}logicalOr(t,e){return Bd("logicalOr")}where(t){return Bd("where")}select(t,e,n){return Bd("select")}topk(t,e,n){return Bd("topk")}min(t,e){return Bd("min")}minimum(t,e){return Bd("minimum")}mod(t,e){return Bd("mod")}max(t,e){return Bd("max")}maximum(t,e){return Bd("maximum")}all(t,e){return Bd("all")}any(t,e){return Bd("any")}squaredDifference(t,e){return Bd("squaredDifference")}ceil(t){return Bd("ceil")}floor(t){return Bd("floor")}round(t){return Bd("round")}sign(t){return Bd("sign")}isNaN(t){return Bd("isNaN")}isInf(t){return Bd("isInf")}isFinite(t){return Bd("isFinite")}pow(t,e){return Bd("pow")}exp(t){return Bd("exp")}expm1(t){return Bd("expm1")}softmax(t,e){return Bd("softmax")}log(t){return Bd("log")}log1p(t){return Bd("log1p")}sqrt(t){return Bd("sqrt")}rsqrt(t){return Bd("rsqrt")}square(t){return Bd("square")}reciprocal(t){return Bd("reciprocal")}relu(t){return Bd("relu")}relu6(t){return Bd("relu6")}prelu(t,e){return Bd("prelu")}elu(t){return Bd("elu")}eluDer(t,e){return Bd("eluDer")}selu(t){return Bd("selu")}int(t){return Bd("int")}clip(t,e,n){return Bd("clip")}abs(t){return Bd("abs")}complexAbs(t){return Bd("complexAbs")}sigmoid(t){return Bd("sigmoid")}softplus(t){return Bd("softplus")}sin(t){return Bd("sin")}cos(t){return Bd("cos")}tan(t){return Bd("tan")}asin(t){return Bd("asin")}acos(t){return Bd("acos")}atan(t){return Bd("atan")}atan2(t,e){return Bd("atan2")}sinh(t){return Bd("sinh")}cosh(t){return Bd("cosh")}tanh(t){return Bd("tanh")}asinh(t){return Bd("asinh")}acosh(t){return Bd("acosh")}atanh(t){return Bd("atanh")}erf(t){return Bd("erf")}step(t,e){return Bd("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return Bd("fusedConv2d")}conv2d(t,e,n){return Bd("conv2d")}conv2dDerInput(t,e,n){return Bd("conv2dDerInput")}conv2dDerFilter(t,e,n){return Bd("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return Bd("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return Bd("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return Bd("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return Bd("depthwiseConv2DDerFilter")}conv3d(t,e,n){return Bd("conv3d")}conv3dDerInput(t,e,n){return Bd("conv3dDerInput")}conv3dDerFilter(t,e,n){return Bd("conv3dDerFilter")}maxPool(t,e){return Bd("maxPool")}maxPoolBackprop(t,e,n,r){return Bd("maxPoolBackprop")}avgPool(t,e){return Bd("avgPool")}avgPoolBackprop(t,e,n){return Bd("avgPoolBackprop")}avgPool3d(t,e){return Bd("avgPool3d")}avgPool3dBackprop(t,e,n){return Bd("avgPool3dBackprop")}maxPool3d(t,e){return Bd("maxPool3d")}maxPool3dBackprop(t,e,n,r){return Bd("maxPool3dBackprop")}reshape(t,e){return Bd("reshape")}cast(t,e){return Bd("cast")}tile(t,e){return Bd("tile")}pad(t,e,n){return Bd("pad")}transpose(t,e){return Bd("transpose")}gather(t,e,n){return Bd("gather")}gatherND(t,e){return Bd("gatherND")}scatterND(t,e,n){return Bd("scatterND")}batchToSpaceND(t,e,n){return Bd("batchToSpaceND")}spaceToBatchND(t,e,n){return Bd("spaceToBatchND")}resizeBilinear(t,e,n,r){return Bd("resizeBilinear")}resizeBilinearBackprop(t,e,n){return Bd("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return Bd("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return Bd("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,a){return Bd("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return Bd("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,a,i){return Bd("LRNGrad")}multinomial(t,e,n,r){return Bd("multinomial")}oneHot(t,e,n,r){return Bd("oneHot")}cumsum(t,e,n,r){return Bd("cumsum")}nonMaxSuppression(t,e,n,r,s){return Bd("nonMaxSuppression")}fft(t){return Bd("fft")}ifft(t){return Bd("ifft")}complex(t,e){return Bd("complex")}real(t){return Bd("real")}imag(t){return Bd("imag")}cropAndResize(t,e,n,r,s,a){return Bd("cropAndResize")}depthToSpace(t,e,n){return Bd("depthToSpace")}split(t,e,n){return Bd("split")}sparseToDense(t,e,n,r){return Bd("sparseToDense")}diag(t){return Bd("diag")}fill(t,e,n){return Bd("fill")}onesLike(t){return Bd("onesLike")}zerosLike(t){return Bd("zerosLike")}linspace(t,e,n){return Bd("linspace")}dispose(){return Bd("dispose")}}function Bd(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ft["a"].prototype.add=function(t){return this.throwIfDisposed(),yn(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Li(this,t,e,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.broadcastTo=function(t){return this.throwIfDisposed(),Xi(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Ts(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.max=function(t,e){return this.throwIfDisposed(),Yo(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof ft["a"]&&(t=[t]),Et([this,...t],e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),ao(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Ke(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),oo(this,t,e,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),fo(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),go(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.depthwiseConv2D=function(t,e,n,r,s,a){return un("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),go(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.div=function(t){return this.throwIfDisposed(),ds(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.divNoNan=function(t){return this.throwIfDisposed(),Do(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.dot=function(t){return this.throwIfDisposed(),_o(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.equal=function(t){return this.throwIfDisposed(),zo(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.greater=function(t){return this.throwIfDisposed(),Po(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.greaterEqual=function(t){return this.throwIfDisposed(),Vo(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.less=function(t){return this.throwIfDisposed(),Go(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.lessEqual=function(t){return this.throwIfDisposed(),Ho(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Xo(this,t,e,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Kt(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),wi(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.notEqual=function(t){return this.throwIfDisposed(),eu(this,t)},
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.pad=function(t,e){return this.throwIfDisposed(),Ls(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Iu(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.split=function(t,e){return this.throwIfDisposed(),Ce(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.squaredDifference=function(t){return this.throwIfDisposed(),Nu(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Yt(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.sub=function(t){return this.throwIfDisposed(),bs(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.tile=function(t){return this.throwIfDisposed(),xs(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ft["a"].prototype.transpose=function(t){return this.throwIfDisposed(),Ns(this,t)},
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(ft["e"])(f)},fb6a:function(t,e,n){"use strict";var r=n("23e7"),s=n("861d"),a=n("e8b5"),i=n("23cb"),o=n("50c4"),u=n("fc6a"),l=n("8418"),c=n("b622"),h=n("1dde"),d=n("ae40"),p=h("slice"),f=d("slice",{ACCESSORS:!0,0:0,1:2}),m=c("species"),g=[].slice,b=Math.max;r({target:"Array",proto:!0,forced:!p||!f},{slice:function(t,e){var n,r,c,h=u(this),d=o(h.length),p=i(t,d),f=i(void 0===e?d:e,d);if(a(h)&&(n=h.constructor,"function"!=typeof n||n!==Array&&!a(n.prototype)?s(n)&&(n=n[m],null===n&&(n=void 0)):n=void 0,n===Array||void 0===n))return g.call(h,p,f);for(r=new(void 0===n?Array:n)(b(f-p,0)),c=0;p<f;p++,c++)p in h&&l(r,c,h[p]);return r.length=c,r}})},fdbc:function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}}}]);
//# sourceMappingURL=chunk-120bb596.7ab91966.js.map